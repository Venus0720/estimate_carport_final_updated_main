import * as THREE from "three";
// import verticalTexture from '../assets/Roof/verticalTexture2.jpg';
import verticalTexture from '../assets/images/imgTextures/buildingImages/verticalTexture.jpeg';
import horizontalTexture from '../assets/images/imgTextures/buildingImages/horizantalTexture.jpeg';
import { params, const_var,} from '../redux/reducers/reducer';
import LeantoRoof from '../3D_Objects/LeantoRoof.js';


export const addRoofPitchIntoBuilding = ()=>{

	//Globle Variables
	var legDistance = 5;

	// // Left Part Of Center Building
	//   var leftPart = const_var.scene.getObjectByName("b_t_M_L").children = [];
	// //   Right Part Of Center Building
	//   var rightPart = const_var.scene.getObjectByName("b_t_M_R").children = [];  

	let leantoRoofObject = new LeantoRoof();
	leantoRoofObject.LeantoRoof(const_var, params);
	
	// Bows Geometry And Material
	var bowGeometry = new THREE.BoxGeometry(0.98,0.6,0.2);
	var bowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	var bowMaterialt = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});

	// Curved Bows Geometry And Material
   var curvedBowGeometry = new THREE.BoxGeometry(0.98,0.6,0.2);
   var curvedBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});

	//Building Roof curved  Trims Geometry And Material
	var trimGeometry = new THREE.BoxGeometry(0.98,0.6,0.2);
	var trimMaterial = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});


	//Variable For Adjust Roof Middle Height With Roof Pitch
	var roofMiddleHeight = {
					   "1":{"6":0.25,"7":0.29165,"8":0.33335,"9":0.375,"10":0.41665,"11":0.45835,"12":0.5,"13":0.5417,"14":0.5833,"15":0.6250,"16":0.6667,"17":0.7083,"18":0.7500,"19":0.7917,"20":0.8333,"21":0.8750,"22":0.9167,"23":0.9583,"24":1,"25":1.0417,"26":1.0833,"27":1.1250,"28":1.1667,"29":1.2083,"30":1.2500,"31":1.2917,"32":1.3333,"33":1.3750,"34":1.4167,"35":1.4583,"36":1.5000,"37":1.5417,"38":1.5833,"39":1.6250,"40":1.6667,"41":1.7083,"42":1.7500,"43":1.7917,"44":1.8333,"45":1.8750,"46":1.9167,"47":1.9583,"48":2.00,"49":2.0417,"50":2.0833,"51":2.1250,"52":2.1667,"53":2.2083,"54":2.2500,"55":2.2917,"56":2.3333,"57":2.3750,"58":2.4167,"59":2.4583,"60":2.5000,"61":2.5417,"62":2.5833,"63":2.6250,"64":2.6667,"65":2.7083,"66":2.7500,"67":2.7917,"68":2.8333,"69":2.8750,"70":2.9167,"71":2.9583,"72":3.00,"73":3.0417,"74":3.0833,"75":3.1250,"76":3.1667,"77":3.2083,"78":3.2500,"79":3.2917,"80":3.3330},
					   "2":{"6":0.50,"7":0.58335,"8":0.66665,"9":0.750,"10":0.83335,"11":0.91665,"12":1.0,"13":1.0833,"14":1.1667,"15":1.2500,"16":1.3333,"17":1.4167,"18":1.5000,"19":1.5833,"20":1.6667,"21":1.7500,"22":1.8333,"23":1.9167,"24":2,"25":2.0833,"26":2.1667,"27":2.2500,"28":2.3333,"29":2.4167,"30":2.5000,"31":2.5833,"32":2.6667,"33":2.7500,"34":2.8333,"35":2.9167,"36":3.0000,"37":3.0833,"38":3.1667,"39":3.2500,"40":3.3330,"41":3.4170,"42":3.5000,"43":3.5830,"44":3.6670,"45":3.7500,"46":3.8330,"47":3.9170,"48":4.00,"49":4.0830,"50":4.1670,"51":4.2500,"52":4.3330,"53":4.4170,"54":4.5000,"55":4.5830,"56":4.6670,"57":4.7500,"58":4.8330,"59":4.9170,"60":5.0000,"61":5.0830,"62":5.1670,"63":5.2500,"64":5.3330,"65":5.4170,"66":5.5000,"67":5.5830,"68":5.6670,"69":5.7500,"70":5.8330,"71":5.9170,"72":6.00,"73":6.0830,"74":6.1670,"75":6.2500,"76":6.3330,"77":6.4170,"78":6.5000,"79":6.5830,"80":6.6670},
					   "3":{"6":0.75,"7":0.87500,"8":1.00000,"9":1.125,"10":1.25000,"11":1.37500,"12":1.5,"13":1.6250,"14":1.7500,"15":1.8750,"16":2.0000,"17":2.1250,"18":2.2500,"19":2.3750,"20":2.5000,"21":2.6250,"22":2.7500,"23":2.8750,"24":3,"25":3.1250,"26":3.2500,"27":3.3750,"28":3.5000,"29":3.6250,"30":3.7500,"31":3.8750,"32":4.0000,"33":4.1250,"34":4.2500,"35":4.3750,"36":4.5000,"37":4.6250,"38":4.7500,"39":4.8750,"40":5.0000,"41":5.1250,"42":5.2500,"43":5.3750,"44":5.5000,"45":5.6250,"46":5.7500,"47":5.8750,"48":6.00,"49":6.1250,"50":6.2500,"51":6.3750,"52":6.5000,"53":6.6250,"54":6.7500,"55":6.8750,"56":7.0000,"57":7.1250,"58":7.2500,"59":7.3750,"60":7.5000,"61":7.6250,"62":7.7500,"63":7.8750,"64":8.0000,"65":8.1250,"66":8.2500,"67":8.3750,"68":8.5000,"69":8.6250,"70":8.7500,"71":8.8750,"72":9.00,"73":9.1250,"74":9.2500,"75":9.3750,"76":9.5000,"77":9.6250,"78":9.7500,"79":9.8750,"80":10.000},
					   "4":{"6":1.00,"7":1.16665,"8":1.33335,"9":1.500,"10":1.66650,"11":1.83350,"12":2.0,"13":2.1667,"14":2.3333,"15":2.5000,"16":2.6667,"17":2.8333,"18":3.0000,"19":3.1667,"20":3.3330,"21":3.5000,"22":3.6670,"23":3.8330,"24":4,"25":4.1670,"26":4.3330,"27":4.5000,"28":4.6670,"29":4.8330,"30":5.0000,"31":5.1670,"32":5.3330,"33":5.5000,"34":5.6670,"35":5.8330,"36":6.0000,"37":6.1670,"38":6.3330,"39":6.5000,"40":6.6670,"41":6.8330,"42":7.0000,"43":7.1670,"44":7.3330,"45":7.5000,"46":7.6670,"47":7.8330,"48":8.00,"49":8.1670,"50":8.3330,"51":8.5000,"52":8.6670,"53":8.8330,"54":9.0000,"55":9.1670,"56":9.3330,"57":9.5000,"58":9.6670,"59":9.8330,"60":10.000,"61":10.167,"62":10.333,"63":10.500,"64":10.667,"65":10.833,"66":11.000,"67":11.167,"68":11.333,"69":11.500,"70":11.667,"71":11.833,"72":12.0,"73":12.167,"74":12.333,"75":12.500,"76":12.667,"77":12.833,"78":13.000,"79":13.167,"80":13.333},
					   "5":{"6":1.25,"7":1.45835,"8":1.66650,"9":1.875,"10":2.08350,"11":2.29150,"12":2.5,"13":2.7083,"14":2.9167,"15":3.1250,"16":3.3330,"17":3.5420,"18":3.7500,"19":3.9580,"20":4.1670,"21":4.3750,"22":4.5830,"23":4.7920,"24":5,"25":5.2080,"26":5.4170,"27":5.6250,"28":5.8330,"29":6.0420,"30":6.2500,"31":6.4580,"32":6.6670,"33":6.8750,"34":7.0830,"35":7.2920,"36":7.5000,"37":7.7080,"38":7.9170,"39":8.1250,"40":8.3330,"41":8.5420,"42":8.7500,"43":8.9580,"44":9.1670,"45":9.3750,"46":9.5830,"47":9.7920,"48":10.0,"49":10.208,"50":10.417,"51":10.625,"52":10.833,"53":11.042,"54":11.250,"55":11.458,"56":11.667,"57":11.875,"58":12.083,"59":12.292,"60":12.500,"61":12.708,"62":12.917,"63":13.125,"64":13.333,"65":13.542,"66":13.750,"67":13.958,"68":14.167,"69":14.375,"70":14.583,"71":14.792,"72":15.0,"73":15.208,"74":15.417,"75":15.625,"76":15.833,"77":16.042,"78":16.250,"79":16.458,"80":16.667},
					   "6":{"6":1.50,"7":1.75000,"8":2.00000,"9":2.250,"10":2.50000,"11":2.75000,"12":3.0,"13":3.2500,"14":3.5000,"15":3.7500,"16":4.0000,"17":4.2500,"18":4.5000,"19":4.7500,"20":5.0000,"21":5.2500,"22":5.5000,"23":5.7500,"24":6,"25":6.2500,"26":6.5000,"27":6.7500,"28":7.0000,"29":7.2500,"30":7.5000,"31":7.7500,"32":8.0000,"33":8.2500,"34":8.5000,"35":8.7500,"36":9.0000,"37":9.2500,"38":9.5000,"39":9.7500,"40":10.000,"41":10.250,"42":10.500,"43":10.750,"44":11.000,"45":11.250,"46":11.500,"47":11.750,"48":12.0,"49":12.250,"50":12.500,"51":12.750,"52":13.000,"53":13.250,"54":13.500,"55":13.750,"56":14.000,"57":14.250,"58":14.500,"59":14.750,"60":15.000,"61":15.250,"62":15.500,"63":15.750,"64":16.000,"65":16.250,"66":16.500,"67":16.750,"68":17.000,"69":17.250,"70":17.500,"71":17.750,"72":18.0,"73":18.250,"74":18.500,"75":18.750,"76":19.000,"77":19.250,"78":19.500,"79":19.750,"80":20.000}
				    };

	//Variable For Adjust Scale With Roof Pitch
	var bowsScale = {
					   "1":{"6":0.000,"7":0.050,"8":0.10,"9":0.100,"10":0.100,"11":0.100,"12":0.00,"13":0.00,"14":0.10,"15":0.15,"16":0.20,"17":0.20,"18":0.20,"19":0.20,"20":0.20,"21":0.20,"22":0.20,"23":0.20,"24":0.20,"25":0.20,"26":0.20,"27":0.20,"28":0.20,"29":0.20,"30":0.20,"31":0.20,"32":0.25,"33":0.25,"34":0.25,"35":0.25,"36":0.30,"37":0.30,"38":0.30,"39":0.30,"40":0.35,"41":0.35,"42":0.35,"43":0.35,"44":0.40,"45":0.45,"46":0.50,"47":0.55,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.65,"67":0.65,"68":0.65,"69":0.65,"70":0.70,"71":0.75,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
					   "2":{"6":0.050,"7":0.050,"8":0.10,"9":0.100,"10":0.100,"11":0.125,"12":0.10,"13":0.10,"14":0.10,"15":0.10,"16":0.20,"17":0.20,"18":0.20,"19":0.20,"20":0.20,"21":0.25,"22":0.25,"23":0.25,"24":0.30,"25":0.30,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,"31":0.40,"32":0.40,"33":0.45,"34":0.45,"35":0.45,"36":0.45,"37":0.50,"38":0.50,"39":0.55,"40":0.55,"41":0.55,"42":0.60,"43":0.65,"44":0.70,"45":0.75,"46":0.75,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.85,"53":0.85,"54":0.85,"55":0.85,"56":0.85,"57":0.85,"58":0.85,"59":0.85,"60":0.85,"61":0.90,"62":0.95,"63":0.95,"64":0.95,"65":0.95,"66":1.00,"67":1.05,"68":1.10,"69":1.15,"70":1.20,"71":1.20,"72":1.20,"73":1.20,"74":1.20,"75":1.20,"76":1.20,"77":1.20,"78":1.20,"79":1.20,"80":1.25},
					   "3":{"6":0.100,"7":0.125,"8":0.15,"9":0.200,"10":0.225,"11":0.250,"12":0.20,"13":0.20,"14":0.25,"15":0.25,"16":0.30,"17":0.35,"18":0.40,"19":0.45,"20":0.45,"21":0.45,"22":0.50,"23":0.50,"24":0.50,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,"31":0.80,"32":0.80,"33":0.80,"34":0.85,"35":0.85,"36":0.90,"37":0.90,"38":0.90,"39":0.90,"40":0.90,"41":0.90,"42":0.95,"43":1.00,"44":1.05,"45":1.10,"46":1.15,"47":1.15,"48":1.20,"49":1.25,"50":1.25,"51":1.30,"52":1.30,"53":1.30,"54":1.30,"55":1.30,"56":1.30,"57":1.35,"58":1.40,"59":1.40,"60":1.40,"61":1.45,"62":1.45,"63":1.50,"64":1.50,"65":1.55,"66":1.55,"67":1.60,"68":1.65,"69":1.70,"70":1.75,"71":1.80,"72":1.85,"73":1.90,"74":1.90,"75":1.90,"76":1.90,"77":1.90,"78":1.90,"79":1.90,"80":1.95},
					   "4":{"6":0.175,"7":0.200,"8":0.25,"9":0.300,"10":0.350,"11":0.375,"12":0.35,"13":0.35,"14":0.40,"15":0.45,"16":0.50,"17":0.55,"18":0.60,"19":0.65,"20":0.70,"21":0.70,"22":0.75,"23":0.75,"24":0.80,"25":0.85,"26":0.85,"27":0.90,"28":0.95,"29":1.00,"30":1.05,"31":1.10,"32":1.15,"33":1.20,"34":1.25,"35":1.25,"36":1.35,"37":1.35,"38":1.35,"39":1.35,"40":1.35,"41":1.40,"42":1.45,"43":1.50,"44":1.55,"45":1.60,"46":1.65,"47":1.70,"48":1.75,"49":1.80,"50":1.85,"51":1.90,"52":1.90,"53":1.90,"54":1.90,"55":1.95,"56":2.00,"57":2.05,"58":2.10,"59":2.15,"60":2.20,"61":2.25,"62":2.30,"63":2.35,"64":2.40,"65":2.40,"66":2.40,"67":2.40,"68":2.40,"69":2.45,"70":2.50,"71":2.55,"72":2.60,"73":2.65,"74":2.70,"75":2.75,"76":2.85,"77":2.85,"78":2.85,"79":2.85,"80":2.85},
					   "5":{"6":0.250,"7":0.300,"8":0.35,"9":0.425,"10":0.475,"11":0.525,"12":0.50,"13":0.55,"14":0.60,"15":0.65,"16":0.70,"17":0.75,"18":0.85,"19":0.90,"20":0.95,"21":1.00,"22":1.05,"23":1.10,"24":1.15,"25":1.20,"26":1.25,"27":1.30,"28":1.35,"29":1.40,"30":1.45,"31":1.50,"32":1.55,"33":1.60,"34":1.65,"35":1.70,"36":1.75,"37":1.80,"38":1.85,"39":1.90,"40":1.95,"41":2.00,"42":2.05,"43":2.10,"44":2.15,"45":2.25,"46":2.30,"47":2.35,"48":2.40,"49":2.45,"50":2.50,"51":2.55,"52":2.60,"53":2.65,"54":2.70,"55":2.75,"56":2.85,"57":2.90,"58":2.95,"59":3.30,"60":3.05,"61":3.10,"62":3.15,"63":3.20,"64":3.25,"65":3.30,"66":3.35,"67":3.40,"68":3.45,"69":3.50,"70":3.55,"71":3.60,"72":3.65,"73":3.70,"74":3.75,"75":3.80,"76":3.85,"77":3.90,"78":3.95,"79":4.00,"80":4.05},
					   "6":{"6":0.350,"7":0.450,"8":0.50,"9":0.575,"10":0.650,"11":0.700,"12":0.70,"13":0.80,"14":0.90,"15":0.95,"16":1.00,"17":1.05,"18":1.15,"19":1.20,"20":1.30,"21":1.35,"22":1.40,"23":1.50,"24":1.60,"25":1.65,"26":1.70,"27":1.75,"28":1.85,"29":1.90,"30":2.00,"31":2.05,"32":2.10,"33":2.20,"34":2.30,"35":2.40,"36":2.50,"37":2.55,"38":2.60,"39":2.65,"40":2.70,"41":2.75,"42":2.80,"43":2.90,"44":2.95,"45":3.00,"46":3.10,"47":3.20,"48":3.30,"49":3.40,"50":3.50,"51":3.50,"52":3.50,"53":3.60,"54":3.70,"55":3.80,"56":3.80,"57":3.90,"58":4.00,"59":4.10,"60":4.20,"61":4.20,"62":4.30,"63":4.35,"64":4.40,"65":4.45,"66":4.50,"67":4.55,"68":4.60,"69":4.70,"70":4.80,"71":4.90,"72":5.00,"73":5.10,"74":5.15,"75":5.20,"76":5.25,"77":5.30,"78":5.35,"79":5.40,"80":5.45}
					};
var s_S_LeanBowsScale = {
	"1":{"6":0.000,"7":0.050,"8":0.10,"9":0.100,"10":0.100,"11":0.100,"12":0.00,"13":0.00,"14":0.10,"15":0.15,"16":0.20,"17":0.20,"18":0.20,"19":0.20,"20":0.20,"21":0.20,"22":0.20,"23":0.20,"24":0.20,"25":0.20,"26":0.20,"27":0.20,"28":0.20,"29":0.20,"30":0.20,},
	"2":{"6":0.00,"7":0.10,"8":0.12,"9":0.10,"10":0.16,"11":0.18,"12":0.25,"13":0.27,"14":0.29,"15":0.31,"16":0.31,"17":0.30,"18":0.40,"19":0.40,"20":0.40,"21":0.45,"22":0.45,"23":0.50,"24":0.53,"25":0.30,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	"3":{"6":0.18,"7":0.22,"8":0.24,"9":0.26,"10":0.28,"11":0.31,"12":0.33,"13":0.37,"14":0.45,"15":0.50,"16":0.70,"17":0.70,"18":0.70,"19":0.70,"20":0.75,"21":0.80,"22":0.85,"23":0.90,"24":0.95,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"4":{"6":0.175,"7":0.200,"8":0.25,"9":0.300,"10":0.350,"11":0.375,"12":0.35,"13":0.35,"14":0.40,"15":0.45,"16":0.50,"17":0.55,"18":0.60,"19":0.65,"20":0.70,"21":0.70,"22":0.75,"23":0.75,"24":0.80,"25":0.85,"26":0.85,"27":0.90,"28":0.95,"29":1.00,"30":1.05,},
	"5":{"6":0.250,"7":0.300,"8":0.35,"9":0.425,"10":0.475,"11":0.525,"12":0.50,"13":0.55,"14":0.60,"15":0.65,"16":0.70,"17":0.75,"18":0.85,"19":0.90,"20":0.95,"21":1.00,"22":1.05,"23":1.10,"24":1.15,"25":1.20,"26":1.25,"27":1.30,"28":1.35,"29":1.40,"30":1.45,},
	"6":{"6":0.350,"7":0.450,"8":0.50,"9":0.575,"10":0.650,"11":0.700,"12":0.70,"13":0.80,"14":0.90,"15":0.95,"16":1.00,"17":1.05,"18":1.15,"19":1.20,"20":1.30,"21":1.35,"22":1.40,"23":1.50,"24":1.60,"25":1.65,"26":1.70,"27":1.75,"28":1.85,"29":1.90,"30":2.00,},
    }; 

var f_S_LeanEndTrimsRotation = {
	"2":{"6":0.161,"7":0.162,"8":0.1625,"9":0.1645,"10":0.1663,"11":0.1642,"12":0.1642,"13":0.165,"14":0.1642,"15":0.1642,"16":0.1642,"17":0.1645,"18":0.1642,"19":0.16475,"20":0.1645,"21":0.1644,"22":0.1648,"23":0.1649,"24":0.1648,"25":0.30,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	"3":{"6":0.2443,"7":0.24199,"8":0.2412,"9":0.2412,"10":0.2419,"11":0.2422,"12":0.2431,"13":0.2435,"14":0.2437,"15":0.2436,"16":0.245,"17":0.2429,"18":0.2431,"19":0.2434,"20":0.2437,"21":0.2437,"22":0.244,"23":0.2437,"24":0.2446,"25":0.2437,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"4":{"6":0.2437,"7":0.2437,"8":0.2437,"9":0.2437,"10":0.2437,"11":0.2437,"12":0.2437,"13":0.2437,"14":0.2437,"15":0.2437,"16":0.2437,"17":0.2437,"18":0.2437,"19":0.2437,"20":0.2437,"21":0.2437,"22":0.2437,"23":0.2437,"24":0.2437,"25":0.2437,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"5":{"6":0.2437,"7":0.2437,"8":0.2437,"9":0.2437,"10":0.2437,"11":0.2437,"12":0.2437,"13":0.2437,"14":0.2437,"15":0.2437,"16":0.2437,"17":0.2437,"18":0.2437,"19":0.2437,"20":0.2437,"21":0.2437,"22":0.2437,"23":0.2437,"24":0.2437,"25":0.2437,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	}; 
var f_S_LeanEndTrimsScale = {
	"2":{"6":0.26,"7":0.28,"8":0.30,"9":0.35,"10":0.38,"11":0.42,"12":0.45,"13":0.47,"14":0.52,"15":0.55,"16":0.58,"17":0.64,"18":0.70,"19":0.70,"20":0.72,"21":0.75,"22":0.78,"23":0.82,"24":0.88,"25":0.30,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	"3":{"6":0.28,"7":0.31,"8":0.35,"9":0.38,"10":0.45,"11":0.51,"12":0.56,"13":0.60,"14":0.65,"15":0.73,"16":0.80,"17":0.90,"18":0.98,"19":0.98,"20":1.00,"21":1.10,"22":1.20,"23":1.30,"24":1.30,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"4":{"6":0.18,"7":0.22,"8":0.24,"9":0.26,"10":0.28,"11":0.31,"12":0.33,"13":0.37,"14":0.45,"15":0.50,"16":0.70,"17":0.70,"18":0.98,"19":0.70,"20":0.75,"21":0.80,"22":0.85,"23":0.90,"24":0.95,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"5":{"6":0.18,"7":0.22,"8":0.24,"9":0.26,"10":0.28,"11":0.31,"12":0.33,"13":0.37,"14":0.45,"15":0.50,"16":0.70,"17":0.70,"18":0.98,"19":0.70,"20":0.75,"21":0.80,"22":0.85,"23":0.90,"24":0.95,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
    }; 

 var f_S_LeanEndTrimsHeight = {
	 "2":{"6":0.395,"7":0.477,"8":0.56,"9":0.638,"10":0.73,"11":0.805,"12":0.885,"13":0.975,"14":1.05,"15":1.13,"16":1.218,"17":1.301,"18":1.383,"19":1.47,"20":1.553,"21":1.645,"22":1.724,"23":1.807,"24":1.892,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	 "3":{"6":0.632,"7":0.755,"8":0.868,"9":0.99,"10":1.125,"11":1.252,"12":1.375,"13":1.515,"14":1.628,"15":1.755,"16":1.889,"17":1.986,"18":2.13,"19":2.2455,"20":2.375,"21":2.508,"22":2.626,"23":2.75,"24":2.873,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	 "4":{"6":0.66,"7":0.78,"8":0.88,"9":1.00,"10":1.15,"11":1.27,"12":1.39,"13":1.52,"14":1.65,"15":1.78,"16":1.90,"17":2.00,"18":2.14,"19":2.26,"20":2.39,"21":2.52,"22":2.63,"23":2.76,"24":2.89,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	 "5":{"6":0.66,"7":0.78,"8":0.88,"9":1.00,"10":1.15,"11":1.27,"12":1.39,"13":1.52,"14":1.65,"15":1.78,"16":1.90,"17":2.00,"18":2.14,"19":2.26,"20":2.39,"21":2.52,"22":2.63,"23":2.76,"24":2.89,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},

	};
const f_S_L_L_Trim_Rot_Y = {
	"2":{"6":3.00,"7":3.00,"8":3.00,"9":3.01,"10":3.01,"11":3.02,"12":3.00,"13":3.02,"14":3.02,"15":3.01,"16":3.00,"17":3.02,"18":3.02,"19":3.02,"20":3.01,"21":2.98,"22":3.00,"23":3.00,"24":3.00,"25":3.02,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	"3":{"6":2.895,"7":2.90,"8":2.90,"9":2.90,"10":2.90,"11":2.90,"12":2.90,"13":2.90,"14":2.89,"15":2.89,"16":2.89,"17":2.92,"18":2.92,"19":2.89,"20":2.90,"21":2.90,"22":2.90,"23":2.90,"24":2.92,"25":0,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"4":{"6":2.95,"7":2.95,"8":2.95,"9":2.95,"10":2.95,"11":2.95,"12":2.95,"13":2.95,"14":2.95,"15":2.95,"16":2.95,"17":2.95,"18":2.95,"19":2.95,"20":2.95,"21":2.95,"22":2.95,"23":2.95,"24":2.95,"25":0,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"5":{"6":2.95,"7":2.95,"8":2.95,"9":2.95,"10":2.95,"11":2.95,"12":2.95,"13":2.95,"14":2.95,"15":2.95,"16":2.95,"17":2.95,"18":2.95,"19":2.95,"20":2.95,"21":2.95,"22":2.95,"23":2.95,"24":2.95,"25":0,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
};
var f_S_L_L_TrimHeight = {
	"2":{"6":0.12,"7":0.12,"8":0.12,"9":0.132,"10":0.13,"11":0.13,"12":0.13,"13":0.13,"14":0.13,"15":0.13,"16":0.13,"17":0.13,"18":0.13,"19":0.13,"20":0.13,"21":0.12,"22":0.13,"23":0.13,"24":0.13,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	"3":{"6":0.144,"7":0.137,"8":0.144,"9":0.143,"10":0.133,"11":0.133,"12":0.138,"13":0.13,"14":0.140,"15":0.135,"16":0.14,"17":0.146,"18":0.127,"19":0.14,"20":0.138,"21":0.13,"22":0.14,"23":0.148,"24":0.148,"25":0,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"4":{"6":1.5,"7":1.6,"8":1.7,"9":2.00,"10":2.20,"11":2.5,"12":2.75,"13":2.9,"14":3.3,"15":3.60,"16":3.80,"17":4.00,"18":0.13,"19":0.13,"20":0.13,"21":0.13,"22":0.13,"23":0.13,"24":0.13,"25":0,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"5":{"6":1.5,"7":1.6,"8":1.7,"9":2.00,"10":2.20,"11":2.5,"12":2.75,"13":2.9,"14":3.3,"15":3.60,"16":3.80,"17":4.00,"18":0.13,"19":0.13,"20":0.13,"21":0.13,"22":0.13,"23":0.13,"24":0.13,"25":0,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
};
var f_S_L_R_TrimHeight = {
	"2":{"6":0.89,"7":1.055,"8":1.22,"9":1.393,"10":1.575,"11":1.722,"12":1.885,"13":2.065,"14":2.215,"15":2.38,"16":2.55,"17":2.72,"18":2.88,"19":3.055,"20":3.22,"21":3.395,"22":3.56,"23":3.726,"24":3.895,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
	"3":{"6":1.38,"7":1.619,"8":1.853,"9":2.095,"10":2.358,"11":2.611,"12":2.865,"13":3.125,"14":3.37,"15":3.62,"16":3.89,"17":4.09,"18":4.365,"19":4.605,"20":4.861,"21":5.12,"22":5.366,"23":5.61,"24":5.868,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"4":{"6":1.5,"7":1.6,"8":1.7,"9":2.00,"10":2.20,"11":2.5,"12":2.75,"13":2.9,"14":3.3,"15":3.60,"16":3.80,"17":4.00,"18":4.365,"19":4.60,"20":4.80,"21":4.9,"22":5.0,"23":5.5,"24":5.75,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
	"5":{"6":1.5,"7":1.6,"8":1.7,"9":2.00,"10":2.20,"11":2.5,"12":2.75,"13":2.9,"14":3.3,"15":3.60,"16":3.80,"17":4.00,"18":4.365,"19":4.60,"20":4.80,"21":4.9,"22":5.0,"23":5.5,"24":5.75,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
};

 var f_S_LeanBowsHeight = {
    "2":{"6":0.40,"7":0.48,"8":0.57,"9":0.66,"10":0.75,"11":0.82,"12":0.90,"13":1.00,"14":1.07,"15":1.15,"16":1.23,"17":1.32,"18":1.40,"19":1.48,"20":1.57,"21":1.65,"22":1.73,"23":1.82,"24":1.90,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "3":{"6":0.66,"7":0.78,"8":0.88,"9":1.00,"10":1.15,"11":1.27,"12":1.39,"13":1.52,"14":1.65,"15":1.78,"16":1.90,"17":2.00,"18":2.15,"19":2.26,"20":2.39,"21":2.52,"22":2.63,"23":2.76,"24":2.89,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
    "4":{"6":0.66,"7":0.78,"8":0.88,"9":1.00,"10":1.15,"11":1.27,"12":1.39,"13":1.52,"14":1.65,"15":1.78,"16":1.90,"17":2.00,"18":2.15,"19":2.26,"20":2.39,"21":2.52,"22":2.63,"23":2.76,"24":2.89,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
    "5":{"6":0.66,"7":0.78,"8":0.88,"9":1.00,"10":1.15,"11":1.27,"12":1.39,"13":1.52,"14":1.65,"15":1.78,"16":1.90,"17":2.00,"18":2.15,"19":2.26,"20":2.39,"21":2.52,"22":2.63,"23":2.76,"24":2.89,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
    };

 var f_S_LeanRoofHeight = {
    "2":{"6":0.545,"7":0.63,"8":0.71,"9":0.80,"10":0.90,"11":0.96,"12":1.04,"13":1.136,"14":1.20,"15":1.28,"16":1.365,"17":1.45,"18":1.53,"19":1.62,"20":1.70,"21":1.79,"22":1.87,"23":1.955,"24":2.04,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "3":{"6":0.83,"7":0.94,"8":1.047,"9":1.16,"10":1.30,"11":1.426,"12":1.545,"13":1.68,"14":1.80,"15":1.92,"16":2.065,"17":2.135,"18":2.28,"19":2.39,"20":2.52,"21":2.65,"22":2.77,"23":2.89,"24":3.015,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},
    };
 var f_S_LeanRoofRotaion = {
    "2":{"6":0.089,"7":0.089,"8":0.088,"9":0.089,"10":0.09,"11":0.087,"12":0.087,"13":0.087,"14":0.0855,"15":0.0855,"16":0.0855,"17":0.085,"18":0.085,"19":0.085,"20":0.085,"21":0.085,"22":0.085,"23":0.085,"24":0.085,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "3":{"6":0.138,"7":0.133,"8":0.131,"9":0.129,"10":0.129,"11":0.128,"12":0.128,"13":0.128,"14":0.128,"15":0.127,"16":0.128,"17":0.125,"18":0.125,"19":0.125,"20":0.125,"21":0.125,"22":0.125,"23":0.125,"24":0.125,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "4":{"6":0.138,"7":0.133,"8":0.131,"9":0.129,"10":0.129,"11":0.128,"12":0.128,"13":0.128,"14":0.128,"15":0.127,"16":0.128,"17":0.125,"18":0.125,"19":0.125,"20":0.125,"21":0.125,"22":0.125,"23":0.125,"24":0.125,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "5":{"6":0.138,"7":0.133,"8":0.131,"9":0.129,"10":0.129,"11":0.128,"12":0.128,"13":0.128,"14":0.128,"15":0.127,"16":0.128,"17":0.125,"18":0.125,"19":0.125,"20":0.125,"21":0.125,"22":0.125,"23":0.125,"24":0.125,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
   };
 var f_S_LeanRightCorner = {
    "2":{"6":-0.10,"7":0.05,"8":0.20,"9":0.40,"10":0.50,"11":0.70,"12":0.80,"13":1.00,"14":1.20,"15":1.30,"16":1.50,"17":1.70,"18":1.80,"19":2.00,"20":2.20,"21":2.40,"22":2.55,"23":2.70,"24":2.80,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "3":{"6":0.14,"7":0.45,"8":0.72,"9":0.97,"10":1.23,"11":1.49,"12":1.74,"13":1.99,"14":2.20,"15":2.45,"16":2.70,"17":2.96,"18":3.24,"19":3.47,"20":3.65,"21":3.87,"22":4.15,"23":4.36,"24":4.61,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "4":{"6":0.14,"7":0.45,"8":0.72,"9":0.97,"10":1.23,"11":1.49,"12":1.74,"13":1.99,"14":2.20,"15":2.45,"16":2.70,"17":2.96,"18":3.24,"19":3.47,"20":3.65,"21":3.87,"22":4.15,"23":4.36,"24":4.61,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
    "5":{"6":0.14,"7":0.45,"8":0.72,"9":0.97,"10":1.23,"11":1.49,"12":1.74,"13":1.99,"14":2.20,"15":2.45,"16":2.70,"17":2.96,"18":3.24,"19":3.47,"20":3.65,"21":3.87,"22":4.15,"23":4.36,"24":4.61,"25":1.4,"26":0.30,"27":0.30,"28":0.35,"29":0.35,"30":0.40,},
  };

    var bowsScaleA = {
						"1":{"6":0.000,"7":0.050,"8":0.10,"9":0.100,"10":0.100,"11":0.100,"12":0.00,"13":0.00,"14":0.10,"15":0.15,"16":0.20,"17":0.20,"18":0.20,"19":0.20,"20":0.20,"21":0.20,"22":0.20,"23":0.20,"24":0.20,"25":0.20,"26":0.20,"27":0.20,"28":0.20,"29":0.20,"30":0.20,"31":0.20,"32":0.25,"33":0.25,"34":0.25,"35":0.25,"36":0.30,"37":0.30,"38":0.30,"39":0.30,"40":0.35,"41":0.35,"42":0.35,"43":0.35,"44":0.40,"45":0.45,"46":0.50,"47":0.55,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.65,"67":0.65,"68":0.65,"69":0.65,"70":0.70,"71":0.75,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
						"2":{"6":0.046,"7":0.062,"8":0.078,"9":0.094,"10":0.11,"11":0.125,"12":0.126,"13":0.143,"14":0.16,"15":0.177,"16":0.194,"17":0.211,"18":0.23,"19":0.249,"20":0.268,"21":0.287,"22":0.303,"23":0.325,"24":0.34,"25":0.338,"26":0.366,"27":0.386,"28":0.402,"29":0.418,"30":0.434,"31":0.418,"32":0.40,"33":0.45,"34":0.45,"35":0.45,"36":0.45,"37":0.50,"38":0.50,"39":0.55,"40":0.55,"41":0.55,"42":0.60,"43":0.65,"44":0.70,"45":0.75,"46":0.75,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.85,"53":0.85,"54":0.85,"55":0.85,"56":0.85,"57":0.85,"58":0.85,"59":0.85,"60":0.85,"61":0.90,"62":0.95,"63":0.95,"64":0.95,"65":0.95,"66":1.00,"67":1.05,"68":1.10,"69":1.15,"70":1.20,"71":1.20,"72":1.20,"73":1.20,"74":1.20,"75":1.20,"76":1.20,"77":1.20,"78":1.20,"79":1.20,"80":1.25},
						"3":{"6":0.100,"7":0.125,"8":0.15,"9":0.175,"10":0.20,"11":0.225,"12":0.25,"13":0.275,"14":0.30,"15":0.325,"16":0.35,"17":0.375,"18":0.40,"19":0.425,"20":0.45,"21":0.475,"22":0.50,"23":0.525,"24":0.555,"25":0.58,"26":0.605,"27":0.63,"28":0.655,"29":0.685,"30":0.71,"31":0.725,"32":0.75,"33":0.775,"34":0.80,"35":0.825,"36":0.85,"37":0.875,"38":0.90,"39":0.925,"40":0.95,"41":0.975,"42":1.00,"43":1.00,"44":1.05,"45":1.10,"46":1.15,"47":1.15,"48":1.20,"49":1.25,"50":1.25,"51":1.30,"52":1.30,"53":1.30,"54":1.30,"55":1.30,"56":1.30,"57":1.35,"58":1.40,"59":1.40,"60":1.40,"61":1.45,"62":1.45,"63":1.50,"64":1.50,"65":1.55,"66":1.55,"67":1.60,"68":1.65,"69":1.70,"70":1.75,"71":1.80,"72":1.85,"73":1.90,"74":1.90,"75":1.90,"76":1.90,"77":1.90,"78":1.90,"79":1.90,"80":1.95},
						"4":{"6":0.185,"7":0.222,"8":0.259,"9":0.296,"10":0.333,"11":0.37,"12":0.407,"13":0.443,"14":0.48,"15":0.518,"16":0.555,"17":0.592,"18":0.631,"19":0.668,"20":0.705,"21":0.742,"22":0.779,"23":0.816,"24":0.853,"25":0.89,"26":0.927,"27":0.97,"28":1.01,"29":1.042,"30":1.08,"31":1.10,"32":1.15,"33":1.20,"34":1.25,"35":1.25,"36":1.35,"37":1.35,"38":1.35,"39":1.35,"40":1.35,"41":1.40,"42":1.45,"43":1.50,"44":1.55,"45":1.60,"46":1.65,"47":1.70,"48":1.75,"49":1.80,"50":1.85,"51":1.90,"52":1.90,"53":1.90,"54":1.90,"55":1.95,"56":2.00,"57":2.05,"58":2.10,"59":2.15,"60":2.20,"61":2.25,"62":2.30,"63":2.35,"64":2.40,"65":2.40,"66":2.40,"67":2.40,"68":2.40,"69":2.45,"70":2.50,"71":2.55,"72":2.60,"73":2.65,"74":2.70,"75":2.75,"76":2.85,"77":2.85,"78":2.85,"79":2.85,"80":2.85},
						"5":{"6":0.225,"7":0.325,"8":0.38,"9":0.43,"10":0.485,"11":0.54,"12":0.595,"13":0.6455,"14":0.70,"15":0.755,"16":0.805,"17":0.86,"18":0.91,"19":0.965,"20":1.02,"21":1.07,"22":1.125,"23":1.175,"24":1.225,"25":1.275,"26":1.335,"27":1.385,"28":1.44,"29":1.50,"30":1.56,"31":1.62,"32":1.68,"33":1.74,"34":1.65,"35":1.70,"36":1.75,"37":1.80,"38":1.85,"39":1.90,"40":1.95,"41":2.00,"42":2.05,"43":2.10,"44":2.15,"45":2.25,"46":2.30,"47":2.35,"48":2.40,"49":2.45,"50":2.50,"51":2.55,"52":2.60,"53":2.65,"54":2.70,"55":2.75,"56":2.85,"57":2.90,"58":2.95,"59":3.30,"60":3.05,"61":3.10,"62":3.15,"63":3.20,"64":3.25,"65":3.30,"66":3.35,"67":3.40,"68":3.45,"69":3.50,"70":3.55,"71":3.60,"72":3.65,"73":3.70,"74":3.75,"75":3.80,"76":3.85,"77":3.90,"78":3.95,"79":4.00,"80":4.05},
						"6":{"6":0.350,"7":0.450,"8":0.50,"9":0.575,"10":0.650,"11":0.700,"12":0.70,"13":0.80,"14":0.90,"15":0.95,"16":1.00,"17":1.05,"18":1.15,"19":1.20,"20":1.30,"21":1.35,"22":1.40,"23":1.50,"24":1.60,"25":1.65,"26":1.70,"27":1.75,"28":1.85,"29":1.90,"30":2.00,"31":2.05,"32":2.10,"33":2.20,"34":2.30,"35":2.40,"36":2.50,"37":2.55,"38":2.60,"39":2.65,"40":2.70,"41":2.75,"42":2.80,"43":2.90,"44":2.95,"45":3.00,"46":3.10,"47":3.20,"48":3.30,"49":3.40,"50":3.50,"51":3.50,"52":3.50,"53":3.60,"54":3.70,"55":3.80,"56":3.80,"57":3.90,"58":4.00,"59":4.10,"60":4.20,"61":4.20,"62":4.30,"63":4.35,"64":4.40,"65":4.45,"66":4.50,"67":4.55,"68":4.60,"69":4.70,"70":4.80,"71":4.90,"72":5.00,"73":5.10,"74":5.15,"75":5.20,"76":5.25,"77":5.30,"78":5.35,"79":5.40,"80":5.45}
					 };

	//Variable For add Height in Roof Bow Of Building +0.2
	var hInc = roofMiddleHeight[params.p_r_p][params.p_w]/2 - 0.1;
	// var hFrR = (params.p_r_s == "1")?0.41:0;
	var hFrR = (params.p_r_s == "1")?0.490:0;
	var hFrRcornner = (params.p_r_s == "1")?0.4:0;

	//Variable For Adjust Rotation With Roof Pitch	
	
	var bowsRotation = { "1":0.08314,"2":0.16515,"3":0.24500,"4":0.32175,"5":0.39480,"6":0.46365, };
	// var f_S_LeanRoofRotaion = { "1":0.08314,"2":0.087,"3":0.12,"4":0.32175,"5":0.39480,"6":0.46365, };


	// Scale for Regular Bow In X direction in case of Regular Roof
	var BowScaleR ={
					"1":{"12":0.77,"13":0.77,"14":0.77,"15":0.77,"16":0.77,"17":0.77,"18":0.77,"19":0.77,"20":0.77,"21":0.77,"22":0.77,"23":0.77,"24":0.77,"25":0.77,"26":0.77,"27":0.77,"28":0.77,"29":0.77,"30":0.77,"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,},
					"2":{"12":0.21,"13":0.21,"14":0.21,"15":0.21,"16":0.21,"17":0.21,"18":0.21,"19":0.21,"20":0.21,"21":0.21,"22":0.21,"23":0.21,"24":0.21,"25":0.21,"26":0.21,"27":0.19,"28":0.22,"29":0.20,"30":0.24,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,},
					"3":{"12":0.22,"13":0.22,"14":0.242,"15":0.20,"16":0.23,"17":0.25,"18":0.265,"19":0.29,"20":0.26,"21":0.25,"22":0.25,"23":0.25,"24":0.22,"25":0.25,"26":0.23,"27":0.25,"28":0.25,"29":0.25,"30":0.32,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,},
					"4":{"12":0.24,"13":0.20,"14":0.21,"15":0.22,"16":0.24,"17":0.245,"18":0.25,"19":0.25,"20":0.27,"21":0.23,"22":0.25,"23":0.21,"24":0.22,"25":0.25,"26":0.20,"27":0.218,"28":0.228,"29":0.24,"30":0.25,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,},
					"5":{"12":0.20,"13":0.195,"14":0.195,"15":0.19,"16":0.18,"17":0.17,"18":0.21,"19":0.21,"20":0.205,"21":0.21,"22":0.205,"23":0.202,"24":0.195,"25":0.21,"26":0.205,"27":0.20,"28":0.193,"29":0.19,"30":0.19,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,},
					"6":{"12":0.50,"13":0.50,"14":0.50,"15":0.50,"16":0.50,"17":0.50,"18":0.50,"19":0.50,"20":0.45,"21":0.45,"22":0.45,"23":0.45,"24":0.45,"25":0.45,"26":0.45,"27":0.45,"28":0.45,"29":0.45,"30":0.45,"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,},
	            };
 
	var bowsRotationR = {		
					 "1":{"12":0.77,"13":0.77,"14":0.77,"15":0.77,"16":0.77,"17":0.77,"18":0.77,"19":0.77,"20":0.77,"21":0.77,"22":0.77,"23":0.77,"24":0.77,"25":0.77,"26":0.77,"27":0.77,"28":0.77,"29":0.77,"30":0.77,"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,},
					 "2":{"12":0.16965,"13":0.16965,"14":0.16965,"15":0.16965,"16":0.16965,"17":0.16965,"18":0.16965,"19":0.16965,"20":0.16965,"21":0.16965,"22":0.16965,"23":0.16965,"24":0.16965,"25":0.16965,"26":0.16865,"27":0.16865,"28":0.16865,"29":0.16865,"30":0.16865,"31":0.16965,"32":0.70,"33":0.70,"34":0.70,"35":0.70,},
					 "3":{"12":0.25000,"13":0.25000,"14":0.25000,"15":0.25000,"16":0.25000,"17":0.25000,"18":0.25000,"19":0.25000,"20":0.25000,"21":0.25000,"22":0.25000,"23":0.25000,"24":0.25000,"25":0.25000,"26":0.24800,"27":0.24800,"28":0.24800,"29":0.24800,"30":0.24800,"31":0.25000,"32":0.60,"33":0.60,"34":0.60,},
					 "4":{"12":0.32875,"13":0.32875,"14":0.32875,"15":0.32875,"16":0.32875,"17":0.32875,"18":0.32875,"19":0.32885,"20":0.32775,"21":0.32775,"22":0.32775,"23":0.32775,"24":0.32695,"25":0.32575,"26":0.32595,"27":0.32595,"28":0.32595,"29":0.32595,"30":0.32595,"31":0.32695,},
					 "5":{"12":0.40330,"13":0.40330,"14":0.40330,"15":0.40330,"16":0.40330,"17":0.40330,"18":0.40330,"19":0.40330,"20":0.40330,"21":0.40330,"22":0.40330,"23":0.40330,"24":0.40330,"25":0.40,"26":0.40,"27":0.40,"28":0.40,"29":0.40,"30":0.40,"31":0.40,"32":0.42,"33":0.42,"34":0.42,"35":0.42,},
					 "6":{"12":0.50,"13":0.50,"14":0.50,"15":0.50,"16":0.50,"17":0.50,"18":0.50,"19":0.50,"20":0.45,"21":0.45,"22":0.45,"23":0.45,"24":0.45,"25":0.45,"26":0.45,"27":0.45,"28":0.45,"29":0.45,"30":0.45,"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,}
                  };	

	//first Small curve Bow in case of Regular Roof
	var cBowScale1 ={
					"1":{"12":0.77,"13":0.77,"14":0.77,"15":0.77,"16":0.77,"17":0.77,"18":0.77,"19":0.77,"20":0.77,"21":0.77,"22":0.77,"23":0.77,"24":0.77,"25":0.77,"26":0.77,"27":0.77,"28":0.77,"29":0.77,"30":0.77,"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,"36":0.77,"37":0.77,"38":0.77,"39":0.77,"40":0.77,"41":0.77,"42":0.77,"43":0.77,"44":0.77,"45":0.77,"46":0.77,"47":0.77,"48":0.77,"49":0.77,"50":0.77,"51":0.77,"52":0.77,"53":0.77,"54":0.77,"55":0.77,"56":0.77,"57":0.77,"58":0.77,"59":0.77,"60":0.77,"61":0.77,"62":0.77,"63":0.77,"64":0.77,"65":0.77,"66":0.77,"67":0.77,"68":0.77,"69":0.65,"70":0.77,"71":0.77,"72":0.77,"73":0.77,"74":0.77,"75":0.77,"76":0.77,"77":0.77,"78":0.77,"79":0.77,"80":0.77},
					"2":{"12":0.20,"13":0.21,"14":0.22,"15":0.23,"16":0.21,"17":0.22,"18":0.21,"19":0.22,"20":0.22,"21":0.22,"22":0.22,"23":0.22,"24":0.202,"25":0.238,"26":0.218,"27":0.218,"28":0.218,"29":0.218,"30":0.218,"31":0.70,"32":0.70,"33":0.70,"34":0.70,"35":0.70,"36":0.70,"37":0.80,"38":0.80,"39":0.80,"40":0.80,"41":0.80,"42":0.80,"43":0.80,"44":0.80,"45":0.80,"46":0.80,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.80,"53":0.80,"54":0.80,"55":0.80,"56":0.80,"57":0.80,"58":0.80,"59":0.80,"60":0.80,"61":0.80,"62":0.80,"63":0.80,"64":0.80,"65":0.80,"66":0.80,"67":0.80,"68":0.80,"69":0.80,"70":0.80,"71":0.80,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
					"3":{"12":0.23,"13":0.23,"14":0.23,"15":0.23,"16":0.22,"17":0.21,"18":0.20,"19":0.20,"20":0.20,"21":0.215,"22":0.20,"23":0.21,"24":0.225,"25":0.22,"26":0.215,"27":0.212,"28":0.202,"29":0.19,"30":0.211,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
					"4":{"12":0.22,"13":0.22,"14":0.22,"15":0.22,"16":0.21,"17":0.20,"18":0.20,"19":0.20,"20":0.20,"21":0.20,"22":0.20,"23":0.23,"24":0.20,"25":0.20,"26":0.202,"27":0.204,"28":0.203,"29":0.202,"30":0.202,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.70,"38":0.70,"39":0.70,"40":0.70,"41":0.70,"42":0.70,"43":0.70,"44":0.70,"45":0.70,"46":0.70,"47":0.70,"48":0.70,"49":0.70,"50":0.70,"51":0.70,"52":0.70,"53":0.70,"54":0.70,"55":0.70,"56":0.70,"57":0.70,"58":0.70,"59":0.70,"60":0.70,"61":0.70,"62":0.70,"63":0.70,"64":0.70,"65":0.70,"66":0.70,"67":0.70,"68":0.70,"69":0.70,"70":0.70,"71":0.70,"72":0.70,"73":0.70,"74":0.70,"75":0.70,"76":0.70,"77":0.70,"78":0.70,"79":0.70,"80":0.70},
					"5":{"12":0.23,"13":0.23,"14":0.23,"15":0.23,"16":0.23,"17":0.23,"18":0.21,"19":0.21,"20":0.21,"21":0.21,"22":0.21,"23":0.215,"24":0.215,"25":0.21,"26":0.195,"27":0.1935,"28":0.193,"29":0.195,"30":0.196,"31":0.42,"32":0.42,"33":0.42,"34":0.42,"35":0.42,"36":0.42,"37":0.60,"38":0.60,"39":0.60,"40":0.60,"41":0.60,"42":0.60,"43":0.60,"44":0.60,"45":0.60,"46":0.60,"47":0.60,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.60,"67":0.60,"68":0.60,"69":0.60,"70":0.60,"71":0.60,"72":0.60,"73":0.60,"74":0.60,"75":0.60,"76":0.60,"77":0.60,"78":0.60,"79":0.60,"80":0.60},
					"6":{"12":0.50,"13":0.50,"14":0.50,"15":0.50,"16":0.50,"17":0.50,"18":0.50,"19":0.50,"20":0.45,"21":0.45,"22":0.45,"23":0.45,"24":0.45,"25":0.45,"26":0.45,"27":0.45,"28":0.45,"29":0.45,"30":0.45,"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,"36":0.40,"37":0.50,"38":0.50,"39":0.50,"40":0.50,"41":0.50,"42":0.50,"43":0.50,"44":0.50,"45":0.50,"46":0.50,"47":0.50,"48":0.50,"49":0.50,"50":0.50,"51":0.50,"52":0.50,"53":0.50,"54":0.50,"55":0.50,"56":0.50,"57":0.50,"58":0.50,"59":0.50,"60":0.50,"61":0.50,"62":0.50,"63":0.50,"64":0.50,"65":0.50,"66":0.50,"67":0.50,"68":0.50,"69":0.50,"70":0.50,"71":0.50,"72":0.50,"73":0.50,"74":0.50,"75":0.50,"76":0.50,"77":0.50,"78":0.50,"79":0.50,"80":0.50},
		          };

    var cBowPos1 = {
				   "1":{"12":{"x":0.13,"y":0.443},"13":{"x":0.13,"y":0.443},"14":{"x":0.13,"y":0.443},"15":{"x":0.13,"y":0.443},"16":{"x":0.13,"y":0.443},"17":{"x":0.13,"y":0.443},"18":{"x":0.13,"y":0.443},"19":{"x":0.13,"y":0.443},"20":{"x":0.13,"y":0.443},"21":{"x":0.13,"y":0.443},"22":{"x":0.13,"y":0.443},"23":{"x":0.13,"y":0.443},"24":{"x":0.13,"y":0.443},"25":{"x":0.13,"y":0.443},"26":{"x":0.13,"y":0.443},"27":{"x":0.13,"y":0.443},"28":{"x":0.13,"y":0.443},"29":{"x":0.13,"y":0.443},"30":{"x":0.13,"y":0.443},"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,"36":0.77,"37":0.77,"38":0.77,"39":0.77,"40":0.77,"41":0.77,"42":0.77,"43":0.77,"44":0.77,"45":0.77,"46":0.77,"47":0.77,"48":0.77,"49":0.77,"50":0.77,"51":0.77,"52":0.77,"53":0.77,"54":0.77,"55":0.77,"56":0.77,"57":0.77,"58":0.77,"59":0.77,"60":0.77,"61":0.77,"62":0.77,"63":0.77,"64":0.77,"65":0.77,"66":0.77,"67":0.77,"68":0.77,"69":0.65,"70":0.77,"71":0.77,"72":0.77,"73":0.77,"74":0.77,"75":0.77,"76":0.77,"77":0.77,"78":0.77,"79":0.77,"80":0.77},
				   "2":{"6":{"x":0.2715,"y":0.402},"7":{"x":0.2715,"y":0.402},"8":{"x":0.2715,"y":0.402},"9":{"x":0.2715,"y":0.402},"10":{"x":0.2715,"y":0.402},"11":{"x":0.2715,"y":0.402},"12":{"x":0.2715,"y":0.402},"13":{"x":0.275,"y":0.400},"14":{"x":0.275,"y":0.400},"15":{"x":0.28,"y":0.400},"16":{"x":0.272,"y":0.398},"17":{"x":0.275,"y":0.400},"18":{"x":0.271,"y":0.397},"19":{"x":0.274,"y":0.397},"20":{"x":0.274,"y":0.395},"21":{"x":0.274,"y":0.395},"22":{"x":0.274,"y":0.395},"23":{"x":0.274,"y":0.395},"24":{"x":0.268,"y":0.3918},"25":{"x":0.285,"y":0.400},"26":{"x":0.276,"y":0.395},"27":{"x":0.275,"y":0.395},"28":{"x":0.275,"y":0.395},"29":{"x":0.275,"y":0.395},"30":{"x":0.275,"y":0.394},"31":0.70,"32":0.70,"33":0.70,"34":0.70,"35":0.70,"36":0.70,"37":0.80,"38":0.80,"39":0.80,"40":0.80,"41":0.80,"42":0.80,"43":0.80,"44":0.80,"45":0.80,"46":0.80,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.80,"53":0.80,"54":0.80,"55":0.80,"56":0.80,"57":0.80,"58":0.80,"59":0.80,"60":0.80,"61":0.80,"62":0.80,"63":0.80,"64":0.80,"65":0.80,"66":0.80,"67":0.80,"68":0.80,"69":0.80,"70":0.80,"71":0.80,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
				   "3":{"6":{"x":0.285,"y":0.412},"7":{"x":0.285,"y":0.412},"8":{"x":0.285,"y":0.412},"9":{"x":0.285,"y":0.412},"10":{"x":0.285,"y":0.412},"11":{"x":0.285,"y":0.412},"12":{"x":0.285,"y":0.412},"13":{"x":0.285,"y":0.412},"14":{"x":0.278,"y":0.405},"15":{"x":0.278,"y":0.405},"16":{"x":0.278,"y":0.405},"17":{"x":0.275,"y":0.405},"18":{"x":0.27,"y":0.405},"19":{"x":0.27,"y":0.405},"20":{"x":0.27,"y":0.4015},"21":{"x":0.27,"y":0.400},"22":{"x":0.27,"y":0.400},"23":{"x":0.275,"y":0.402},"24":{"x":0.28,"y":0.402},"25":{"x":0.27,"y":0.405},"26":{"x":0.276,"y":0.405},"27":{"x":0.276,"y":0.405},"28":{"x":0.270,"y":0.403},"29":{"x":0.266,"y":0.402},"30":{"x":0.274,"y":0.404},"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
				   "4":{"12":{"x":0.285,"y":0.414},"13":{"x":0.285,"y":0.414},"14":{"x":0.285,"y":0.414},"15":{"x":0.28,"y":0.409},"16":{"x":0.28,"y":0.409},"17":{"x":0.27,"y":0.405},"18":{"x":0.27,"y":0.405},"19":{"x":0.27,"y":0.405},"20":{"x":0.27,"y":0.405},"21":{"x":0.27,"y":0.405},"22":{"x":0.27,"y":0.405},"23":{"x":0.27,"y":0.401},"24":{"x":0.27,"y":0.405},"25":{"x":0.27,"y":0.405},"26":{"x":0.272,"y":0.406},"27":{"x":0.272,"y":0.406},"28":{"x":0.272,"y":0.406},"29":{"x":0.272,"y":0.405},"30":{"x":0.271,"y":0.405},"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.70,"38":0.70,"39":0.70,"40":0.70,"41":0.70,"42":0.70,"43":0.70,"44":0.70,"45":0.70,"46":0.70,"47":0.70,"48":0.70,"49":0.70,"50":0.70,"51":0.70,"52":0.70,"53":0.70,"54":0.70,"55":0.70,"56":0.70,"57":0.70,"58":0.70,"59":0.70,"60":0.70,"61":0.70,"62":0.70,"63":0.70,"64":0.70,"65":0.70,"66":0.70,"67":0.70,"68":0.70,"69":0.70,"70":0.70,"71":0.70,"72":0.70,"73":0.70,"74":0.70,"75":0.70,"76":0.70,"77":0.70,"78":0.70,"79":0.70,"80":0.70},
			       "5":{"12":{"x":0.28,"y":0.4177},"13":{"x":0.28,"y":0.4165},"14":{"x":0.28,"y":0.4155},"15":{"x":0.28,"y":0.414},"16":{"x":0.28,"y":0.413},"17":{"x":0.28,"y":0.413},"18":{"x":0.275,"y":0.409},"19":{"x":0.275,"y":0.408},"20":{"x":0.275,"y":0.405},"21":{"x":0.275,"y":0.4025},"22":{"x":0.275,"y":0.4025},"23":{"x":0.279,"y":0.4025},"24":{"x":0.279,"y":0.4025},"25":{"x":0.275,"y":0.405},"26":{"x":0.27,"y":0.4085},"27":{"x":0.268,"y":0.407},"28":{"x":0.268,"y":0.4068},"29":{"x":0.268,"y":0.4065},"30":{"x":0.268,"y":0.405},"31":0.42,"32":0.42,"33":0.42,"34":0.42,"35":0.42,"36":0.42,"37":0.60,"38":0.60,"39":0.60,"40":0.60,"41":0.60,"42":0.60,"43":0.60,"44":0.60,"45":0.60,"46":0.60,"47":0.60,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.60,"67":0.60,"68":0.60,"69":0.60,"70":0.60,"71":0.60,"72":0.60,"73":0.60,"74":0.60,"75":0.60,"76":0.60,"77":0.60,"78":0.60,"79":0.60,"80":0.60},
				   "6":{"12":{"x":0.13,"y":0.443},"13":{"x":0.13,"y":0.443},"14":{"x":0.13,"y":0.443},"15":{"x":0.13,"y":0.443},"16":{"x":0.13,"y":0.443},"17":{"x":0.13,"y":0.443},"18":{"x":0.13,"y":0.443},"19":{"x":0.13,"y":0.443},"20":{"x":0.13,"y":0.443},"21":{"x":0.13,"y":0.443},"22":{"x":0.13,"y":0.443},"23":{"x":0.13,"y":0.443},"24":{"x":0.13,"y":0.443},"25":{"x":0.13,"y":0.443},"26":{"x":0.13,"y":0.443},"27":{"x":0.13,"y":0.443},"28":{"x":0.13,"y":0.443},"29":{"x":0.13,"y":0.443},"30":{"x":0.13,"y":0.443},"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,"36":0.40,"37":0.50,"38":0.50,"39":0.50,"40":0.50,"41":0.50,"42":0.50,"43":0.50,"44":0.50,"45":0.50,"46":0.50,"47":0.50,"48":0.50,"49":0.50,"50":0.50,"51":0.50,"52":0.50,"53":0.50,"54":0.50,"55":0.50,"56":0.50,"57":0.50,"58":0.50,"59":0.50,"60":0.50,"61":0.50,"62":0.50,"63":0.50,"64":0.50,"65":0.50,"66":0.50,"67":0.50,"68":0.50,"69":0.50,"70":0.50,"71":0.50,"72":0.50,"73":0.50,"74":0.50,"75":0.50,"76":0.50,"77":0.50,"78":0.50,"79":0.50,"80":0.50}
			      };	

	var cBowRotation1 = {
						"1":{"12":0.77,"13":0.77,"14":0.77,"15":0.77,"16":0.77,"17":0.77,"18":0.77,"19":0.77,"20":0.77,"21":0.77,"22":0.77,"23":0.77,"24":0.77,"25":0.77,"26":0.77,"27":0.77,"28":0.77,"29":0.77,"30":0.77,"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,"36":0.77,"37":0.77,"38":0.77,"39":0.77,"40":0.77,"41":0.77,"42":0.77,"43":0.77,"44":0.77,"45":0.77,"46":0.77,"47":0.77,"48":0.77,"49":0.77,"50":0.77,"51":0.77,"52":0.77,"53":0.77,"54":0.77,"55":0.77,"56":0.77,"57":0.77,"58":0.77,"59":0.77,"60":0.77,"61":0.77,"62":0.77,"63":0.77,"64":0.77,"65":0.77,"66":0.77,"67":0.77,"68":0.77,"69":0.65,"70":0.77,"71":0.77,"72":0.77,"73":0.77,"74":0.77,"75":0.77,"76":0.77,"77":0.77,"78":0.77,"79":0.77,"80":0.77},
						"2":{"12":0.37,"13":0.36,"14":0.345,"15":0.34,"16":0.34,"17":0.33,"18":0.325,"19":0.31,"20":0.31,"21":0.31,"22":0.31,"23":0.31,"24":0.31,"25":0.30,"26":0.307,"27":0.306,"28":0.304,"29":0.303,"30":0.30,"31":0.70,"32":0.70,"33":0.70,"34":0.70,"35":0.70,"36":0.70,"37":0.80,"38":0.80,"39":0.80,"40":0.80,"41":0.80,"42":0.80,"43":0.80,"44":0.80,"45":0.80,"46":0.80,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.80,"53":0.80,"54":0.80,"55":0.80,"56":0.80,"57":0.80,"58":0.80,"59":0.80,"60":0.80,"61":0.80,"62":0.80,"63":0.80,"64":0.80,"65":0.80,"66":0.80,"67":0.80,"68":0.80,"69":0.80,"70":0.80,"71":0.80,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
						"4":{"12":0.47,"13":0.43,"14":0.43,"15":0.44,"16":0.43,"17":0.40,"18":0.40,"19":0.40,"20":0.40,"21":0.38,"22":0.38,"23":0.40,"24":0.40,"25":0.40,"26":0.42,"27":0.42,"28":0.41,"29":0.41,"30":0.40,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.70,"38":0.70,"39":0.70,"40":0.70,"41":0.70,"42":0.70,"43":0.70,"44":0.70,"45":0.70,"46":0.70,"47":0.70,"48":0.70,"49":0.70,"50":0.70,"51":0.70,"52":0.70,"53":0.70,"54":0.70,"55":0.70,"56":0.70,"57":0.70,"58":0.70,"59":0.70,"60":0.70,"61":0.70,"62":0.70,"63":0.70,"64":0.70,"65":0.70,"66":0.70,"67":0.70,"68":0.70,"69":0.70,"70":0.70,"71":0.70,"72":0.70,"73":0.70,"74":0.70,"75":0.70,"76":0.70,"77":0.70,"78":0.70,"79":0.70,"80":0.70},
						"3":{"12":0.4000,"13":0.3909,"14":0.4000,"15":0.3800,"16":0.3840,"17":0.3800,"18":0.3900,"19":0.3800,"20":0.3800,"21":0.3750,"22":0.3800,"23":0.3680,"24":0.3500,"25":0.4100,"26":0.3950,"27":0.3950,"28":0.4000,"29":0.4000,"30":0.3800,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
						"5":{"12":0.490,"13":0.482,"14":0.475,"15":0.46,"16":0.44,"17":0.44,"18":0.43,"19":0.41,"20":0.41,"21":0.41,"22":0.38,"23":0.37,"24":0.37,"25":0.40,"26":0.45,"27":0.44,"28":0.43,"29":0.43,"30":0.42,"31":0.40,"32":0.42,"33":0.42,"34":0.42,"35":0.42,"36":0.42,"37":0.60,"38":0.60,"39":0.60,"40":0.60,"41":0.60,"42":0.60,"43":0.60,"44":0.60,"45":0.60,"46":0.60,"47":0.60,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.60,"67":0.60,"68":0.60,"69":0.60,"70":0.60,"71":0.60,"72":0.60,"73":0.60,"74":0.60,"75":0.60,"76":0.60,"77":0.60,"78":0.60,"79":0.60,"80":0.60},
						"6":{"12":0.50,"13":0.50,"14":0.50,"15":0.50,"16":0.50,"17":0.50,"18":0.50,"19":0.50,"20":0.45,"21":0.45,"22":0.45,"23":0.45,"24":0.45,"25":0.45,"26":0.45,"27":0.45,"28":0.45,"29":0.45,"30":0.45,"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,"36":0.40,"37":0.50,"38":0.50,"39":0.50,"40":0.50,"41":0.50,"42":0.50,"43":0.50,"44":0.50,"45":0.50,"46":0.50,"47":0.50,"48":0.50,"49":0.50,"50":0.50,"51":0.50,"52":0.50,"53":0.50,"54":0.50,"55":0.50,"56":0.50,"57":0.50,"58":0.50,"59":0.50,"60":0.50,"61":0.50,"62":0.50,"63":0.50,"64":0.50,"65":0.50,"66":0.50,"67":0.50,"68":0.50,"69":0.50,"70":0.50,"71":0.50,"72":0.50,"73":0.50,"74":0.50,"75":0.50,"76":0.50,"77":0.50,"78":0.50,"79":0.50,"80":0.50}
					  };

	//Front Trim scale in case of Regular Roof
	var trimScale = {"1":0.01, "2":0.012, "3":(params.p_w < 23) ? 0.004 : 0.028,"4":(params.p_w == 23) ? 0.02 : 0.01, "5":(params.p_w < 19 || params.p_w > 20) ? 0.0265 : 0.01,"6":0.01};
			
	var trimScaleR = {
    				"1":{"6":-0.070,"7":-0.090,"8":-0.120,"9":-0.120,"10":-0.120,"11":-0.120,"12": 0.00,"13":0.00,"14":-0.08,"15":-0.15,"16":-0.15,"17":-0.15,"18":-0.12,"19":-0.12,"20":-0.10,"21":-0.10,"22":-0.08,"23":-0.08,"24":-0.06,"25":-0.06,"26":-0.04,"27":-0.03,"28":-0.02,"29":-0.01,"30": 0.00,"31": 0.02,"32": 0.00,"33": 0.01,"34": 0.01,"35": 0.01,"36": 0.01,"37": 0.03,"38": 0.03,"39": 0.03,"40": 0.03,"41": 0.03,"42": 0.03,"43": 0.03,"44": 0.00,"45":-0.02,"46":-0.02,"47":-0.02,"48":-0.06,"49":-0.08,"50":-0.08,"51":-0.08,"52":-0.08,"53":-0.08,"54":-0.08,"55":-0.08,"56":-0.08,"57":-0.06,"58":-0.06,"59":-0.05,"60":-0.03,"61":-0.01,"62":-0.01,"63": 0.00,"64": 0.02,"65": 0.03,"66": 0.03,"67": 0.03,"68": 0.03,"69": 0.03,"70": 0.03,"71":-0.02,"72":-0.02,"73":-0.03,"74":-0.03,"75":-0.03,"76":-0.03,"77":-0.03,"78": 0.00,"79": 0.00,"80": 0.00},
    				"2":{"6":-0.070,"7":-0.050,"8":-0.080,"9":-0.079,"10":-0.055,"11":-0.055,"12":-0.02,"13":0.00,"14": 0.01,"15": 0.02,"16":-0.05,"17":-0.03,"18":-0.03,"19":-0.01,"20": 0.00,"21":-0.03,"22":-0.02,"23": 0.00,"24": 0.00,"25": 0.00,"26": 0.01,"27": 0.03,"28": -0.01,"29":0.01,"30":-0.025,"31":-0.01,"32": 0.01,"33": 0.01,"34": 0.01,"35": 0.01,"36": 0.02,"37": 0.02,"38": 0.02,"39": 0.02,"40": 0.02,"41": 0.02,"42": 0.01,"43":-0.01,"44":-0.04,"45":-0.08,"46":-0.08,"47":-0.08,"48":-0.08,"49":-0.08,"50":-0.06,"51":-0.06,"52":-0.06,"53":-0.06,"54":-0.06,"55":-0.04,"56":-0.02,"57":-0.01,"58": 0.00,"59": 0.03,"60": 0.05,"61": 0.02,"62": 0.01,"63": 0.01,"64": 0.02,"65": 0.04,"66": 0.03,"67": 0.02,"68": 0.00,"69":-0.02,"70":-0.08,"71":-0.10,"72":-0.08,"73":-0.06,"74":-0.06,"75":-0.03,"76":-0.02,"77":-0.00,"78": 0.02,"79": 0.03,"80": 0.03},
    				"3":{"6":-0.070,"7":-0.070,"8":-0.070,"9":-0.080,"10":-0.080,"11":-0.080,"12":-0.01,"13":0.01,"14":-0.01,"15": 0.02,"16":-0.02,"17":-0.03,"18":-0.04,"19":-0.06,"20":-0.05,"21":-0.03,"22":-0.04,"23":-0.04,"24":-0.02,"25":-0.02,"26":-0.02,"27":-0.04,"28":-0.065,"29":-0.09,"30":-0.11,"31":-0.10,"32":-0.08,"33":-0.08,"34":-0.08,"35":-0.07,"36":-0.07,"37":-0.07,"38":-0.05,"39":-0.2,"40": 0.01,"41": 0.04,"42": 0.03,"43": 0.01,"44":-0.02,"45":-0.04,"46":-0.04,"47":-0.04,"48":-0.05,"49":-0.06,"50":-0.06,"51":-0.06,"52":-0.06,"53":-0.05,"54":-0.02,"55": 0.02,"56": 0.03,"57": 0.03,"58": 0.03,"59": 0.03,"60": 0.04,"61": 0.02,"62": 0.04,"63": 0.03,"64": 0.05,"65": 0.03,"66": 0.05,"67": 0.04,"68": 0.03,"69": 0.02,"70":-0.01,"71":-0.05,"72":-0.08,"73":-0.10,"74":-0.08,"75":-0.06,"76":-0.03,"77":-0.00,"78": 0.02,"79": 0.04,"80": 0.04},
    				"4":{"6":-0.070,"7":-0.060,"8":-0.070,"9":-0.075,"10":-0.075,"11":-0.075,"12":-0.01,"13":0.02,"14": 0.02,"15": 0.00,"16":-0.01,"17":-0.02,"18":-0.03,"19":-0.03,"20":-0.04,"21":-0.02,"22":-0.02,"23":-0.00,"24": 0.00,"25": 0.00,"26": 0.03,"27": 0.016,"28": 0.005,"29": -0.005,"30": -0.02,"31":-0.02,"32":-0.04,"33":-0.04,"34":-0.05,"35":-0.04,"36":-0.05,"37":-0.05,"38":-0.03,"39": 0.01,"40": 0.06,"41": 0.06,"42": 0.05,"43": 0.03,"44": 0.02,"45": 0.00,"46": 0.00,"47": 0.00,"48":-0.01,"49":-0.01,"50":-0.04,"51":-0.05,"52":-0.04,"53": 0.00,"54": 0.05,"55": 0.05,"56": 0.05,"57": 0.04,"58": 0.04,"59": 0.03,"60": 0.00,"61":-0.02,"62":-0.03,"63":-0.05,"64":-0.06,"65":-0.03,"66": 0.01,"67": 0.04,"68": 0.08,"69": 0.08,"70": 0.08,"71": 0.05,"72": 0.05,"73": 0.04,"74": 0.02,"75": 0.02,"76":-0.04,"77":-0.00,"78": 0.02,"79": 0.06,"80": 0.10},
    				"5":{"6":-0.060,"7":-0.055,"8":-0.055,"9":-0.060,"10":-0.060,"11":-0.060,"12": 0.02,"13":0.02,"14": 0.02,"15": 0.03,"16": 0.03,"17": 0.03,"18":-0.01,"19": 0.01,"20": 0.01,"21": 0.01,"22": 0.01,"23": 0.01,"24": 0.01,"25": 0.01,"26": 0.02,"27": 0.026,"28": 0.03,"29": 0.03,"30":0.037,"31": 0.04,"32": 0.05,"33": 0.05,"34": 0.05,"35": 0.05,"36": 0.05,"37": 0.05,"38": 0.07,"39": 0.07,"40": 0.08,"41": 0.08,"42": 0.09,"43": 0.09,"44": 0.09,"45": 0.05,"46": 0.05,"47": 0.05,"48": 0.06,"49": 0.06,"50": 0.06,"51": 0.07,"52": 0.07,"53": 0.07,"54": 0.07,"55": 0.08,"56": 0.08,"57": 0.07,"58": 0.07,"59":-0.25,"60": 0.05,"61": 0.06,"62": 0.07,"63": 0.07,"64": 0.07,"65": 0.07,"66": 0.07,"67": 0.08,"68": 0.08,"69": 0.08,"70": 0.09,"71": 0.10,"72": 0.10,"73": 0.12,"74": 0.12,"75": 0.12,"76": 0.12,"77": 0.12,"78": 0.14,"79": 0.14,"80": 0.14},
    				"6":{"6":-0.045,"7":-0.050,"8":-0.050,"9":-0.050,"10":-0.050,"11":-0.035,"12": 0.04,"13":0.02,"14":-0.01,"15": 0.01,"16": 0.03,"17": 0.04,"18": 0.03,"19": 0.04,"20": 0.02,"21": 0.04,"22": 0.06,"23": 0.05,"24": 0.03,"25": 0.03,"26": 0.05,"27": 0.06,"28": 0.06,"29": 0.06,"30": 0.05,"31": 0.06,"32": 0.08,"33": 0.07,"34": 0.07,"35": 0.02,"36": 0.00,"37": 0.00,"38": 0.01,"39": 0.03,"40": 0.05,"41": 0.08,"42": 0.10,"43": 0.08,"44": 0.10,"45": 0.12,"46": 0.12,"47": 0.10,"48": 0.04,"49": 0.02,"50": 0.00,"51": 0.05,"52": 0.12,"53": 0.12,"54": 0.10,"55": 0.08,"56": 0.12,"57": 0.10,"58": 0.06,"59": 0.06,"60": 0.02,"61": 0.08,"62": 0.06,"63": 0.06,"64": 0.08,"65": 0.12,"66": 0.14,"67": 0.16,"68": 0.18,"69": 0.16,"70": 0.14,"71": 0.10,"72": 0.08,"73": 0.04,"74": 0.06,"75": 0.08,"76": 0.12,"77": 0.14,"78": 0.16,"79": 0.18,"80": 0.18},
				 };

	//first small trim curve in case of Regular Roof
	var curvedTrimScale = {
						"1":{"12":0.77,"13":0.77,"14":0.77,"15":0.77,"16":0.77,"17":0.77,"18":0.77,"19":0.77,"20":0.77,"21":0.77,"22":0.77,"23":0.77,"24":0.77,"25":0.77,"26":0.77,"27":0.77,"28":0.77,"29":0.77,"30":0.77,"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,"36":0.77,"37":0.77,"38":0.77,"39":0.77,"40":0.77,"41":0.77,"42":0.77,"43":0.77,"44":0.77,"45":0.77,"46":0.77,"47":0.77,"48":0.77,"49":0.77,"50":0.77,"51":0.77,"52":0.77,"53":0.77,"54":0.77,"55":0.77,"56":0.77,"57":0.77,"58":0.77,"59":0.77,"60":0.77,"61":0.77,"62":0.77,"63":0.77,"64":0.77,"65":0.77,"66":0.77,"67":0.77,"68":0.77,"69":0.65,"70":0.77,"71":0.77,"72":0.77,"73":0.77,"74":0.77,"75":0.77,"76":0.77,"77":0.77,"78":0.77,"79":0.77,"80":0.77},
						"2":{"12":0.077,"13":0.075,"14":0.078,"15":0.081,"16":0.075,"17":0.075,"18":0.082,"19":0.08,"20":0.085,"21":0.083,"22":0.085,"23":0.085,"24":0.068,"25":0.068,"26":0.074,"27":0.072,"28":0.074,"29":0.074,"30":0.076,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
						"3":{"12":0.069,"13":0.072,"14":0.07,"15":0.068,"16":0.074,"17":0.067,"18":0.06,"19":0.058,"20":0.065,"21":0.068,"22":0.06,"23":0.073,"24":0.075,"25":0.075,"26":0.065,"27":0.06,"28":0.0608,"29":0.0608,"30":0.058,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
						"4":{"12":0.061,"13":0.064,"14":0.061,"15":0.061,"16":0.060,"17":0.058,"18":0.055,"19":0.05,"20":0.05,"21":0.057,"22":0.05,"23":0.059,"24":0.054,"25":0.25,"26":0.047,"27":0.047,"28":0.045,"29":0.045,"30":0.045,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
						"5":{"12":0.057,"13":0.057,"14":0.057,"15":0.055,"16":0.055,"17":0.055,"18":0.053,"19":0.044,"20":0.044,"21":0.045,"22":0.045,"23":0.046,"24":0.0478,"25":0.21,"26":0.035,"27":0.04,"28":0.06,"29":0.06,"30":0.03,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
						"6":{"12":0.50,"13":0.50,"14":0.50,"15":0.50,"16":0.50,"17":0.50,"18":0.50,"19":0.50,"20":0.45,"21":0.45,"22":0.45,"23":0.45,"24":0.45,"25":0.45,"26":0.45,"27":0.45,"28":0.45,"29":0.45,"30":0.45,"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,"36":0.40,"37":0.50,"38":0.50,"39":0.50,"40":0.50,"41":0.50,"42":0.50,"43":0.50,"44":0.50,"45":0.50,"46":0.50,"47":0.50,"48":0.50,"49":0.50,"50":0.50,"51":0.50,"52":0.50,"53":0.50,"54":0.50,"55":0.50,"56":0.50,"57":0.50,"58":0.50,"59":0.50,"60":0.50,"61":0.50,"62":0.50,"63":0.50,"64":0.50,"65":0.50,"66":0.50,"67":0.50,"68":0.50,"69":0.50,"70":0.50,"71":0.50,"72":0.50,"73":0.50,"74":0.50,"75":0.50,"76":0.50,"77":0.50,"78":0.50,"79":0.50,"80":0.50},
	                 };																																																										

	var TrimPos1 = {
					"1":{"12":{"x":0.13,"y":0.443},"13":{"x":0.13,"y":0.443},"14":{"x":0.13,"y":0.443},"15":{"x":0.13,"y":0.443},"16":{"x":0.13,"y":0.443},"17":{"x":0.13,"y":0.443},"18":{"x":0.13,"y":0.443},"19":{"x":0.13,"y":0.443},"20":{"x":0.13,"y":0.443},"21":{"x":0.13,"y":0.443},"22":{"x":0.13,"y":0.443},"23":{"x":0.13,"y":0.443},"24":{"x":0.13,"y":0.443},"25":{"x":0.13,"y":0.443},"26":{"x":0.13,"y":0.443},"27":{"x":0.13,"y":0.443},"28":{"x":0.13,"y":0.443},"29":{"x":0.13,"y":0.443},"30":{"x":0.10,"y":0.443},"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,"36":0.77,"37":0.77,"38":0.77,"39":0.77,"40":0.77,"41":0.77,"42":0.77,"43":0.77,"44":0.77,"45":0.77,"46":0.77,"47":0.77,"48":0.77,"49":0.77,"50":0.77,"51":0.77,"52":0.77,"53":0.77,"54":0.77,"55":0.77,"56":0.77,"57":0.77,"58":0.77,"59":0.77,"60":0.77,"61":0.77,"62":0.77,"63":0.77,"64":0.77,"65":0.77,"66":0.77,"67":0.77,"68":0.77,"69":0.65,"70":0.77,"71":0.77,"72":0.77,"73":0.77,"74":0.77,"75":0.77,"76":0.77,"77":0.77,"78":0.77,"79":0.77,"80":0.77},
					"2":{"6":{"x":0.1315,"y":0.476},"7":{"x":0.1315,"y":0.476},"8":{"x":0.1315,"y":0.476},"9":{"x":0.1315,"y":0.476},"10":{"x":0.1315,"y":0.476},"11":{"x":0.1315,"y":0.476},"12":{"x":0.1315,"y":0.476},"13":{"x":0.1315,"y":0.476},"14":{"x":0.132,"y":0.476},"15":{"x":0.133,"y":0.475},"16":{"x":0.131,"y":0.475},"17":{"x":0.131,"y":0.475},"18":{"x":0.132,"y":0.473},"19":{"x":0.131,"y":0.473},"20":{"x":0.132,"y":0.472},"21":{"x":0.132,"y":0.472},"22":{"x":0.132,"y":0.472},"23":{"x":0.132,"y":0.471},"24":{"x":0.128,"y":0.472},"25":{"x":0.128,"y":0.472},"26":{"x":0.128,"y":0.47},"27":{"x":0.127,"y":0.47},"28":{"x":0.128,"y":0.469},"29":{"x":0.128,"y":0.469},"30":{"x":0.128,"y":0.4685},"31":0.70,"32":0.70,"33":0.70,"34":0.70,"35":0.70,"36":0.70,"37":0.80,"38":0.80,"39":0.80,"40":0.80,"41":0.80,"42":0.80,"43":0.80,"44":0.80,"45":0.80,"46":0.80,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.80,"53":0.80,"54":0.80,"55":0.80,"56":0.80,"57":0.80,"58":0.80,"59":0.80,"60":0.80,"61":0.80,"62":0.80,"63":0.80,"64":0.80,"65":0.80,"66":0.80,"67":0.80,"68":0.80,"69":0.80,"70":0.80,"71":0.80,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
					"3":{"6":{"x":0.1315,"y":0.479},"7":{"x":0.1315,"y":0.479},"8":{"x":0.1315,"y":0.479},"9":{"x":0.1315,"y":0.479},"10":{"x":0.1315,"y":0.479},"11":{"x":0.1315,"y":0.479},"12":{"x":0.1315,"y":0.479},"13":{"x":0.1315,"y":0.478},"14":{"x":0.13,"y":0.477},"15":{"x":0.128,"y":0.476},"16":{"x":0.131,"y":0.476},"17":{"x":0.129,"y":0.475},"18":{"x":0.127,"y":0.475},"19":{"x":0.127,"y":0.475},"20":{"x":0.128,"y":0.473},"21":{"x":0.128,"y":0.473},"22":{"x":0.126,"y":0.472},"23":{"x":0.129,"y":0.471},"24":{"x":0.129,"y":0.471},"25":{"x":0.129,"y":0.471},"26":{"x":0.124,"y":0.468},"27":{"x":0.123,"y":0.468},"28":{"x":0.1219,"y":0.4665},"29":{"x":0.1219,"y":0.4659},"30":{"x":0.1205,"y":0.4655},"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
					"4":{"12":{"x":0.1295,"y":0.481},"13":{"x":0.1299,"y":0.479},"14":{"x":0.128,"y":0.479},"15":{"x":0.1271,"y":0.478},"16":{"x":0.1275,"y":0.476},"17":{"x":0.127,"y":0.476},"18":{"x":0.128,"y":0.476},"19":{"x":0.124,"y":0.473},"20":{"x":0.124,"y":0.473},"21":{"x":0.124,"y":0.473},"22":{"x":0.124,"y":0.471},"23":{"x":0.124,"y":0.470},"24":{"x":0.124,"y":0.470},"25":{"x":0.13,"y":0.443},"26":{"x":0.117,"y":0.464},"27":{"x":0.117,"y":0.464},"28":{"x":0.117,"y":0.463},"29":{"x":0.114,"y":0.4616},"30":{"x":0.115,"y":0.461},"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.70,"38":0.70,"39":0.70,"40":0.70,"41":0.70,"42":0.70,"43":0.70,"44":0.70,"45":0.70,"46":0.70,"47":0.70,"48":0.70,"49":0.70,"50":0.70,"51":0.70,"52":0.70,"53":0.70,"54":0.70,"55":0.70,"56":0.70,"57":0.70,"58":0.70,"59":0.70,"60":0.70,"61":0.70,"62":0.70,"63":0.70,"64":0.70,"65":0.70,"66":0.70,"67":0.70,"68":0.70,"69":0.70,"70":0.70,"71":0.70,"72":0.70,"73":0.70,"74":0.70,"75":0.70,"76":0.70,"77":0.70,"78":0.70,"79":0.70,"80":0.70},
					"5":{"12":{"x":0.128,"y":0.482},"13":{"x":0.1275,"y":0.48},"14":{"x":0.1275,"y":0.48},"15":{"x":0.126,"y":0.4766},"16":{"x":0.126,"y":0.476},"17":{"x":0.1255,"y":0.4745},"18":{"x":0.124,"y":0.474},"19":{"x":0.121,"y":0.4715},"20":{"x":0.12,"y":0.47},"21":{"x":0.12,"y":0.469},"22":{"x":0.12,"y":0.467},"23":{"x":0.118,"y":0.465},"24":{"x":0.118,"y":0.465},"25":{"x":0.13,"y":0.443},"26":{"x":0.11,"y":0.459},"27":{"x":0.109,"y":0.457},"28":{"x":0.116,"y":0.459},"29":{"x":0.116,"y":0.459},"30":{"x":0.098,"y":0.451},"31":0.42,"32":0.42,"33":0.42,"34":0.42,"35":0.42,"36":0.42,"37":0.60,"38":0.60,"39":0.60,"40":0.60,"41":0.60,"42":0.60,"43":0.60,"44":0.60,"45":0.60,"46":0.60,"47":0.60,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.60,"67":0.60,"68":0.60,"69":0.60,"70":0.60,"71":0.60,"72":0.60,"73":0.60,"74":0.60,"75":0.60,"76":0.60,"77":0.60,"78":0.60,"79":0.60,"80":0.60},
				    "6":{"12":{"x":0.13,"y":0.443},"13":{"x":0.13,"y":0.443},"14":{"x":0.13,"y":0.443},"15":{"x":0.13,"y":0.443},"16":{"x":0.13,"y":0.443},"17":{"x":0.13,"y":0.443},"18":{"x":0.13,"y":0.443},"19":{"x":0.13,"y":0.443},"20":{"x":0.13,"y":0.443},"21":{"x":0.13,"y":0.42},"22":{"x":0.13,"y":0.443},"23":{"x":0.13,"y":0.443},"24":{"x":0.13,"y":0.443},"25":{"x":0.13,"y":0.443},"26":{"x":0.13,"y":0.443},"27":{"x":0.13,"y":0.443},"28":{"x":0.13,"y":0.443},"29":{"x":0.13,"y":0.443},"30":{"x":0.13,"y":0.443},"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,"36":0.40,"37":0.50,"38":0.50,"39":0.50,"40":0.50,"41":0.50,"42":0.50,"43":0.50,"44":0.50,"45":0.50,"46":0.50,"47":0.50,"48":0.50,"49":0.50,"50":0.50,"51":0.50,"52":0.50,"53":0.50,"54":0.50,"55":0.50,"56":0.50,"57":0.50,"58":0.50,"59":0.50,"60":0.50,"61":0.50,"62":0.50,"63":0.50,"64":0.50,"65":0.50,"66":0.50,"67":0.50,"68":0.50,"69":0.50,"70":0.50,"71":0.50,"72":0.50,"73":0.50,"74":0.50,"75":0.50,"76":0.50,"77":0.50,"78":0.50,"79":0.50,"80":0.50},
			      };

	var trimRotation1 = {
						"1":{"12":0.77,"13":0.77,"14":0.77,"15":0.77,"16":0.77,"17":0.77,"18":0.77,"19":0.77,"20":0.77,"21":0.77,"22":0.77,"23":0.77,"24":0.77,"25":0.77,"26":0.77,"27":0.77,"28":0.77,"29":0.77,"30":0.77,"31":0.77,"32":0.77,"33":0.77,"34":0.77,"35":0.77,"36":0.77,"37":0.77,"38":0.77,"39":0.77,"40":0.77,"41":0.77,"42":0.77,"43":0.77,"44":0.77,"45":0.77,"46":0.77,"47":0.77,"48":0.77,"49":0.77,"50":0.77,"51":0.77,"52":0.77,"53":0.77,"54":0.77,"55":0.77,"56":0.77,"57":0.77,"58":0.77,"59":0.77,"60":0.77,"61":0.77,"62":0.77,"63":0.77,"64":0.77,"65":0.77,"66":0.77,"67":0.77,"68":0.77,"69":0.65,"70":0.77,"71":0.77,"72":0.77,"73":0.77,"74":0.77,"75":0.77,"76":0.77,"77":0.77,"78":0.77,"79":0.77,"80":0.77},
						"2":{"12":0.43,"13":0.45,"14":0.42,"15":0.4,"16":0.43,"17":0.43,"18":0.375,"19":0.375,"20":0.355,"21":0.355,"22":0.335,"23":0.335,"24":0.41,"25":0.41,"26":0.35,"27":0.35,"28":0.33,"29":0.33,"30":0.32,"31":0.70,"32":0.70,"33":0.70,"34":0.70,"35":0.70,"36":0.70,"37":0.80,"38":0.80,"39":0.80,"40":0.80,"41":0.80,"42":0.80,"43":0.80,"44":0.80,"45":0.80,"46":0.80,"47":0.80,"48":0.80,"49":0.80,"50":0.80,"51":0.80,"52":0.80,"53":0.80,"54":0.80,"55":0.80,"56":0.80,"57":0.80,"58":0.80,"59":0.80,"60":0.80,"61":0.80,"62":0.80,"63":0.80,"64":0.80,"65":0.80,"66":0.80,"67":0.80,"68":0.80,"69":0.80,"70":0.80,"71":0.80,"72":0.80,"73":0.80,"74":0.80,"75":0.80,"76":0.80,"77":0.80,"78":0.80,"79":0.80,"80":0.80},
						"3":{"12":0.44,"13":0.41,"14":0.41,"15":0.4,"16":0.36,"17":0.392,"18":0.415,"19":0.43,"20":0.365,"21":0.35,"22":0.365,"23":0.3,"24":0.28,"25":0.28,"26":0.3,"27":0.3,"28":0.26,"29":0.26,"30":0.26,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.75,"38":0.75,"39":0.75,"40":0.75,"41":0.75,"42":0.75,"43":0.75,"44":0.75,"45":0.75,"46":0.75,"47":0.75,"48":0.75,"49":0.75,"50":0.75,"51":0.75,"52":0.75,"53":0.75,"54":0.75,"55":0.75,"56":1.30,"57":0.75,"58":0.75,"59":0.75,"60":0.75,"61":0.75,"62":0.75,"63":0.75,"64":0.75,"65":0.75,"66":0.75,"67":0.75,"68":0.75,"69":0.75,"70":0.75,"71":0.75,"72":0.75,"73":0.75,"74":0.75,"75":0.75,"76":0.75,"77":0.75,"78":0.75,"79":0.75,"80":0.75},
						"4":{"12":0.435,"13":0.395,"14":0.38,"15":0.356,"16":0.355,"17":0.355,"18":0.355,"19":0.355,"20":0.365,"21":0.3,"22":0.33,"23":0.25,"24":0.279,"25":0.30,"26":0.23,"27":0.20,"28":0.21,"29":0.16,"30":0.16,"31":0.60,"32":0.60,"33":0.60,"34":0.60,"35":0.60,"36":0.60,"37":0.70,"38":0.70,"39":0.70,"40":0.70,"41":0.70,"42":0.70,"43":0.70,"44":0.70,"45":0.70,"46":0.70,"47":0.70,"48":0.70,"49":0.70,"50":0.70,"51":0.70,"52":0.70,"53":0.70,"54":0.70,"55":0.70,"56":0.70,"57":0.70,"58":0.70,"59":0.70,"60":0.70,"61":0.70,"62":0.70,"63":0.70,"64":0.70,"65":0.70,"66":0.70,"67":0.70,"68":0.70,"69":0.70,"70":0.70,"71":0.70,"72":0.70,"73":0.70,"74":0.70,"75":0.70,"76":0.70,"77":0.70,"78":0.70,"79":0.70,"80":0.70},
						"5":{"12":0.41,"13":0.37,"14":0.34,"15":0.338,"16":0.313,"17":0.28,"18":0.285,"19":0.295,"20":0.26,"21":0.22,"22":0.205,"23":0.16,"24":0.15,"25":0.35,"26":0.08,"27":0.01,"28":-0.02,"29":-0.02,"30":-0.1,"31":0.42,"32":0.42,"33":0.42,"34":0.42,"35":0.42,"36":0.42,"37":0.60,"38":0.60,"39":0.60,"40":0.60,"41":0.60,"42":0.60,"43":0.60,"44":0.60,"45":0.60,"46":0.60,"47":0.60,"48":0.60,"49":0.60,"50":0.60,"51":0.60,"52":0.60,"53":0.60,"54":0.60,"55":0.60,"56":0.60,"57":0.60,"58":0.60,"59":0.60,"60":0.60,"61":0.60,"62":0.60,"63":0.60,"64":0.60,"65":0.60,"66":0.60,"67":0.60,"68":0.60,"69":0.60,"70":0.60,"71":0.60,"72":0.60,"73":0.60,"74":0.60,"75":0.60,"76":0.60,"77":0.60,"78":0.60,"79":0.60,"80":0.60},
						"6":{"12":0.50,"13":0.50,"14":0.50,"15":0.50,"16":0.50,"17":0.50,"18":0.50,"19":0.50,"20":0.45,"21":0.45,"22":0.45,"23":0.45,"24":0.45,"25":0.45,"26":0.45,"27":0.45,"28":0.45,"29":0.45,"30":0.45,"31":0.40,"32":0.40,"33":0.40,"34":0.40,"35":0.40,"36":0.40,"37":0.50,"38":0.50,"39":0.50,"40":0.50,"41":0.50,"42":0.50,"43":0.50,"44":0.50,"45":0.50,"46":0.50,"47":0.50,"48":0.50,"49":0.50,"50":0.50,"51":0.50,"52":0.50,"53":0.50,"54":0.50,"55":0.50,"56":0.50,"57":0.50,"58":0.50,"59":0.50,"60":0.50,"61":0.50,"62":0.50,"63":0.50,"64":0.50,"65":0.50,"66":0.50,"67":0.50,"68":0.50,"69":0.50,"70":0.50,"71":0.50,"72":0.50,"73":0.50,"74":0.50,"75":0.50,"76":0.50,"77":0.50,"78":0.50,"79":0.50,"80":0.50},
					 };
	if(params.p_w > 31) {
	 //params.p_r_p = 4;
	}



    //Building Roof Left Front Trim
	var leftFrontTrim = new THREE.Mesh(trimGeometry,trimMaterial);
	leftFrontTrim.name = "leftFrontTrim";
	leftFrontTrim.scale.set(params.p_w/2,0.2+0.08,0.5);	
	leftFrontTrim.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + 0.53,params.p_d/2+0.2);
	leftFrontTrim.rotation.z = bowsRotation[params.p_r_p] + Number(params.p_r_p)/1000;
	leftFrontTrim.visible = (params.p_r_s == "1" )?true:false;
	leftFrontTrim.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w] + trimScaleR[params.p_r_p][params.p_w] + trimScale[params.p_r_p];
	const_var.b_t_M_L.add(leftFrontTrim);

	// left Front Trim first small curve	
	var leftFrontTrim1 = new THREE.Mesh(trimGeometry,trimMaterial);
	leftFrontTrim1.name = "leftFrontTrim1";
	leftFrontTrim1.scale.set(curvedTrimScale[params.p_r_p][params.p_w],0.2,0.5);	
	leftFrontTrim1.position.set((params.p_w/-2 + TrimPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + TrimPos1[params.p_r_p][params.p_w]["y"]),params.p_d/2+0.2);
	leftFrontTrim1.rotation.z = bowsRotation[params.p_r_p] + trimRotation1[params.p_r_p][params.p_w];
	leftFrontTrim1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontTrim1);

	// left Front Trim second small curve
	 var leftFrontTrim2= new THREE.Mesh(trimGeometry,trimMaterial);
	leftFrontTrim2.name = "leftFrontTrim2";
	leftFrontTrim2.scale.set(0.12,0.19+0.1,0.5);	
	leftFrontTrim2.position.set((params.p_w/-2 +0.101),(params.p_h + 0.405),params.p_d/2+0.2);
	leftFrontTrim2.rotation.z =Math.PI/3.4;
	leftFrontTrim2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontTrim2);

	//left Front Trim third curve
	var leftFrontTrim3 = new THREE.Mesh(trimGeometry,trimMaterial);
	leftFrontTrim3.name = "leftFrontTrim3";	
	leftFrontTrim3.scale.set(0.095,0.21+0.073,0.5);
	leftFrontTrim3.position.set((params.p_w/-2 +0.068),(params.p_h + 0.345),params.p_d/2+0.2);
	leftFrontTrim3.rotation.z = Math.PI/2.35;
	leftFrontTrim3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontTrim3);

	//left Front Trim forth curve
	var leftFrontTrim4Geo = new THREE.BoxGeometry(0.25,1,0.2);
	var leftFrontTrim4Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});

	var leftFrontTrim4 = new THREE.Mesh(leftFrontTrim4Geo,leftFrontTrim4Material);
	leftFrontTrim4.name = "leftFrontTrim4";
	leftFrontTrim4.scale.set(0.5+0.17,0.35, 0.5);
	leftFrontTrim4.position.set(params.p_w/-2+0.058,params.p_h+0.145,params.p_d/2+0.2);
	leftFrontTrim4.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontTrim4);

 	//Building Roof Left Back Trim
 	var leftBackTrim = new THREE.Mesh(trimGeometry,trimMaterial);
 	leftBackTrim.name = "leftBackTrim";
 	leftBackTrim.scale.set(params.p_w/2,0.2+0.08,0.5);	
 	leftBackTrim.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + 0.53,params.p_d/-2-0.2);
 	leftBackTrim.rotation.z = bowsRotation[params.p_r_p] + Number(params.p_r_p)/1000;
 	leftBackTrim.visible = (params.p_r_s == "1")?true:false;
 	leftBackTrim.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w] + trimScaleR[params.p_r_p][params.p_w]+ trimScale[params.p_r_p];
 	const_var.b_t_M_L.add(leftBackTrim);

	// left Back Trim first small curve	
	var leftBackTrim1 = new THREE.Mesh(trimGeometry,trimMaterial);
	leftBackTrim1.name = "leftBackTrim1";
	leftBackTrim1.scale.set(curvedTrimScale[params.p_r_p][params.p_w],0.2,0.5);	
	leftBackTrim1.position.set((params.p_w/-2 + TrimPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + TrimPos1[params.p_r_p][params.p_w]["y"]),params.p_d/-2-0.2);
	leftBackTrim1.rotation.z = bowsRotation[params.p_r_p] + trimRotation1[params.p_r_p][params.p_w];
	leftBackTrim1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackTrim1);

	// left Back Trim second small curve
	 var leftBackTrim2= new THREE.Mesh(trimGeometry,trimMaterial);
	leftBackTrim2.name = "leftBackTrim2";
	leftBackTrim2.scale.set(0.12,0.19+0.1,0.5);	
	leftBackTrim2.position.set((params.p_w/-2 +0.101),(params.p_h + 0.405),params.p_d/-2-0.2);
	leftBackTrim2.rotation.z =Math.PI/3.4;
	leftBackTrim2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackTrim2);

	//left Back Trim third curve
	var leftBackTrim3 = new THREE.Mesh(trimGeometry,trimMaterial);
	leftBackTrim3.name = "leftBackTrim3";	
	leftBackTrim3.scale.set(0.095,0.21+0.073,0.5);
	leftBackTrim3.position.set((params.p_w/-2 +0.068),(params.p_h + 0.345),params.p_d/-2-0.2);
	leftBackTrim3.rotation.z = Math.PI/2.35;
	leftBackTrim3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackTrim3);

	//left Back Trim forth curve
	var leftBackTrim4Geo = new THREE.BoxGeometry(0.25,1,0.2);
	var leftBackTrim4Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	var leftBackTrim4 = new THREE.Mesh(leftBackTrim4Geo,leftBackTrim4Material);
	leftBackTrim4.name = "leftFrontTrim4";
	leftBackTrim4.scale.set(0.5+0.17,0.35, 0.5);
	leftBackTrim4.position.set(params.p_w/-2+0.058,params.p_h+0.145,params.p_d/-2-0.2);
	leftBackTrim4.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackTrim4);

	//Building Roof Right Front Trim
	var rightFrontTrim = new THREE.Mesh(trimGeometry,trimMaterial);
	rightFrontTrim.name = "rightFrontTrim";
	rightFrontTrim.scale.set(params.p_w/2,0.2+0.08,0.5);	
	rightFrontTrim.position.set(params.p_w/4-0.08,params.p_h + hInc + 0.03 + 0.53,params.p_d/2+0.2);
	rightFrontTrim.rotation.z = -bowsRotation[params.p_r_p] - Number(params.p_r_p)/1000;
	rightFrontTrim.visible = (params.p_r_s == "1")?true:false;
	rightFrontTrim.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w] + trimScaleR[params.p_r_p][params.p_w]+ trimScale[params.p_r_p];
	const_var.b_t_M_L.add(rightFrontTrim);

	// right Front Trim first small curve	
	var rightFrontTrim1 = new THREE.Mesh(trimGeometry,trimMaterial);
	rightFrontTrim1.name = "rightFrontTrim1";
	rightFrontTrim1.scale.set(curvedTrimScale[params.p_r_p][params.p_w],0.2,0.5);	
	rightFrontTrim1.position.set((params.p_w/2 - TrimPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + TrimPos1[params.p_r_p][params.p_w]["y"]),params.p_d/2+0.2);
	rightFrontTrim1.rotation.z = -bowsRotation[params.p_r_p] - trimRotation1[params.p_r_p][params.p_w];
	rightFrontTrim1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightFrontTrim1);
		
	// right Front Trim second small curve
	var rightFrontTrim2= new THREE.Mesh(trimGeometry,trimMaterial);
	rightFrontTrim2.name = "rightFrontTrim2";
	rightFrontTrim2.scale.set(0.12,0.19+0.1,0.5);	
	rightFrontTrim2.position.set((params.p_w/2 - 0.101),(params.p_h + 0.405),params.p_d/2+0.2);
	rightFrontTrim2.rotation.z =-Math.PI/3.4;
	rightFrontTrim2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightFrontTrim2);

	//right Front Trim third curve
	var rightFrontTrim3 = new THREE.Mesh(trimGeometry,trimMaterial);
	rightFrontTrim3.name = "rightFrontTrim3";	
	rightFrontTrim3.scale.set(0.095,0.21+0.073,0.5);
	rightFrontTrim3.position.set((params.p_w/2 -0.068),(params.p_h + 0.345),params.p_d/2+0.2);
	rightFrontTrim3.rotation.z = -Math.PI/2.35;
	rightFrontTrim3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightFrontTrim3);

	//right Front Trim forth curve
	var rightFrontTrim4Geo = new THREE.BoxGeometry(0.25,1,0.2);
	var rightFrontTrim4Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	var rightFrontTrim4 = new THREE.Mesh(rightFrontTrim4Geo,rightFrontTrim4Material);
	rightFrontTrim4.name = "rightFrontTrim4";
	rightFrontTrim4.scale.set(0.5+0.17,0.35, 0.5);
	rightFrontTrim4.position.set(params.p_w/+2-0.058,params.p_h+0.145,params.p_d/2+0.2);
	rightFrontTrim4.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightFrontTrim4);

	//Building Roof Right Back Trim
	var rightBackTrim = new THREE.Mesh(trimGeometry,trimMaterial);
	rightBackTrim.name = "rightBackTrim";
	rightBackTrim.scale.set(params.p_w/2,0.2+0.08,0.5);	
	rightBackTrim.position.set(params.p_w/4-0.08,params.p_h + hInc + 0.03 + 0.53,params.p_d/-2-0.2);
	rightBackTrim.rotation.z = -bowsRotation[params.p_r_p] - Number(params.p_r_p)/1000;
	rightBackTrim.visible = (params.p_r_s == "1")?true:false;
	rightBackTrim.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w] + trimScaleR[params.p_r_p][params.p_w] + trimScale[params.p_r_p];
	const_var.b_t_M_L.add(rightBackTrim);

	// right Back Trim first small curve	
	var rightBackTrim1 = new THREE.Mesh(trimGeometry,trimMaterial);
	rightBackTrim1.name = "rightBackTrim1";
	rightBackTrim1.scale.set(curvedTrimScale[params.p_r_p][params.p_w],0.2,0.5);	
	rightBackTrim1.position.set((params.p_w/2 - TrimPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + TrimPos1[params.p_r_p][params.p_w]["y"]),params.p_d/-2-0.2);
	rightBackTrim1.rotation.z = -bowsRotation[params.p_r_p] - trimRotation1[params.p_r_p][params.p_w];
	rightBackTrim1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightBackTrim1);

	// right Back Trim second small curve
	var rightBackTrim2= new THREE.Mesh(trimGeometry,trimMaterial);
	rightBackTrim2.name = "rightBackTrim2";
	rightBackTrim2.scale.set(0.12,0.19+0.1,0.5);	
	rightBackTrim2.position.set((params.p_w/2 - 0.101),(params.p_h + 0.405),params.p_d/-2-0.2);
	rightBackTrim2.rotation.z =-Math.PI/3.4;
	rightBackTrim2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightBackTrim2);

	//right Back Trim third curve
	var rightBackTrim3 = new THREE.Mesh(trimGeometry,trimMaterial);
	rightBackTrim3.name = "rightBackTrim3";	
	rightBackTrim3.scale.set(0.095,0.21+0.073,0.5);
	rightBackTrim3.position.set((params.p_w/2 -0.068),(params.p_h + 0.345),params.p_d/-2-0.2);
	rightBackTrim3.rotation.z = -Math.PI/2.35;
	rightBackTrim3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightBackTrim3);
 
	//right Back Trim forth curve
	var rightBackTrim4Geo = new THREE.BoxGeometry(0.25,1,0.2);
	var rightBackTrim4Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	var rightBackTrim4 = new THREE.Mesh(rightBackTrim4Geo,rightBackTrim4Material);
	rightBackTrim4.name = "rightBackTrim4";
	rightBackTrim4.scale.set(0.5+0.17,0.35, 0.5);
	rightBackTrim4.position.set(params.p_w/2-0.058,params.p_h+0.145,params.p_d/-2-0.2);
	rightBackTrim4.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(rightBackTrim4);


	//Building Roof Left Front Bow	
	var leftFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
	leftFrontBow.name = "leftFrontBow";
	leftFrontBow.scale.set(params.p_w/2,0.25,1);	
	leftFrontBow.scale.x = (params.singleSlope == true)? params.p_w + s_S_LeanBowsScale[params.p_r_p][params.p_w]:params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	leftFrontBow.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + hFrR,params.p_d/2 - 0.12);
	leftFrontBow.position.x =(params.singleSlope == true)? 0 : params.p_w/-4+0.08;
	leftFrontBow.position.y =(params.singleSlope == true)? params.p_h+ f_S_LeanBowsHeight[params.p_r_p][params.p_w]:params.p_h + hInc + 0.03 + hFrR;
	leftFrontBow.rotation.z =  bowsRotation[params.p_r_p];
	leftFrontBow.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_L.add(leftFrontBow);


	//Left Front Trim for A-frame and Vertical
	var leftFrontTrimA = new THREE.Mesh(bowGeometry,bowMaterialt);
	leftFrontTrimA.name = "leftFrontTrimA";
	leftFrontTrimA.scale.set(params.p_w/2,0.2+0.08,0.5);	
	leftFrontTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	leftFrontTrimA.position.set(params.p_w/-4,params.p_h + hInc + 0.03 + hFrR,params.p_d/2 );
    if(params.p_r_s=="2"){
	leftFrontTrimA.scale.set(params.p_w/2,0.2+0.08,1.5);
	leftFrontTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	leftFrontTrimA.position.set(params.p_w/-4,params.p_h + hInc + 0.03 + hFrR,params.p_d/2 +0.1);
	}
	leftFrontTrimA.rotation.z = bowsRotation[params.p_r_p];

	leftFrontTrimA.visible = (params.p_r_s == "1" || params.singleSlope == true )?false: true;
	const_var.b_t_M_L.add(leftFrontTrimA);


	//Left Back Trim for A-frame and Vertical
	var leftBackTrimA = new THREE.Mesh(bowGeometry,bowMaterialt);
	leftBackTrimA.name = "leftBackTrimA";
	leftBackTrimA.scale.set(params.p_w/2,0.2+0.08,0.5);	
	leftBackTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	leftBackTrimA.position.set(params.p_w/-4,params.p_h + hInc + 0.03 + hFrR,params.p_d/-2 );
	if(params.p_r_s=="2"){
	leftBackTrimA.scale.set(params.p_w/2,0.2+0.08,1.5);
	leftBackTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	leftBackTrimA.position.set(params.p_w/-4,params.p_h + hInc + 0.03 + hFrR,params.p_d/-2 -0.1);
	}
	leftBackTrimA.rotation.z = bowsRotation[params.p_r_p];
	leftBackTrimA.visible =  (params.p_r_s == "1" || params.singleSlope == true )?false: true;
	const_var.b_t_M_L.add(leftBackTrimA);


	//Right Front Trim for A-frame and Vertical
	var rightFrontTrimA = new THREE.Mesh(bowGeometry,bowMaterialt);
	rightFrontTrimA.name = "RightFrontTrimA";
	rightFrontTrimA.scale.set(params.p_w/2,0.2+0.08,0.5);	
	rightFrontTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	rightFrontTrimA.position.set(params.p_w/4,params.p_h + hInc + 0.03 + hFrR,params.p_d/2 );
	if(params.p_r_s=="2"){
	rightFrontTrimA.scale.set(params.p_w/2,0.2+0.08,1.5);	
	rightFrontTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	rightFrontTrimA.position.set(params.p_w/4,params.p_h + hInc + 0.03 + hFrR,params.p_d/2 + 0.1);
	}
	rightFrontTrimA.rotation.z = -bowsRotation[params.p_r_p];
	rightFrontTrimA.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_R.add(rightFrontTrimA);

	//Right Back Trim for A-frame and Vertical
	var rightBackTrimA = new THREE.Mesh(bowGeometry,bowMaterialt);
	rightBackTrimA.name = "leftBackTrimA";
	rightBackTrimA.scale.set(params.p_w/2,0.2+0.08,0.5);	
	rightBackTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
	rightBackTrimA.position.set(params.p_w/4,params.p_h + hInc + 0.03 + hFrR,params.p_d/-2 );
	if(params.p_r_s=="2"){
		rightBackTrimA.scale.set(params.p_w/2,0.2+0.08,1.5);	
		rightBackTrimA.scale.x = params.p_w/2 + bowsScaleA[params.p_r_p][params.p_w]+0.11;
		rightBackTrimA.position.set(params.p_w/4,params.p_h + hInc + 0.03 + hFrR,params.p_d/-2 - 0.1);
		}
	rightBackTrimA.rotation.z = -bowsRotation[params.p_r_p];
	rightBackTrimA.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_R.add(rightBackTrimA);

	//Center Building Left Back Trim for A-frame and Vertical
	var sideTrimGeo = new THREE.BoxGeometry(0.31,1,0.2);
	var sideTrimMaterial = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	var centerBuildingLeftTrim = new THREE.Mesh(sideTrimGeo,sideTrimMaterial);
	centerBuildingLeftTrim.name = "centerBuildingLeftTrim";
	centerBuildingLeftTrim.scale.set(0.28,params.p_d + 0.1,0.84);
	centerBuildingLeftTrim.position.set(params.p_w/-2-0.061,params.p_h-0.0855,0);
	if(params.p_r_s=="2"){
	centerBuildingLeftTrim.scale.set(0.68,params.p_d + 0.5,0.84);
	centerBuildingLeftTrim.position.set(params.p_w/-2-0.121,params.p_h-0.101,0);
	}
	centerBuildingLeftTrim.rotation.x=Math.PI/-2;
	centerBuildingLeftTrim.rotation.y=Math.PI/-12.6;
	centerBuildingLeftTrim.visible =  (params.p_r_s == "1" || params.singleSlope  )?false: true;
	const_var.b_t_M_L.add(centerBuildingLeftTrim);


	//Center Building Right Back Trim for A-frame and Vertical
	var centerBuildingRightTrim = new THREE.Mesh(sideTrimGeo,sideTrimMaterial);
	centerBuildingRightTrim.name = "centerBuildingRightTrim";
	centerBuildingRightTrim.scale.set(0.28,params.p_d + 0.1,0.84);
	centerBuildingRightTrim.position.set(params.p_w/2+0.061,params.p_h-0.0855,0);
	if(params.p_r_s=="2"){
		centerBuildingRightTrim.scale.set(0.68,params.p_d + 0.5,0.84);
		centerBuildingRightTrim.position.set(params.p_w/2+0.121,params.p_h-0.101,0);
		}
	centerBuildingRightTrim.rotation.x=Math.PI/-2;
	centerBuildingRightTrim.rotation.y=Math.PI/12.6;
	centerBuildingRightTrim.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_R.add(centerBuildingRightTrim);

    /* Free Standing LeanTo Front Trim */ 
    var f_S_LeanToFrontTrim = new THREE.Mesh(bowGeometry,bowMaterialt);
    f_S_LeanToFrontTrim.name = "F_S_L_F_T";
	f_S_LeanToFrontTrim.visible = params.singleSlope;
    f_S_LeanToFrontTrim.scale.set(params.p_w/2,0.335,1);	
    f_S_LeanToFrontTrim.scale.x =  params.p_w + f_S_LeanEndTrimsScale[params.p_r_p][params.p_w];
    f_S_LeanToFrontTrim.position.set(0,params.p_h+f_S_LeanEndTrimsHeight[params.p_r_p][params.p_w] ,params.p_d/2+0.085);
	f_S_LeanToFrontTrim.position.x =(params.p_r_p==3)?-0.05:0
    if(params.p_r_s=="2"){
		f_S_LeanToFrontTrim.scale.set(params.p_w/2,0.335,2.6);	
    	f_S_LeanToFrontTrim.scale.x = params.p_w + f_S_LeanEndTrimsScale[params.p_r_p][params.p_w];
    	f_S_LeanToFrontTrim.position.set(0,params.p_h+f_S_LeanEndTrimsHeight[params.p_r_p][params.p_w] ,params.p_d/2+0.24);
    }
    f_S_LeanToFrontTrim.rotation.z = f_S_LeanEndTrimsRotation[params.p_r_p][params.p_w];
    const_var.F_S_L_R.add(f_S_LeanToFrontTrim);

	/* Free Standing LeanTo Back Trim */ 
	var f_S_LeanToBackTrim = new THREE.Mesh(bowGeometry,bowMaterialt);
	f_S_LeanToBackTrim.name = "F_S_L_B_T";
	f_S_LeanToBackTrim.visible =  params.singleSlope;
	f_S_LeanToBackTrim.scale.set(params.p_w/2,0.335,1);	
	f_S_LeanToBackTrim.scale.x = params.p_w + f_S_LeanEndTrimsScale[params.p_r_p][params.p_w];
	f_S_LeanToBackTrim.position.set(0,params.p_h+f_S_LeanEndTrimsHeight[params.p_r_p][params.p_w],params.p_d/-2-0.085);
	f_S_LeanToFrontTrim.position.x =(params.p_r_p==3)?-0.05:0
	if(params.p_r_s=="2"){
		f_S_LeanToBackTrim.scale.set(params.p_w/2,0.335,2.6);	
		f_S_LeanToBackTrim.scale.x = params.p_w + f_S_LeanEndTrimsScale[params.p_r_p][params.p_w];
		f_S_LeanToBackTrim.position.set(0,params.p_h+f_S_LeanEndTrimsHeight[params.p_r_p][params.p_w],params.p_d/-2-0.24 );
	}
	f_S_LeanToBackTrim.rotation.z = f_S_LeanEndTrimsRotation[params.p_r_p][params.p_w];
	const_var.F_S_L_R.add(f_S_LeanToBackTrim);

	/* Free Standing LeanTo Left Trim */ 
	var sideTrimGeo = new THREE.BoxGeometry(0.31,1,0.2);
	var sideTrimMaterial = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	var f_S_LeanLeftTrim = new THREE.Mesh(sideTrimGeo,sideTrimMaterial);
	f_S_LeanLeftTrim.name = "F_S_L_L_T";
	f_S_LeanLeftTrim.rotation.x=Math.PI/-2;
	f_S_LeanLeftTrim.visible =  params.singleSlope;
	f_S_LeanLeftTrim.scale.set(1,params.p_d + 0.37,1);
	f_S_LeanLeftTrim.position.set(params.p_w/-2-0.16,params.p_h-f_S_L_L_TrimHeight[params.p_r_p][params.p_w],0);
	f_S_LeanLeftTrim.rotation.y= f_S_L_L_Trim_Rot_Y[params.p_r_p][params.p_w];
	if(params.p_r_s=="2"){
		f_S_LeanLeftTrim.scale.set(1+0.6,params.p_d + 0.37+0.65,1);
		f_S_LeanLeftTrim.position.set(params.p_w/-2-0.26,params.p_h-f_S_L_L_TrimHeight[params.p_r_p][params.p_w]-0.022,0);
		f_S_LeanLeftTrim.position.set(params.p_w/-2-0.26,params.p_h-f_S_L_L_TrimHeight[params.p_r_p][params.p_w]-0.016,0);
		f_S_LeanLeftTrim.rotation.y= f_S_L_L_Trim_Rot_Y[params.p_r_p][params.p_w]-0.03;
	}
	if(params.p_r_s=="2" && params.p_r_p=="3"){
		f_S_LeanLeftTrim.scale.set(1+0.3,params.p_d + 0.37+0.65,1);
		f_S_LeanLeftTrim.position.set(params.p_w/-2-0.22,params.p_h-f_S_L_L_TrimHeight[params.p_r_p][params.p_w]-0.018,0);
		f_S_LeanLeftTrim.rotation.y= f_S_L_L_Trim_Rot_Y[params.p_r_p][params.p_w];
	}
	const_var.F_S_L_R.add(f_S_LeanLeftTrim);

	/* Free Standing LeanTo Right Trim */ 
	const f_S_L_R_Trim_Rot_Y ={"2":2.98,"3":2.9}
	var f_S_LeanRightTrim = new THREE.Mesh(sideTrimGeo,sideTrimMaterial);
	f_S_LeanRightTrim.name = "F_S_L_R_T";
	f_S_LeanRightTrim.rotation.x=Math.PI/-2;
	f_S_LeanRightTrim.visible = params.singleSlope;

	f_S_LeanRightTrim.scale.set(1,params.p_d + 0.37,1);
	f_S_LeanRightTrim.position.set(params.p_w/2+0.04,params.p_h+f_S_L_R_TrimHeight[params.p_r_p][params.p_w],0);
	f_S_LeanRightTrim.rotation.y=f_S_L_R_Trim_Rot_Y[params.p_r_p];
	if(params.p_r_p == "3"){
		f_S_LeanRightTrim.scale.set(0.5,params.p_d + 0.37,1);
		f_S_LeanRightTrim.position.set(params.p_w/2-0.05,params.p_h+f_S_L_R_TrimHeight[params.p_r_p][params.p_w],0);
	}
	if(params.p_r_s == "2" ){
		f_S_LeanRightTrim.scale.set(1+0.3,params.p_d + 0.37+0.65,1);
		f_S_LeanRightTrim.position.set(params.p_w/2+0.08,(params.p_h+f_S_L_R_TrimHeight[params.p_r_p][params.p_w])+0.009,0);
		f_S_LeanRightTrim.position.set(params.p_w/2+0.08,(params.p_h+f_S_L_R_TrimHeight[params.p_r_p][params.p_w])+0.006,0);
	}
	if(params.p_r_p == "3" && params.p_r_s == "2" ){
		const f_S_L_R_Trim_Rot_Y ={"2":2.98,"3":2.9}
		var f_S_L_R_TrimScale = {"3":{"6":0.9,"7":0.83,"8":0.79,"9":0.75,"10":0.72,"11":0.69,"12":0.6,"13":0.52,"14":0.5,"15":0.5,"16":0.4,"17":0.35,"18":0.30,"19":0.20,"20":0.13,"21":0.10,"22":0.20,"23":0.20,"24":0.10,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},}
		var f_S_L_R_TrimPosX =  {"3":{"6":0.1,"7":0.12,"8":0.1,"9":0.1,"10":0.09,"11":0.08,"12":0.075,"13":0.06,"14":0.05,"15":0.03,"16":0.03,"17":0.03,"18":0.03,"19":0.03,"20":0.02,"21":0.02,"22":-0.02,"23":-0.03,"24":-0.03,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},}
		var f_S_L_R_TrimPosY =  {"3":{"6":1.417,"7":1.66,"8":1.89,"9":2.135,"10":2.398,"11":2.645,"12":2.895,"13":3.155,"14":3.39,"15":3.635,"16":3.91,"17":4.114,"18":4.382,"19":4.625 ,"20":4.88,"21":5.137,"22":5.375,"23":5.615,"24":5.873,"25":0.55,"26":0.55,"27":0.60,"28":0.65,"29":0.70,"30":0.75,},}
		f_S_LeanRightTrim.scale.set(0.5+f_S_L_R_TrimScale[params.p_r_p][params.p_w],params.p_d + 0.37+0.65,0.98);
		f_S_LeanRightTrim.position.set(params.p_w/2+f_S_L_R_TrimPosX[params.p_r_p][params.p_w],params.p_h+f_S_L_R_TrimPosY[params.p_r_p][params.p_w],0);
		f_S_LeanRightTrim.rotation.y=f_S_L_R_Trim_Rot_Y[params.p_r_p];
	}
	const_var.F_S_L_R.add(f_S_LeanRightTrim);


	//Building Roof Left Front Regular Bow
	var leftFrontRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
	leftFrontRegularBow.name = "leftFrontRegularBow";
	leftFrontRegularBow.scale.set(params.p_w/2,0.25,1);	
	leftFrontRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
	leftFrontRegularBow.position.set(params.p_w/-4+0.19, params.p_h + hInc + 0.03 + hFrR, params.p_d/2 - 0.12);
	leftFrontRegularBow.rotation.z = bowsRotationR[params.p_r_p][params.p_w];
	leftFrontRegularBow.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontRegularBow);

	// Left Front Bow first small curve
	var leftFrontBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	leftFrontBow1.name = "leftFrontBow1";
	leftFrontBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
	leftFrontBow1.position.set((params.p_w/-2 + cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),params.p_d/2 - 0.12);
	leftFrontBow1.rotation.z = cBowRotation1[params.p_r_p][params.p_w];;
	leftFrontBow1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontBow1);

    //Left Front Bow second curve
	var leftFrontBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	leftFrontBow2.name = "leftFrontBow2";
	leftFrontBow2.scale.set(0.12,0.25,1);	
	leftFrontBow2.position.set(params.p_w/-2+0.16,params.p_h + 0.34,params.p_d/2 - 0.12);
	leftFrontBow2.rotation.z = 0.7600;
	leftFrontBow2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontBow2);
	
	//Left Front Bow third curve
	var leftFrontBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	leftFrontBow3.name = "leftFrontBow3";
	leftFrontBow3.scale.set(0.40,0.25,1);	
	leftFrontBow3.position.set(params.p_w/-2+0.11,params.p_h + 0.15,params.p_d/2 - 0.12);
	leftFrontBow3.rotation.z = 1.41000;
	leftFrontBow3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftFrontBow3)	
	

	//Center Building Right Front Bow
	var rightFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
	rightFrontBow.name = "rightFrontBow";
	rightFrontBow.scale.set(params.p_w/2,0.25,1);	
	rightFrontBow.rotation.z = -bowsRotation[params.p_r_p];
	rightFrontBow.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	rightFrontBow.position.set(params.p_w/4-0.08,params.p_h + hInc + 0.03 + hFrR,params.p_d/2 - 0.12);
	rightFrontBow.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_R.add(rightFrontBow);

	//Building Roof Right Front Regular Bow
	var rightFrontRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
	rightFrontRegularBow.name = "rightFrontRegularBow";
	rightFrontRegularBow.scale.set(params.p_w/2,0.25,1);	
	rightFrontRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
	rightFrontRegularBow.position.set(params.p_w/4-0.19, params.p_h + hInc + 0.03 + hFrR, params.p_d/2 - 0.12);
	rightFrontRegularBow.rotation.z = -bowsRotationR[params.p_r_p][params.p_w];
	rightFrontRegularBow.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightFrontRegularBow);

	// Right Front Bow first small curve
	var rightFrontBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	rightFrontBow1.name = "rightFrontBow1";
	rightFrontBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
	rightFrontBow1.position.set((params.p_w/2 - cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),params.p_d/2 - 0.12);
	rightFrontBow1.rotation.z = -cBowRotation1[params.p_r_p][params.p_w];;
	rightFrontBow1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightFrontBow1);
	
	 //Right Front Bow second curve
	 var rightFrontBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	 rightFrontBow2.name = "rightFrontBow2";
	 rightFrontBow2.scale.set(0.12,0.25,1);	
	 rightFrontBow2.position.set(params.p_w/2-0.16,params.p_h + 0.34,params.p_d/2 - 0.12);
	 rightFrontBow2.rotation.z = -0.7600;
	 rightFrontBow2.visible = (params.p_r_s == "1")?true:false;
	 const_var.b_t_M_R.add(rightFrontBow2);
	 
	//Right Front Bow third curve
	var rightFrontBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	rightFrontBow3.name = "rightFrontBow3";
	rightFrontBow3.scale.set(0.40,0.25,1);	
	rightFrontBow3.position.set(params.p_w/2-0.11,params.p_h + 0.15,params.p_d/2 - 0.12);
	rightFrontBow3.rotation.z = -1.41000;
	rightFrontBow3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightFrontBow3)	 
	
	//Building Roof Left Back Bow	
	var leftBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
	leftBackBow.name = "leftBackBow";
	leftBackBow.scale.set(params.p_w/2,0.25,1);	
	leftBackBow.rotation.z = bowsRotation[params.p_r_p];
	leftBackBow.scale.x = (params.singleSlope == true)? params.p_w+ s_S_LeanBowsScale[params.p_r_p][params.p_w]:params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	leftBackBow.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + hFrR,params.p_d/-2 + 0.12);
	 leftBackBow.position.x =(params.singleSlope == true)? 0 : params.p_w/-4+0.08;
	 leftBackBow.position.y =(params.singleSlope == true)? params.p_h + f_S_LeanBowsHeight[params.p_r_p][params.p_w]:params.p_h + hInc + 0.03 + hFrR;
	leftBackBow.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_L.add(leftBackBow);

	//Building Roof Left Back Regular Bow
	var leftBackRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
	leftBackRegularBow.name = "leftBackRegularBow";
	leftBackRegularBow.scale.set(params.p_w/2,0.25,1);	
	leftBackRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
	leftBackRegularBow.position.set(params.p_w/-4+0.19, params.p_h + hInc + 0.03 + hFrR, params.p_d/-2 + 0.12);
	leftBackRegularBow.rotation.z = bowsRotationR[params.p_r_p][params.p_w];
	leftBackRegularBow.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackRegularBow);	

	// Left Back Bow first small curve
	var leftBackBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	leftBackBow1.name = "leftBackBow1";
	leftBackBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
	leftBackBow1.position.set((params.p_w/-2 + cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),params.p_d/-2 + 0.12);
	leftBackBow1.rotation.z = cBowRotation1[params.p_r_p][params.p_w];;
	leftBackBow1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackBow1);
    
	//Left Back Bow second curve
	var leftBackBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	leftBackBow2.name = "leftBackBow2";
	leftBackBow2.scale.set(0.12,0.25,1);	
	leftBackBow2.position.set(params.p_w/-2+0.16,params.p_h + 0.34,params.p_d/-2 + 0.12);
	leftBackBow2.rotation.z = 0.7600;
	leftBackBow2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackBow2);
	
	//Left Back Bow third curve
	var leftBackBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	leftBackBow3.name = "leftBackBow3";
	leftBackBow3.scale.set(0.40,0.25,1);	
	leftBackBow3.position.set(params.p_w/-2+0.11,params.p_h + 0.15,params.p_d/-2 + 0.12);
	leftBackBow3.rotation.z = 1.41000;
	leftBackBow3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_L.add(leftBackBow3)	

	//Center Building Right Back Bow	
	var rightBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
	rightBackBow.name = "rightBackBow";	
	rightBackBow.scale.set(params.p_w/2,0.25,1);	
	rightBackBow.rotation.z = -bowsRotation[params.p_r_p];
	rightBackBow.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	rightBackBow.position.set(params.p_w/4-0.08,params.p_h + hInc + 0.03 + hFrR,params.p_d/-2 + 0.12);
	rightBackBow.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_R.add(rightBackBow);

	//Building Roof Right Back Regular Bow
	var rightBackRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
	rightBackRegularBow.name = "rightBackRegularBow";
	rightBackRegularBow.scale.set(params.p_w/2,0.25,1);	
	rightBackRegularBow.scale.x =(params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
	rightBackRegularBow.position.set(params.p_w/4-0.19, params.p_h + hInc + 0.03 + hFrR, params.p_d/-2 +0.12);
	rightBackRegularBow.rotation.z = -bowsRotationR[params.p_r_p][params.p_w];
	rightBackRegularBow.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightBackRegularBow);	

    // Right Back Bow first small curve
	var rightBackBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	rightBackBow1.name = "rightBackBow1";
	rightBackBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
	rightBackBow1.position.set((params.p_w/2 - cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),params.p_d/-2 + 0.12);
	rightBackBow1.rotation.z = -cBowRotation1[params.p_r_p][params.p_w];;
	rightBackBow1.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightBackBow1);

	//Right Back Bow second curve
	var rightBackBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	rightBackBow2.name = "rightBackBow2";
	rightBackBow2.scale.set(0.12,0.25,1);	
	rightBackBow2.position.set(params.p_w/2-0.16,params.p_h + 0.34,params.p_d/-2 + 0.12);
	rightBackBow2.rotation.z = -0.7600;
	rightBackBow2.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightBackBow2);

	//Right Front Bow third curve
	var rightBackBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	rightBackBow3.name = "rightBackBow3";
	rightBackBow3.scale.set(0.40,0.25,1);	
	rightBackBow3.position.set(params.p_w/2-0.11,params.p_h + 0.15,params.p_d/-2 + 0.12);
	rightBackBow3.rotation.z = -1.41000;
	rightBackBow3.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_R.add(rightBackBow3)

	//Building Roof Left Bow 2nd for comerical building
	var leftFrontBowS = leftFrontBow.clone();
	leftFrontBowS.name = "leftFrontBowS";	
	leftFrontBowS.scale.set(params.p_w/2,0.2,1);	
	leftFrontBowS.position.set(params.p_w/-4+0.08,params.p_h - 0.7 + hInc + 0.03,params.p_d/2 - 0.12);	
	leftFrontBowS.rotation.z = bowsRotation[params.p_r_p];
	leftFrontBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	// const_var.b_t_M_L.add(leftFrontBowS);
	

	//Building Roof Left Back Bow 2nd for comerical building
	var leftBackBowS = leftBackBow.clone();
	leftBackBowS.name = "leftBackBowS";	
	leftBackBowS.scale.set(params.p_w/2,0.2,1);	
	leftBackBowS.position.set(params.p_w/-4+0.08,params.p_h - 0.7 + hInc + 0.03,params.p_d/-2 + 0.12);	
	leftBackBowS.rotation.z = bowsRotation[params.p_r_p];
	leftBackBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	// const_var.b_t_M_L.add(leftBackBowS);
	
	//Adjuct Horizontal Bow Y axis Position With Roof Pitch
	var hrzBowYpos = {
					   "1":{"12":0.05,"13":0.05,"14":0.05,"15":0.05,"16":0.05,"17":0.05,"18":0.05,"19":0.05,"20":0.05,"21":0.05,"22":0.05,"23":0.05,"24":0.05,"25":0.05,"26":0.2,"27":0.2,"28":0.2,"29":0.2,"30":0.2,"31":0.2},
					   "2":{"12":0.15,"13":0.15,"14":0.15,"15":0.15,"16":0.15,"17":0.15,"18":0.15,"19":0.15,"20":0.15,"21":0.15,"22":0.15,"23":0.15,"24":0.15,"25":0.15,"26":0.4,"27":0.4,"28":0.4,"29":0.4,"30":0.4,"31":0.4},
					   "3":{"12":0.26,"13":0.26,"14":0.26,"15":0.26,"16":0.26,"17":0.26,"18":0.26,"19":0.25,"20":0.25,"21":0.25,"22":0.25,"23":0.25,"24":0.25,"25":0.25,"26":0.6,"27":0.6,"28":0.6,"29":0.6,"30":0.6,"31":0.6},
					   "4":{"12":0.40,"13":0.40,"14":0.40,"15":0.40,"16":0.40,"17":0.40,"18":0.40,"19":0.40,"20":0.40,"21":0.40,"22":0.40,"23":0.40,"24":0.40,"25":0.40,"26":0.2,"27":0.2,"28":0.2,"29":0.2,"30":0.2,"31":0.2},
					   "5":{"12":0.52,"13":0.52,"14":0.52,"15":0.52,"16":0.52,"17":0.51,"18":0.51,"19":0.51,"20":0.51,"21":0.50,"22":0.50,"23":0.50,"24":0.50,"25":0.50,"26":0.4,"27":0.4,"28":0.4,"29":0.4,"30":0.4,"31":0.4},
					   "6":{"12":0.60,"13":0.60,"14":0.60,"15":0.60,"16":0.60,"17":0.60,"18":0.60,"19":0.60,"20":0.60,"21":0.60,"22":0.60,"23":0.60,"24":0.60,"25":0.60,"26":0.4,"27":0.4,"28":0.4,"29":0.4,"30":0.4,"31":0.4},
					  };
		//ravi change
	var hrzBowYpos = {
						"1":{"12":0.05,"13":0.05,"14":0.05,"15":0.05,"16":0.05,"17":0.05,"18":0.05,"19":0.05,"20":0.05,"21":0.05,"22":0.05,"23":0.05,"24":0.05,"25":0.05,"26":0.2,"27":0.2,"28":0.2,"29":0.2,"30":0.2,"31":0.2},
						"2":{"12":0.15,"13":0.15,"14":0.15,"15":0.15,"16":0.15,"17":0.15,"18":0.15,"19":0.15,"20":0.15,"21":0.15,"22":0.15,"23":0.15,"24":0.15,"25":0.15,"26":0.4,"27":0.4,"28":0.4,"29":0.4,"30":0.4,"31":0.4},
						"3":{"12":0.26,"13":0.26,"14":0.26,"15":0.26,"16":0.26,"17":0.26,"18":0.26,"19":0.25,"20":0.25,"21":0.25,"22":0.25,"23":0.25,"24":0.25,"25":0.25,"26":0.4,"27":0.4,"28":0.4,"29":0.4,"30":0.4,"31":0.6},
						"4":{"12":0.40,"13":0.40,"14":0.40,"15":0.40,"16":0.40,"17":0.40,"18":0.40,"19":0.40,"20":0.40,"21":0.40,"22":0.40,"23":0.40,"24":0.40,"25":0.40,"26":0.2,"27":0.2,"28":0.2,"29":0.2,"30":0.2,"31":0.2},
						"5":{"12":0.52,"13":0.52,"14":0.52,"15":0.52,"16":0.52,"17":0.51,"18":0.51,"19":0.51,"20":0.51,"21":0.50,"22":0.50,"23":0.50,"24":0.50,"25":0.50,"26":0.18,"27":0.18,"28":0.18,"29":0.2,"30":0.2,"31":0.4},
						"6":{"12":0.60,"13":0.60,"14":0.60,"15":0.60,"16":0.60,"17":0.60,"18":0.60,"19":0.60,"20":0.60,"21":0.60,"22":0.60,"23":0.60,"24":0.60,"25":0.60,"26":0.4,"27":0.4,"28":0.4,"29":0.4,"30":0.4,"31":0.4},
					   };				  
					  

	//Adjuct Height For Bow 
	var hIncForBow = (params.p_w < 25)?(2*hInc - hrzBowYpos[params.p_r_p][params.p_w]):hInc;

	//Adjust Scale For Bow
	var hBowsScale = (params.p_w < 25)?3:params.p_w/2 + hrzBowYpos[params.p_r_p][params.p_w];

	//Front Middle Small Bow Snow 	
	var hrzFMBow = new THREE.Mesh(bowGeometry,bowMaterial);
	hrzFMBow.name = "hrzFMBow";
	hrzFMBow.scale.set(params.p_w/2,0.2,1);
	hrzFMBow.scale.x = hBowsScale;
	hrzFMBow.position.set(0,params.p_h + hIncForBow + hFrR,params.p_d/2 - 0.12);
	hrzFMBow.visible = (params.singleSlope == true )?false:true
	const_var.b_t_M_L.add(hrzFMBow);

	//Back Middle Small Bow Snow
	var hrzBMBow = new THREE.Mesh(bowGeometry,bowMaterial);
	hrzBMBow.name = "hrzBMBow";
	hrzBMBow.scale.set(params.p_w/2,0.2,1);	
	hrzBMBow.scale.x = hBowsScale;//params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	hrzBMBow.position.set(0,params.p_h + hIncForBow + hFrR,params.p_d/-2 + 0.12);
	hrzBMBow.visible = (params.singleSlope == true )?false:true

	const_var.b_t_M_L.add(hrzBMBow);
	
	////var vrtBowYpos = {"12":0,"13":0,"14":0,"15":0.1,"16":0.1,"17":0.15,"18":0.15,"19":0.2,"20":0.25,"21":0.3,"22":0.3,"23":0.25,"24":0.25,"25":0.5,"26":0.5,"27":0.5,"28":0.5,"29":0.5,"30":0.5};
	////var vrtBowScale = {"12":0,"13":0,"14":0,"15":-0.1,"16":-0.2,"17":-0.25,"18":-0.3,"19":-0.35,"20":-0.35,"21":-0.35,"22":-0.25,"23":-0.45,"24":-0.5,"25":0.25,"26":0.25,"27":0.25,"28":0.25,"29":0.25,"30":0.25};
	
	//Adjust Vetical Front Middle Bow Yaxis Position With Roof Pitch
	var vrtBowYpos = {"1":0.15,"2":0.23,"3":0.33,"4":0.43,"5":0.53,"6":0.63};
	//Adjust Vetical Front Middle Bow Scale 
	var vrtBowScale = {"1":0.23,"2":0.23,"3":0.3,"4":0.2,"5":0.0,"6":0.0};
	//Adjust Vetical Front Middle Bow Yaxis Position With Roof Pitch and Building Width
	var vrtBowYposN =  {
					   "1":{"26":0.15,"27":0.15,"28":0.15,"29":0.15,"30":0.16,"31":0.17},
					   "2":{"26":0.26,"27":0.26,"28":0.26,"29":0.27,"30":0.28,"31":0.29},
					   "3":{"26":0.37,"27":0.37,"28":0.37,"29":0.39,"30":0.41,"31":0.41},
					   "4":{"26":0.45,"27":0.49,"28":0.50,"29":0.51,"30":0.52,"31":0.53},
					   "5":{"26":0.55,"27":0.57,"28":0.59,"29":0.61,"30":0.63,"31":0.65},
					   "6":{"26":0.65,"27":0.67,"28":0.69,"29":0.71,"30":0.75,"31":0.75}
					  };
	//Center Building Front Middle Verticall Bow				  
	var vrtFMBow = new THREE.Mesh(bowGeometry,bowMaterial);
	vrtFMBow.name = "vrtFMBow";
	vrtFMBow.scale.set(0.2,hInc + vrtBowScale[params.p_r_p],1);
	vrtFMBow.position.set(params.p_w/-8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],params.p_d/2 - 0.12);
	vrtFMBow.rotation.z = Math.PI/4;
	vrtFMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR + 0.02;
	const_var.b_t_M_L.add((params.p_w >= 26 && params.p_w <= 30)?(vrtFMBow):'');
	
	//Center Building Back Middle Verticall Bow
	var vrtBMBow = new THREE.Mesh(bowGeometry,bowMaterial);
	vrtBMBow.name = "vrtBMBow";
	vrtBMBow.scale.set(0.2,hInc,1);
	vrtBMBow.position.set(params.p_w/-8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],params.p_d/-2 + 0.12);
	vrtBMBow.rotation.z = Math.PI/4;
	vrtBMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
	const_var.b_t_M_L.add((params.p_w >= 26 && params.p_w <= 30)?(vrtBMBow):'');

	//Center Building Right Front Bow 2nd
	var rightFrontBowS = rightFrontBow.clone();
	rightFrontBowS.name = "rightFrontBowS";	
	rightFrontBowS.scale.set(params.p_w/2,0.2,1);	
	rightFrontBowS.position.set(params.p_w/4-0.08,params.p_h - 0.7 + hInc + 0.03,params.p_d/2 - 0.12);	
	rightFrontBowS.rotation.z = -bowsRotation[params.p_r_p];
	rightFrontBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	////const_var.b_t_M_R.add(rightFrontBowS);
	

	//Center Building Right Back Bow 2nd
	var rightBackBowS = rightBackBow.clone();
	rightBackBowS.name = "rightBackBowS";	
	rightBackBowS.scale.set(params.p_w/2,0.2,1);	
	rightBackBowS.position.set(params.p_w/4-0.08,params.p_h - 0.7 + hInc + 0.03,params.p_d/-2 + 0.12);	
	rightBackBowS.rotation.z = -bowsRotation[params.p_r_p];
	rightBackBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];	
	////const_var.b_t_M_R.add(rightBackBowS);
	
	//var vrtBowYpos = {"12":0,"13":0,"14":0,"15":0.1,"16":0.1,"17":0.15,"18":0.15,"19":0.2,"20":0.25,"21":0.3,"22":0.3,"23":0.25,"24":0.25};
	//var vrtBowScale = {"12":0,"13":0,"14":0,"15":-0.1,"16":-0.2,"17":-0.25,"18":-0.3,"19":-0.35,"20":-0.35,"21":-0.35,"22":-0.25,"23":-0.45,"24":-0.5};
	
	//Front Vertically Bow For Right Side Of Building
	var vrtRFMBow = new THREE.Mesh(bowGeometry,bowMaterial);
	vrtRFMBow.name = "vrtRFMBow";
	vrtRFMBow.scale.set(0.2,hInc,1);
	vrtRFMBow.position.set(params.p_w/8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],params.p_d/2 - 0.12);
	vrtRFMBow.rotation.z = -Math.PI/4;
	vrtRFMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
	const_var.b_t_M_R.add((params.p_w >= 26 && params.p_w <= 30)?(vrtRFMBow):'');
	
	//Back Vertically Bow For Right Side Of Building
	var vrtRBMBow = new THREE.Mesh(bowGeometry,bowMaterial);
	vrtRBMBow.name = "vrtRBMBow";
	vrtRBMBow.scale.set(0.2,hInc,1);
	vrtRBMBow.position.set(params.p_w/8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],params.p_d/-2 + 0.12);
	vrtRBMBow.rotation.z = -Math.PI/4;
	vrtRBMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
	const_var.b_t_M_R.add((params.p_w >= 26 && params.p_w <= 30)?(vrtRBMBow):'');

	//Set Cornner Connector Of Building
	var lftCXPosN = {"1":0.00,"2":0.10,"3":0.12,"4":0.20,"5":0.25,"6":0.30,};
	var lftCYPos = 	{"1":0.10,"2":0.15,"3":0.15,"4":0.15,"5":0.20,"6":0.20,};

	//Center Building Left Front Corrner
	var leftFrontCornner = new THREE.Mesh(bowGeometry,bowMaterial);
	leftFrontCornner.name = "leftFrontCornner";
	leftFrontCornner.scale.set(2.12,0.2,0.5);
	leftFrontCornner.scale.set(2.11,0.2,0.5);
	leftFrontCornner.position.x = params.p_w/-2 + 0.83 - lftCXPosN[params.p_r_p];
	//leftFrontCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p];
	leftFrontCornner.position.z = params.p_d/2 - 0.12;
	leftFrontCornner.rotation.z = 0.7 + bowsRotation[params.p_r_p];
	leftFrontCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;
	leftFrontCornner.visible = (params.p_r_p <= 6)? true:false;
	const_var.b_t_M_L.add(leftFrontCornner);
	
	//Center Building Left Back Corrner
	var leftBackCornner = new THREE.Mesh(bowGeometry,bowMaterial);
	leftBackCornner.name = "leftBackCornner";
	leftBackCornner.visible = (params.p_r_p <= 6)? true:false;
	leftBackCornner.scale.set(2.12,0.2,0.5);
	leftBackCornner.scale.set(2.11,0.2,0.5);
	leftBackCornner.position.x = params.p_w/-2 + 0.83 - lftCXPosN[params.p_r_p];
	////leftBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p];
	leftBackCornner.position.z = params.p_d/-2 + 0.12;
	leftBackCornner.rotation.z = 0.7 + bowsRotation[params.p_r_p];
	leftBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;
	const_var.b_t_M_L.add(leftBackCornner);
	
	//Center Building Right Front Corrner
	var rightFrontCornner = new THREE.Mesh(bowGeometry,bowMaterial);
	rightFrontCornner.name = "rightFrontCornner";
	rightFrontCornner.visible = (params.p_r_p <= 6)? true:false;
	rightFrontCornner.scale.set(2.12,0.2,0.5);
	rightFrontCornner.position.x = params.p_w/2 - 0.83 + lftCXPosN[params.p_r_p];
	rightFrontCornner.position.z = params.p_d/2 - 0.12;
	rightFrontCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
	rightFrontCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;
	const_var.b_t_M_R.add(rightFrontCornner);
	
	//Center Building Right Back Corrner
	var rightBackCornner = new THREE.Mesh(bowGeometry,bowMaterial);
	rightBackCornner.name = "rightBackCornner";
	rightBackCornner.visible = (params.p_r_p <= 6)? true:false;
	rightBackCornner.scale.set(2.12,0.2,0.5);
	rightBackCornner.position.x = params.p_w/2 - 0.83 + lftCXPosN[params.p_r_p];
	rightBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p];
	rightBackCornner.position.z = params.p_d/-2 + 0.12;
	rightBackCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
	rightBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;
	const_var.b_t_M_R.add(rightBackCornner);

	const_var.b_t_M_R.visible =(params.singleSlope == true)? false :true;

		//f_S_Lean Right Front Corrner
		var f_S_LeanRightFrontCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		f_S_LeanRightFrontCornner.name = "f_S_LeanRightFrontCornner";
		f_S_LeanRightFrontCornner.scale.set(2.16,0.2,0.5);
		f_S_LeanRightFrontCornner.position.x =  params.p_w/2- 0.95+ lftCXPosN[params.p_r_p];
		f_S_LeanRightFrontCornner.position.y = params.p_h + f_S_LeanRightCorner[params.p_r_p][params.p_w];
		f_S_LeanRightFrontCornner.position.z = params.p_d/2 - 0.12;
		f_S_LeanRightFrontCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
		f_S_LeanRightFrontCornner.visible = (params.singleSlope == true)? true:false;
		const_var.F_S_L_R.add(f_S_LeanRightFrontCornner);
		
		// //f_S_Lean Right Back Corrner
		var f_S_LeanRightBackCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		f_S_LeanRightBackCornner.name = "f_S_LeanRightBackCornner";
		f_S_LeanRightBackCornner.scale.set(2.16,0.2,0.5);
		f_S_LeanRightBackCornner.position.x = params.p_w/2 - 0.95 + lftCXPosN[params.p_r_p];
		f_S_LeanRightBackCornner.position.y = params.p_h + f_S_LeanRightCorner[params.p_r_p][params.p_w];
		f_S_LeanRightBackCornner.position.z = params.p_d/-2 + 0.12;
		f_S_LeanRightBackCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
		f_S_LeanRightBackCornner.visible = (params.singleSlope == true)? true:false;
		const_var.F_S_L_R.add(f_S_LeanRightBackCornner);
	
	//Adjust Building Both Side Bows And Corrner Connector According To Building Length
	
	for(var i = 0; i < (params.p_d/2 - 2); i = i + legDistance)
	{
		var leftFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
		leftFrontBow.name = "leftFrontBow"+i;
		leftFrontBow.scale.set(params.p_w/2,0.25,1);
		leftFrontBow.scale.x = (params.singleSlope == true)? params.p_w + s_S_LeanBowsScale[params.p_r_p][params.p_w]:params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
		leftFrontBow.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + hFrR,i.toFixed(2));
		leftFrontBow.position.x =(params.singleSlope == true)? 0 : params.p_w/-4+0.08;
		leftFrontBow.position.y =(params.singleSlope == true)? params.p_h+ f_S_LeanBowsHeight[params.p_r_p][params.p_w]:params.p_h + hInc + 0.03 + hFrR;
		leftFrontBow.rotation.z =  bowsRotation[params.p_r_p];
		leftFrontBow.visible = (params.p_r_s != "1")?true:false;
		
		
		var leftFrontRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
		leftFrontRegularBow.name = "leftFrontRegularBow"+i;
		leftFrontRegularBow.scale.set(params.p_w/2,0.25,1);	
		leftFrontRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
		leftFrontRegularBow.position.set(params.p_w/-4+0.19, params.p_h + hInc + 0.03 + hFrR,i.toFixed(2));
		leftFrontRegularBow.rotation.z = bowsRotationR[params.p_r_p][params.p_w];
		leftFrontRegularBow.visible = (params.p_r_s == "1")?true:false;
	

		// Left Front Bow first small curve
		var leftFrontBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		leftFrontBow1.name = "leftFrontBow1"+i;
		leftFrontBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
		leftFrontBow1.position.set((params.p_w/-2 + cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),i.toFixed(2));
		leftFrontBow1.rotation.z = cBowRotation1[params.p_r_p][params.p_w];;
		leftFrontBow1.visible = (params.p_r_s == "1")?true:false;
		
		//Left Front Bow second curve
		var leftFrontBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		leftFrontBow2.name = "leftFrontBow2"+i;
		leftFrontBow2.scale.set(0.12,0.25,1);	
		leftFrontBow2.position.set(params.p_w/-2+0.16,params.p_h + 0.34,i.toFixed(2));
		leftFrontBow2.rotation.z = 0.7600;
		leftFrontBow2.visible = (params.p_r_s == "1")?true:false;
	

		//Left Front Bow third curve
		var leftFrontBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		leftFrontBow3.name = "leftFrontBow3"+i;
		leftFrontBow3.scale.set(0.368,0.25,1);	
		leftFrontBow3.position.set(params.p_w/-2+0.108,params.p_h + 0.163,i.toFixed(2));
		leftFrontBow3.rotation.z = 1.40000;
		leftFrontBow3.visible = (params.p_r_s == "1")?true:false;

		var leftBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
		leftBackBow.name = "leftBackBow"+i;
		leftBackBow.scale.set(params.p_w/2,0.2,1);	
		leftBackBow.rotation.z = bowsRotation[params.p_r_p];
		// leftBackBow.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
		// leftBackBow.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + hFrR,-i.toFixed(2));
		leftBackBow.scale.x = (params.singleSlope == true)?params.p_w + s_S_LeanBowsScale[params.p_r_p][params.p_w]:params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
		leftBackBow.position.set(params.p_w/-4+0.08,params.p_h + hInc + 0.03 + hFrR,-i.toFixed(2));
		 leftBackBow.position.x =(params.singleSlope == true)? 0 : params.p_w/-4+0.08;
		 leftBackBow.position.y =(params.singleSlope == true)? params.p_h + f_S_LeanBowsHeight[params.p_r_p][params.p_w]:params.p_h + hInc + 0.03 + hFrR;
		leftBackBow.visible = (params.p_r_s != "1")?true:false;

		//Building Roof Left Back Regular Bow
		var leftBackRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
		leftBackRegularBow.name = "leftBackRegularBow"+i;
		leftBackRegularBow.scale.set(params.p_w/2,0.25,1);	
		leftBackRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
		leftBackRegularBow.position.set(params.p_w/-4+0.19, (params.p_h + hInc + 0.03 + hFrR),-i.toFixed(2));
		leftBackRegularBow.rotation.z = bowsRotationR[params.p_r_p][params.p_w];
		leftBackRegularBow.visible = (params.p_r_s == "1")?true:false;

	   // Left Back Bow first small curve
		var leftBackBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		leftBackBow1.name = "leftBackBow1"+i;
		leftBackBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
		leftBackBow1.position.set((params.p_w/-2 + cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),-i.toFixed(2));
		leftBackBow1.rotation.z = cBowRotation1[params.p_r_p][params.p_w];;
		leftBackBow1.visible = (params.p_r_s == "1")?true:false;

		//Left Back Bow second curve
		var leftBackBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		leftBackBow2.name = "leftBackBow2"+i;
		leftBackBow2.scale.set(0.12,0.25,1);	
		leftBackBow2.position.set(params.p_w/-2+0.16,params.p_h + 0.34,-i.toFixed(2));
		leftBackBow2.rotation.z = 0.7600;
		leftBackBow2.visible = (params.p_r_s == "1")?true:false;

	    //Left Back Bow third curve
	    var leftBackBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
	    leftBackBow3.name = "leftBackBow3"+i;
	    leftBackBow3.scale.set(0.368,0.25,1);	
	    leftBackBow3.position.set(params.p_w/-2+0.108,params.p_h + 0.163,-i.toFixed(2));
	    leftBackBow3.rotation.z = 1.40000;
	    leftBackBow3.visible = (params.p_r_s == "1")?true:false;

		var hrzFMBow = new THREE.Mesh(bowGeometry,bowMaterial);
		hrzFMBow.name = "hrzFMBow"+i;
		hrzFMBow.scale.set(params.p_w/2,0.2,1);
		hrzFMBow.scale.x = hBowsScale;
		hrzFMBow.position.set(0,params.p_h + hIncForBow + hFrR,i.toFixed(2));
		hrzFMBow.visible = (params.singleSlope == true )?false:true
	
		var hrzBMBow = new THREE.Mesh(bowGeometry,bowMaterial);
		hrzBMBow.name = "hrzBMBow"+i;
		hrzBMBow.scale.set(params.p_w/2,0.2,1);	
		hrzBMBow.scale.x = hBowsScale;
		hrzBMBow.position.set(0,params.p_h + hIncForBow + hFrR,-i.toFixed(2));
		hrzBMBow.visible = (params.singleSlope == true )?false:true

		var vrtFMBow = new THREE.Mesh(bowGeometry,bowMaterial);
		vrtFMBow.name = "vrtFMBow"+i;
		vrtFMBow.scale.set(0.2,hInc,1);
		vrtFMBow.position.set(params.p_w/-8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],i.toFixed(2));
		vrtFMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
		vrtFMBow.rotation.z = Math.PI/4;		
		
		var vrtBMBow = new THREE.Mesh(bowGeometry,bowMaterial);
		vrtBMBow.name = "vrtBMBow"+i;
		vrtBMBow.scale.set(0.2,hInc,1);
		vrtBMBow.position.set(params.p_w/-8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],-i.toFixed(2));
		vrtBMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
		vrtBMBow.rotation.z = Math.PI/4;
	
		var leftFrontCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		leftFrontCornner.name = "leftFrontCornner"+i;
		leftFrontCornner.visible = (params.p_r_p <= 6)? true:false;
		leftFrontCornner.scale.set(2.12,0.2,0.5);
		leftFrontCornner.scale.set(2.11,0.2,0.5);
		leftFrontCornner.position.x = params.p_w/-2 + 0.83 - lftCXPosN[params.p_r_p];
		////leftFrontCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p];
		leftFrontCornner.position.z = i.toFixed(2);
		leftFrontCornner.rotation.z = 0.7 + bowsRotation[params.p_r_p];
		leftFrontCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;
		
		var leftBackCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		leftBackCornner.name = "leftBackCornner"+i;
		leftBackCornner.visible = (params.p_r_p <= 6)? true:false;
		leftBackCornner.scale.set(2.12,0.2,0.5);
		leftBackCornner.scale.set(2.11,0.2,0.5);
		leftBackCornner.position.x = params.p_w/-2 + 0.83 - lftCXPosN[params.p_r_p];
		leftBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p];
		leftBackCornner.position.z = -i.toFixed(2);
		leftBackCornner.rotation.z = 0.7 + bowsRotation[params.p_r_p];
		leftBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;

		var leftFrontBowS = leftFrontBow.clone();
		leftFrontBowS.name = "leftFrontBowS"+i;	
		leftFrontBowS.scale.set(params.p_w/2,0.2,1);	
		leftFrontBowS.position.set(params.p_w/-4+0.08,params.p_h - 0.7 + hInc + 0.03,i.toFixed(2));	
		leftFrontBowS.rotation.z = bowsRotation[params.p_r_p];
		leftFrontBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];

		var leftBackBowS = leftBackBow.clone();
		leftBackBowS.name = "leftBackBowS"+i;	
		leftBackBowS.scale.set(params.p_w/2,0.2,1);	
		leftBackBowS.position.set(params.p_w/-4+0.08,params.p_h - 0.7 + hInc + 0.03,-i.toFixed(2));	
		leftBackBowS.rotation.z = bowsRotation[params.p_r_p];
		leftBackBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
    

		if(i!=0)
		{
			const_var.b_t_M_L.add(leftFrontBow);
			const_var.b_t_M_L.add(leftFrontRegularBow);
			const_var.b_t_M_L.add(leftFrontBow1);
			const_var.b_t_M_L.add(leftFrontBow2);
			const_var.b_t_M_L.add(leftFrontBow3);

			const_var.b_t_M_L.add(leftBackBow);
			const_var.b_t_M_L.add(leftBackRegularBow);
			const_var.b_t_M_L.add(leftBackBow1);
			const_var.b_t_M_L.add(leftBackBow2);
			const_var.b_t_M_L.add(leftBackBow3);

			const_var.b_t_M_L.add(hrzFMBow);
			const_var.b_t_M_L.add(hrzBMBow);

			const_var.b_t_M_L.add(leftFrontCornner);
			const_var.b_t_M_L.add(leftBackCornner);

			if(params.p_w >= 26 && params.p_w <= 30)
			{
				const_var.b_t_M_L.add(vrtFMBow);
				const_var.b_t_M_L.add(vrtBMBow);
			}
			
		}
		else
		{
			const_var.b_t_M_L.add(leftFrontBow);
			const_var.b_t_M_L.add(leftFrontRegularBow);
			const_var.b_t_M_L.add(leftFrontBow1);
			const_var.b_t_M_L.add(leftFrontBow2);
			const_var.b_t_M_L.add(leftFrontBow3);
			const_var.b_t_M_L.add(leftFrontCornner);
			const_var.b_t_M_L.add(hrzFMBow);
			const_var.b_t_M_L.add((params.p_w >= 26 && params.p_w <= 30)?(vrtFMBow):'');
			////const_var.b_t_M_L.add(leftFrontBowS);
			
		}

		//Center Building Right Front Bow
	
		var rightFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
		rightFrontBow.name = "rightFrontBow"+i;
		rightFrontBow.scale.set(params.p_w/2,0.2,1);	
		rightFrontBow.rotation.z = -bowsRotation[params.p_r_p];
		rightFrontBow.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
		rightFrontBow.position.set(params.p_w/4-0.08,params.p_h + hInc + 0.03 + hFrR,i.toFixed(2));
		rightFrontBow.visible = (params.p_r_s != "1")?true:false;

		//Building Roof Right Front Regular Bow
		var rightFrontRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
		rightFrontRegularBow.name = "rightFrontRegularBow"+i;
		rightFrontRegularBow.scale.set(params.p_w/2,0.25,1);	
		rightFrontRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
		rightFrontRegularBow.position.set(params.p_w/4-0.19, params.p_h + hInc + 0.03 + hFrR,i.toFixed(2));
		rightFrontRegularBow.rotation.z = -bowsRotationR[params.p_r_p][params.p_w];
		rightFrontRegularBow.visible = (params.p_r_s == "1")?true:false;

		// Right Front Bow first small curve
		var rightFrontBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		rightFrontBow1.name = "rightFrontBow1"+i;
		rightFrontBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
		rightFrontBow1.position.set((params.p_w/2 - cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),i.toFixed(2));
		rightFrontBow1.rotation.z = -cBowRotation1[params.p_r_p][params.p_w];;
		rightFrontBow1.visible = (params.p_r_s == "1")?true:false;
		
		//Right Front Bow second curve
		var rightFrontBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		rightFrontBow2.name = "rightFrontBow2"+i;
		rightFrontBow2.scale.set(0.12,0.25,1);	
		rightFrontBow2.position.set(params.p_w/2-0.16,params.p_h + 0.34,i.toFixed(2));
		rightFrontBow2.rotation.z = -0.7600;
		rightFrontBow2.visible = (params.p_r_s == "1")?true:false;
	
		//Right Front Bow third curve
		var rightFrontBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		rightFrontBow3.name = "rightFrontBow3"+i;
		rightFrontBow3.scale.set(0.368,0.25,1);	
		rightFrontBow3.position.set(params.p_w/2-0.108,params.p_h + 0.163,i.toFixed(2));
		rightFrontBow3.rotation.z = -1.40000;
		rightFrontBow3.visible = (params.p_r_s == "1")?true:false;

		var rightBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
		rightBackBow.name = "rightBackBow"+i;
		rightBackBow.scale.set(params.p_w/2,0.2,1);	
		rightBackBow.rotation.z = -bowsRotation[params.p_r_p];
		rightBackBow.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
		rightBackBow.position.set(params.p_w/4-0.08,params.p_h + hInc + 0.03 + hFrR,-i.toFixed(2));
		rightBackBow.visible = (params.p_r_s != "1")?true:false;

		//Building Roof Right Back Regular Bow
		var rightBackRegularBow = new THREE.Mesh(bowGeometry,bowMaterial);
		rightBackRegularBow.name = "rightBackRegularBow"+i;
		rightBackRegularBow.scale.set(params.p_w/2,0.25,1);	
		rightBackRegularBow.scale.x =( params.p_w/2 + bowsScale[params.p_r_p][params.p_w])-BowScaleR[params.p_r_p][params.p_w];
		rightBackRegularBow.position.set(params.p_w/4-0.19, (params.p_h + hInc + 0.03 + hFrR), -i.toFixed(2));
		rightBackRegularBow.rotation.z = -bowsRotationR[params.p_r_p][params.p_w];
		rightBackRegularBow.visible = (params.p_r_s == "1")?true:false;

		// Right Back Bow first small curve
		var rightBackBow1 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		rightBackBow1.name = "rightBackBow1"+i;
		rightBackBow1.scale.set(cBowScale1[params.p_r_p][params.p_w],0.25,1);	
		rightBackBow1.position.set((params.p_w/2 - cBowPos1[params.p_r_p][params.p_w]["x"]),(params.p_h + cBowPos1[params.p_r_p][params.p_w]["y"]),-i.toFixed(2));
		rightBackBow1.rotation.z = -cBowRotation1[params.p_r_p][params.p_w];;
		rightBackBow1.visible = (params.p_r_s == "1")?true:false;

		//Right Back Bow second curve
		var rightBackBow2 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		rightBackBow2.name = "rightBackBow2"+i;
		rightBackBow2.scale.set(0.12,0.25,1);	
		rightBackBow2.position.set(params.p_w/2-0.16,params.p_h + 0.34,-i.toFixed(2));
		rightBackBow2.rotation.z = -0.7600;
		rightBackBow2.visible = (params.p_r_s == "1")?true:false;

		//Right Front Bow third curve
		var rightBackBow3 = new THREE.Mesh(curvedBowGeometry,curvedBowMaterial);
		rightBackBow3.name = "rightBackBow3"+i;
		rightBackBow3.scale.set(0.368,0.25,1);	
		rightBackBow3.position.set(params.p_w/2-0.108,params.p_h + 0.163,-i.toFixed(2));
		rightBackBow3.rotation.z = -1.40000;
		rightBackBow3.visible = (params.p_r_s == "1")?true:false;

		var vrtRFMBow = new THREE.Mesh(bowGeometry,bowMaterial);
		vrtRFMBow.name = "vrtRFMBow"+i;
		vrtRFMBow.scale.set(0.2,hInc,1);
		vrtRFMBow.position.set(params.p_w/8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],i.toFixed(2));
		vrtRFMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
		vrtRFMBow.rotation.z = -Math.PI/4;		
		
		var vrtRBMBow = new THREE.Mesh(bowGeometry,bowMaterial);
		vrtRBMBow.name = "vrtRBMBow"+i;
		vrtRBMBow.scale.set(0.2,hInc,1);
		vrtRBMBow.position.set(params.p_w/8,params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w],-i.toFixed(2));
		vrtRBMBow.position.y = params.p_h + hIncForBow + vrtBowYposN[params.p_r_p][params.p_w] + hFrR;
		vrtRBMBow.rotation.z = -Math.PI/4;
		
		var rightFrontCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		rightFrontCornner.name = "rightFrontCornner"+i;
		rightFrontCornner.visible = (params.p_r_p <= 6)? true:false;
		rightFrontCornner.scale.set(2.12,0.2,0.5);
		rightFrontCornner.position.x = params.p_w/2 - 0.83 + lftCXPosN[params.p_r_p];
		rightFrontCornner.position.z = i.toFixed(2);
		rightFrontCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
		rightFrontCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;
		
		var rightBackCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		rightBackCornner.name = "rightBackCornner"+i;
		rightBackCornner.visible = (params.p_r_p <= 6)? true:false;
		rightBackCornner.scale.set(2.12,0.2,0.5);
		rightBackCornner.position.x = params.p_w/2 - 0.83 + lftCXPosN[params.p_r_p];
		rightBackCornner.position.z = -i.toFixed(2);
		rightBackCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
		rightBackCornner.position.y = params.p_h - 0.75 + lftCYPos[params.p_r_p] + hFrRcornner;

		var rightFrontBowS = rightFrontBow.clone();
		rightFrontBowS.name = "rightFrontBowS"+i;	
		rightFrontBowS.scale.set(params.p_w/2,0.2,1);	
		rightFrontBowS.position.set(params.p_w/4-0.08,params.p_h - 0.7 + hInc + 0.03,i.toFixed(2));	
		rightFrontBowS.rotation.z = -bowsRotation[params.p_r_p];
		rightFrontBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];
	
		var rightBackBowS = rightBackBow.clone();
		rightBackBowS.name = "rightBackBowS"+i;	
		rightBackBowS.scale.set(params.p_w/2,0.2,1);	
		rightBackBowS.position.set(params.p_w/4-0.08,params.p_h - 0.7 + hInc + 0.03,-i.toFixed(2));	
		rightBackBowS.rotation.z = -bowsRotation[params.p_r_p];
		rightBackBowS.scale.x = params.p_w/2 + bowsScale[params.p_r_p][params.p_w];	


		//f_S_Lean Right Front Corrner
		var f_S_LeanRightFrontCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		f_S_LeanRightFrontCornner.name = "f_S_LeanRightFrontCornner";
		f_S_LeanRightFrontCornner.scale.set(2.16,0.2,0.5);
		f_S_LeanRightFrontCornner.position.x =  params.p_w/2 - 0.95+ lftCXPosN[params.p_r_p];
		f_S_LeanRightFrontCornner.position.y = params.p_h + f_S_LeanRightCorner[params.p_r_p][params.p_w];
		f_S_LeanRightFrontCornner.position.z = i.toFixed(2);
		f_S_LeanRightFrontCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
		f_S_LeanRightFrontCornner.visible = (params.singleSlope == true)? true:false;
		
		// //f_S_Lean Right Back Corrner
		var f_S_LeanRightBackCornner = new THREE.Mesh(bowGeometry,bowMaterial);
		f_S_LeanRightBackCornner.name = "f_S_LeanRightBackCornner";
		f_S_LeanRightBackCornner.scale.set(2.16,0.2,0.5);
		f_S_LeanRightBackCornner.position.x = params.p_w/2 - 0.95 + lftCXPosN[params.p_r_p];
		f_S_LeanRightBackCornner.position.y = params.p_h +f_S_LeanRightCorner[params.p_r_p][params.p_w];
		f_S_LeanRightBackCornner.position.z = -i.toFixed(2);
		f_S_LeanRightBackCornner.rotation.z = -(0.7 + bowsRotation[params.p_r_p]);
		f_S_LeanRightBackCornner.visible = (params.singleSlope == true)? true:false;
		if(i!=0){
			const_var.F_S_L_R.add(f_S_LeanRightFrontCornner);
			const_var.F_S_L_R.add(f_S_LeanRightBackCornner);
		}else{
			const_var.F_S_L_R.add(f_S_LeanRightFrontCornner);
		}

		if(i!=0)
		{
			
			const_var.b_t_M_R.add(rightFrontBow);
			const_var.b_t_M_R.add(rightFrontRegularBow);
			const_var.b_t_M_R.add(rightFrontBow1);
			const_var.b_t_M_R.add(rightFrontBow2);
			const_var.b_t_M_R.add(rightFrontBow3);

			const_var.b_t_M_R.add(rightBackBow);
			const_var.b_t_M_R.add(rightBackRegularBow);
			const_var.b_t_M_R.add(rightBackBow1);
			const_var.b_t_M_R.add(rightBackBow2);
			const_var.b_t_M_R.add(rightBackBow3);

			const_var.b_t_M_R.add(rightFrontCornner);
			const_var.b_t_M_R.add(rightBackCornner);

			// const_var.scene.add(f_S_LeanRightFrontCornner);
			// const_var.scene.add(f_S_LeanRightBackCornner);
			if(params.p_w >= 26 && params.p_w <= 30)
			{
				const_var.b_t_M_R.add(vrtRFMBow);
				const_var.b_t_M_R.add(vrtRBMBow);
			}
			//const_var.b_t_M_R.add(rightFrontBowS);
			//const_var.b_t_M_R.add(rightBackBowS);
		}
		else
		{
			const_var.b_t_M_R.add(rightFrontBow);
			const_var.b_t_M_R.add(rightFrontRegularBow);
			const_var.b_t_M_R.add(rightFrontBow1);
			const_var.b_t_M_R.add(rightFrontBow2);
			const_var.b_t_M_R.add(rightFrontBow3);

			const_var.b_t_M_R.add((params.p_w >= 26 && params.p_w <= 30)?(vrtRFMBow):'');
			const_var.b_t_M_R.add(rightFrontCornner);
			// const_var.scene.add(f_S_LeanRightFrontCornner);

			//const_var.b_t_M_R.add(rightFrontBowS);
			// rightFrontBowS.position.set(params.p_w/4-0.08,params.p_h - 0.7 + hInc + 0.03,0);	
		}


	}


	//Center Building Roof  
	var selectedObject = const_var.scene.getObjectByName("lrRoof");
	if(selectedObject != undefined) {
		var roofImg = verticalTexture;
		if(params.p_r_s=="3") {
			roofImg = verticalTexture;
		} else {
			roofImg = horizontalTexture;
		}
		var lrRoofloader = new THREE.TextureLoader();
		var texture1 = lrRoofloader.load(roofImg, function(texture1) {
		   texture1.anisotropy = Math.min(const_var.renderer.capabilities.getMaxAnisotropy(), 16);
		   texture1.wrapS = THREE.RepeatWrapping; 
		   texture1.wrapT = THREE.RepeatWrapping;
		   var rCalor = params.p_r_c.replace("#","0x");   
		const_var.scene.getObjectByName("lrRoof").scale.set(params.p_w+0.5,roofMiddleHeight[params.p_r_p][params.p_w]+0.064,params.p_d+0.5);
		const_var.scene.getObjectByName("lrRoof").position.set(0,(params.p_r_p=="2")?params.p_h-0.025:params.p_h-0.04,0);
		const_var.scene.getObjectByName("lrRoof").material.map = texture1;
		const_var.scene.getObjectByName("lrRoof").material.envMap = texture1;
		const_var.scene.getObjectByName("lrRoof").material.emissiveMap = texture1;
		const_var.scene.getObjectByName("lrRoof").material.emissiveIntensity = 1;

		if(params.p_r_s=="3"){
			const_var.scene.getObjectByName("lrRoof").material.map.rotation = Math.PI/2;
			const_var.scene.getObjectByName("lrRoof").material.map.repeat.set(params.p_d-2,1);
		} else {
			const_var.scene.getObjectByName("lrRoof").material.map.rotation = -Math.PI/2;
			const_var.scene.getObjectByName("lrRoof").material.map.repeat.set(1,params.p_w/8);
		}
		const_var.scene.getObjectByName("lrRoof").material.color.setHex( rCalor );
	   });
	   const_var.scene.getObjectByName("lrRoof").visible = (params.p_r_s=="1" || params.singleSlope)?false:true;
    }

	/* Free Standing LeanTo Roof */
	var selectedObject = const_var.scene.getObjectByName("f_S_LeanRoof");
	if(selectedObject != undefined)
	{
		var roofImg = verticalTexture;
		if(params.p_r_s=="3"){
			roofImg = verticalTexture;
		} else{
			roofImg = horizontalTexture;
		}
		var f_S_LeanRoofloader = new THREE.TextureLoader();
		var texture1 = f_S_LeanRoofloader.load(roofImg, function(texture1) {
		   texture1.wrapS = THREE.RepeatWrapping;
		   texture1.wrapT = THREE.RepeatWrapping;
		})
		var rCalor = params.p_r_c.replace("#","0x");   
		// const_var.scene.getObjectByName("f_S_LeanRoof").scale.set((params.p_r_s == "1")?(2*params.lean_p_w)-0.2:2*params.lean_p_w, roofMiddleHeight[params.b_l_t_r_p][2*params.lean_p_w], params.lean_p_d);
		const_var.scene.getObjectByName("f_S_LeanRoof").scale.set((2*params.p_w)+2,roofMiddleHeight[params.p_r_p][params.p_w],params.p_d+1);
		const_var.scene.getObjectByName("f_S_LeanRoof").position.set((params.p_w/2)+0.4,(params.p_h + f_S_LeanRoofHeight[params.p_r_p][params.p_w]) ,0);
		const_var.scene.getObjectByName("f_S_LeanRoof").material.map = texture1;	
		const_var.scene.getObjectByName("f_S_LeanRoof").visible = params.singleSlope;
		const_var.scene.getObjectByName("f_S_LeanRoof").rotation.z = f_S_LeanRoofRotaion[params.p_r_p][params.p_w];
		if(params.p_r_s == "1"){
			const_var.scene.getObjectByName("f_S_LeanRoof").rotation.z = -0.0015;//anand
			}
		var f_S_LeanRoof = const_var.scene.getObjectByName("f_S_LeanRoof");
		if(params.p_r_s=="3")
		{
			f_S_LeanRoof.material.map.rotation = Math.PI/2;
			f_S_LeanRoof.material.map.repeat.set(params.p_d-2,1);
		}
		else
		{
			f_S_LeanRoof.material.map.rotation = -Math.PI/2;
			f_S_LeanRoof.material.map.repeat.set(1,params.p_w/8);
		}
		const_var.scene.getObjectByName("f_S_LeanRoof").material.color.setHex( rCalor );
	//    });
	}

   //Center Building Regular Roof  
   var selectedObject = const_var.scene.getObjectByName("centerRegularRoof");
	if(selectedObject != undefined)
	{
		var roofImg = verticalTexture;
		if(params.p_r_s=="1")
		{
			roofImg = verticalTexture;
		}
		else
		{
			roofImg = horizontalTexture;
		}
		var lrRoofloader = new THREE.TextureLoader();
		var texture1 = lrRoofloader.load(roofImg, function(texture1) {
		   texture1.anisotropy = Math.min(const_var.renderer.capabilities.getMaxAnisotropy(), 16);
		   texture1.wrapS = THREE.RepeatWrapping;
		   texture1.wrapT = THREE.RepeatWrapping;
		   var rCalor = params.p_r_c.replace("#","0x");   
		//const_var.scene.getObjectByName("centerRegularRoof").scale.set(params.p_w + Number(params.p_r_p)/100,roofMiddleHeight[params.p_r_p][params.p_w],params.p_d);
		const_var.scene.getObjectByName("centerRegularRoof").scale.set(params.p_w - 0.5,roofMiddleHeight[params.p_r_p][params.p_w],params.p_d+0.5);
		const_var.scene.getObjectByName("centerRegularRoof").position.set(0,params.p_h + 0.5,0);
		const_var.scene.getObjectByName("centerRegularRoof").material.map = texture1;
		if(params.p_r_s=="1")
		{
			const_var.scene.getObjectByName("centerRegularRoof").material.map.rotation = -Math.PI/2;
			//const_var.scene.getObjectByName("centerRegularRoof").material.map.repeat.set(params.p_w-2,1);
			const_var.scene.getObjectByName("centerRegularRoof").material.map.repeat.set(params.p_w/2,1);
		}
		else
		{
			const_var.scene.getObjectByName("centerRegularRoof").material.map.rotation = Math.PI/2;
			const_var.scene.getObjectByName("centerRegularRoof").material.map.repeat.set(1,params.p_w/8);
		}
		const_var.scene.getObjectByName("centerRegularRoof").material.color.setHex( rCalor );
	   });
	   const_var.scene.getObjectByName("centerRegularRoof").visible = (params.p_r_s=="1")?true:false;
    }
    var selectedObject = const_var.scene.getObjectByName("centerRegularRoofL");
	if(selectedObject != undefined)
	{
		const_var.scene.remove(const_var.scene.getObjectByName("centerRegularRoofL"));
	}
    var verticesT = [
    { pos: [ -params.p_w/2 + 0.25,  0.0,    0.5], norm: [ -1,  0,  0], uv: [0, 0], }, // 4 uv: [0, 0],
    { pos: [ -params.p_w/2 + 0.25,  0.0,   -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, // 5 uv: [1, 0],
    { pos: [ -params.p_w/2 + 0.13, -0.005,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.13, -0.005, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7
    
    { pos: [ -params.p_w/2 + 0.13, -0.005,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.13, -0.005, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 1], 7
    { pos: [ -params.p_w/2 + 0.07, -0.015,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.07, -0.015, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7
    
    { pos: [ -params.p_w/2 + 0.07, -0.015,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.07, -0.015, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 1], 7
    { pos: [ -params.p_w/2 + 0.05, -0.025,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.05, -0.025, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7
    
    { pos: [ -params.p_w/2 + 0.05, -0.025,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.05, -0.025, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 1], 7
    { pos: [ -params.p_w/2 + 0.02, -0.045,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ -params.p_w/2 + 0.02, -0.045, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7

    { pos: [ -params.p_w/2 + 0.00, -0.075,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 0], 4
    { pos: [ -params.p_w/2 + 0.00, -0.075, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 0], 5
    { pos: [ -params.p_w/2 + 0.02, -0.045,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, // 6 uv: [0, 1],
    { pos: [ -params.p_w/2 + 0.02, -0.045, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, // 7 uv: [1, 1],
    
  ];
  var positionsT = [];
  var normalsT = [];
  var uvsT = [];
  for (var vertex of verticesT) {
    positionsT.push(...vertex.pos);
    normalsT.push(...vertex.norm);
    uvsT.push(...vertex.uv);
  }

  var geometryT = new THREE.BufferGeometry();
  var positionNumComponents = 3;
  var normalNumComponents = 3;
  var uvNumComponents = 2;
    geometryT.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positionsT), positionNumComponents));
    geometryT.setAttribute('normal', new THREE.BufferAttribute(new Float32Array(normalsT), normalNumComponents));
    geometryT.setAttribute('uv', new THREE.BufferAttribute(new Float32Array(uvsT), uvNumComponents));
	geometryT.setIndex([
	//0, 1, 2, 2, 1, 3, 3, 2, 4, 4, 3, 5, 5, 4, 6, 6, 5, 7
     0,  1,  2,   2,  1,  3,
     4,  5,  6,   6,  5,  7,
     8,  9, 10,  10,  9, 11,
    12, 13, 14,  14, 13, 15,
    16, 17, 18,  18, 17, 19,
  ]);
  var roofImg = verticalTexture;
		if(params.p_r_s=="1")
		{
			roofImg = verticalTexture;
		}
		else
		{
			roofImg = horizontalTexture;
		}
		
	var lrRoofloader = new THREE.TextureLoader();
	var textureT = lrRoofloader.load(roofImg, function(texture1) {
		   texture1.wrapS = THREE.RepeatWrapping;
		   texture1.wrapT = THREE.RepeatWrapping;
	   });	
  var materialT = new THREE.MeshBasicMaterial({
	   map: textureT,
       wireframe:false,
       side:THREE.DoubleSide,
       color:0xFFFF00
       });
	/*var materialT = new THREE.MeshPhongMaterial({
        map: textureT,
        color: 0xFFFF00,
        specular: 0xFFFF00,
        side: THREE.DoubleSide
    });*/
	var cubeTL = new THREE.Mesh(geometryT, materialT);
	cubeTL.name = "centerRegularRoofL";
	cubeTL.visible = true;
	cubeTL.scale.set(1,roofMiddleHeight[params.p_r_p][params.p_w],params.p_d+0.5);
	cubeTL.position.set(0,params.p_h + 0.5,0);
	cubeTL.scale.y = 7;
		if(params.p_r_s=="1")
		{
			cubeTL.material.map.rotation = -Math.PI/2;
			cubeTL.material.map.repeat.set(params.p_w-2,1);
		}
		else
		{
			cubeTL.material.map.rotation = Math.PI/2;
			cubeTL.material.map.repeat.set(1,params.p_w/8);
		}
		var rCalor = params.p_r_c.replace("#","0x");
		cubeTL.material.color.setHex( rCalor );
		cubeTL.visible = (params.p_r_s=="1")?true:false;
	const_var.scene.add(cubeTL);



	var selectedObject = const_var.scene.getObjectByName("centerRegularRoofR");
	if(selectedObject != undefined)
	{
		const_var.scene.remove(const_var.scene.getObjectByName("centerRegularRoofR"));
	}
    var verticesT = [
    { pos: [ params.p_w/2 - 0.25,  0.0,    0.5], norm: [ -1,  0,  0], uv: [0, 0], }, // 4 uv: [0, 0],
    { pos: [ params.p_w/2 - 0.25,  0.0,   -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, // 5 uv: [1, 0],
    { pos: [ params.p_w/2 - 0.13, -0.005,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.13, -0.005, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7
    
    { pos: [ params.p_w/2 - 0.13, -0.005,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.13, -0.005, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 1], 7
    { pos: [ params.p_w/2 - 0.07, -0.015,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.07, -0.015, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7
    
    { pos: [ params.p_w/2 - 0.07, -0.015,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.07, -0.015, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 1], 7
    { pos: [ params.p_w/2 - 0.05, -0.025,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.05, -0.025, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7
    
    { pos: [ params.p_w/2 - 0.05, -0.025,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.05, -0.025, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 1], 7
    { pos: [ params.p_w/2 - 0.02, -0.045,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, //uv: [0, 1], 6
    { pos: [ params.p_w/2 - 0.02, -0.045, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, //uv: [1, 1], 7

    { pos: [ params.p_w/2 - 0.00, -0.075,  0.5], norm: [ -1,  0,  0], uv: [0, 0], }, //uv: [0, 0], 4
    { pos: [ params.p_w/2 - 0.00, -0.075, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0], }, //uv: [1, 0], 5
    { pos: [ params.p_w/2 - 0.02, -0.045,  0.5], norm: [ -1,  0,  0], uv: [0, 0.008], }, // 6 uv: [0, 1],
    { pos: [ params.p_w/2 - 0.02, -0.045, -0.5], norm: [ -1,  0,  0], uv: [0.008, 0.008], }, // 7 uv: [1, 1],
    
  ];
  var positionsT = [];
  var normalsT = [];
  var uvsT = [];
  for (var vertex of verticesT) {
    positionsT.push(...vertex.pos);
    normalsT.push(...vertex.norm);
    uvsT.push(...vertex.uv);
  }

  var geometryT = new THREE.BufferGeometry();
  var positionNumComponents = 3;
  var normalNumComponents = 3;
  var uvNumComponents = 2;
    geometryT.setAttribute('position', new THREE.BufferAttribute(new Float32Array(positionsT), positionNumComponents));
    geometryT.setAttribute('normal', new THREE.BufferAttribute(new Float32Array(normalsT), normalNumComponents));
    geometryT.setAttribute('uv', new THREE.BufferAttribute(new Float32Array(uvsT), uvNumComponents));
	geometryT.setIndex([
	//0, 1, 2, 2, 1, 3, 3, 2, 4, 4, 3, 5, 5, 4, 6, 6, 5, 7
     0,  1,  2,   2,  1,  3,
     4,  5,  6,   6,  5,  7,
     8,  9, 10,  10,  9, 11,
    12, 13, 14,  14, 13, 15,
    16, 17, 18,  18, 17, 19,
  ]);
	var roofImg = verticalTexture;
	if(params.p_r_s=="1")
	{
		roofImg = verticalTexture;
	}
	else
	{
		roofImg = horizontalTexture;
	}
	
	var lrRoofloader = new THREE.TextureLoader();
	var textureT = lrRoofloader.load(roofImg, function(texture1) {
		   texture1.wrapS = THREE.RepeatWrapping;
		   texture1.wrapT = THREE.RepeatWrapping;
	   });	
		var materialT = new THREE.MeshBasicMaterial({
		   map: textureT,
		   wireframe:false,
		   side:THREE.DoubleSide,
		   color:0xFFFF00
		});

	var cubeTR = new THREE.Mesh(geometryT, materialT);
	cubeTR.name = "centerRegularRoofR";
	cubeTR.visible = true;
	cubeTR.scale.set(1,roofMiddleHeight[params.p_r_p][params.p_w],params.p_d+0.5);
	cubeTR.position.set(0,params.p_h + 0.5,0);
	cubeTR.scale.y = 7;
		if(params.p_r_s=="1")
		{
			cubeTR.material.map.rotation = -Math.PI/2;
			cubeTR.material.map.repeat.set(params.p_w-2,1);
		}
		else
		{
			cubeTR.material.map.rotation = Math.PI/2;
			cubeTR.material.map.repeat.set(1,params.p_w/8);
		}
		var rCalor = params.p_r_c.replace("#","0x");
		cubeTR.material.color.setHex( rCalor );
		cubeTR.visible = (params.p_r_s=="1")?true:false;
	    const_var.scene.add(cubeTR);

			
	// var selectedObject = const_var.b_t_M_L_t_L.getObjectByName("leanToRegularRoofL");
	// if(selectedObject != undefined)
	// {
	// 	const_var.b_t_M_L_t_L.remove(const_var.b_t_M_L_t_L.getObjectByName("leanToRegularRoofL"));
	// }
	// var cubeTLL = new THREE.Mesh(geometryT, materialT);
	// cubeTLL.name = "leanToRegularRoofL";
	// cubeTLL.scale.set(0.99855,roofMiddleHeight[params.b_l_t_r_p][params.lean_p_w],params.lean_p_d);
	// ////cubeTLL.position.set(-params.lean_p_w - 0.040,params.lean_p_h + 0.31,0);

	// if(const_var.defaultBuildingImgName=="Triple_Wide_Garages" || const_var.defaultBuildingImgName=="Triple_Wide_Carports"){
	// 	cubeTLL.position.set(-params.lean_p_w - 0.093,params.lean_p_h + 0.71,0);
	// }else{
	// cubeTLL.position.set(-params.lean_p_w - 0.08,params.lean_p_h + 0.482,0);
	// }
	// cubeTLL.scale.y = 7;
	// cubeTLL.rotation.z = 0.045;
	// 	if(params.p_r_s=="1")
	// 	{
	// 		cubeTLL.material.map.rotation = -Math.PI/2;
	// 		cubeTLL.material.map.repeat.set(24,1);
	// 	}
	// 	else
	// 	{
	// 		cubeTLL.material.map.rotation = Math.PI/2;
	// 		cubeTLL.material.map.repeat.set(1,params.p_w/8);
	// 	}
	// 	var rCalor = params.p_r_c.replace("#","0x");
	// 	cubeTLL.material.color.setHex( rCalor );
	// 	cubeTLL.visible = (params.add_left_lean && params.p_r_s=="1")?true:false;
	// const_var.b_t_M_L_t_L.add(cubeTLL);


	// var selectedObject = const_var.b_t_M_R_t_R.getObjectByName("leanToRegularRoofR");
	// if(selectedObject != undefined)
	// {
	// 	const_var.b_t_M_R_t_R.remove(const_var.b_t_M_R_t_R.getObjectByName("leanToRegularRoofR"));
	// }
	// var cubeTRR = new THREE.Mesh(geometryT, materialT);
	// cubeTRR.name = "leanToRegularRoofR";
	// cubeTRR.scale.set(1,roofMiddleHeight[params.b_l_t_r_pR][params.leanR_p_w],params.leanR_p_d);
    // //cubeTRR.position.set(params.leanR_p_w + 0.040,params.leanR_p_h + 0.31,0);

	// if(const_var.defaultBuildingImgName=="Triple_Wide_Garages" || const_var.defaultBuildingImgName=="Triple_Wide_Carports"){
	// 	cubeTRR.position.set(params.leanR_p_w + 0.071,params.leanR_p_h + 0.71,0);
	// }else{
    // cubeTRR.position.set(params.leanR_p_w + 0.066,params.leanR_p_h + 0.482,0);
	// }
	
	// cubeTRR.scale.y = 7;
	// cubeTRR.rotation.z = -0.045;
	
	// if(params.p_r_s=="1")
	// {
	// 	cubeTRR.material.map.rotation = -Math.PI/2;
	// 	cubeTRR.material.map.repeat.set(24,1);
	// }
	// else
	// {
	// 	cubeTRR.material.map.rotation = Math.PI/2;
	// 	cubeTRR.material.map.repeat.set(1,params.p_w/8);
	// }
	// var rCalor = params.p_r_c.replace("#","0x");
	// cubeTRR.material.color.setHex( rCalor );
	// cubeTRR.visible = (params.add_right_lean && params.p_r_s=="1")?true:false;
	// const_var.b_t_M_R_t_R.add(cubeTRR);
 
  
   
	 /* Front Lean To Roof */
	//  var selectedObject = const_var.b_t_M_F_t_F.getObjectByName("fRoof");
	//  if(selectedObject != undefined)
	//  {
	// 	//  var leanToRoofPos = params.p_d/-2;// - params.lean_p_w/2;
	// 	 var roofImg = verticalTexture;
	// 	 if(params.p_r_s=="3")
	// 	 {
	// 		 roofImg = verticalTexture;
	// 	 }
	// 	 else
	// 	 {
	// 		 roofImg = horizontalTexture;
	// 	 }
	// 	 var fRoofloader = new THREE.TextureLoader();
	// 	 var texture1 = fRoofloader.load(roofImg, function(texture1) {
	// 		texture1.wrapS = THREE.RepeatWrapping;
	// 		texture1.wrapT = THREE.RepeatWrapping;
	// 	 });
	// 	 var rCalor = params.p_r_c.replace("#","0x");   
	// 	 // const_var.b_t_M_F_t_F.getObjectByName("fRoof").scale.set((params.p_r_s == "1")?(2*params.lean_p_w)-0.2:2*params.lean_p_w, roofMiddleHeight[params.b_l_t_r_p][2*params.lean_p_w], params.lean_p_d);
	// 	 const_var.b_t_M_F_t_F.getObjectByName("fRoof").scale.set((params.p_r_s == "1") ? 2*params.leanF_p_w -0.17: 2*params.leanF_p_w, roofMiddleHeight[params.b_l_t_r_pF][2*params.leanF_p_w], params.leanF_p_d);
	// 	 const_var.b_t_M_F_t_F.getObjectByName("fRoof").position.set(0,params.leanF_p_h,params.leanF_p_d/2);
	// 	 const_var.b_t_M_F_t_F.getObjectByName("fRoof").position.set(params.p_d/-2,params.leanF_p_h,0);
	// 	//  const_var.b_t_M_F_t_F.getObjectByName("fRoof").rotation.y = Math.PI/2;
	// 	 const_var.b_t_M_F_t_F.getObjectByName("fRoof").material.map = texture1;	
	// 	 const_var.b_t_M_F_t_F.getObjectByName("fRoof").visible = params.add_front_lean;//(params.p_r_s == "1")?false:params.add_left_lean;
	// 	 if(params.p_r_s == "1"){
	// 		 const_var.b_t_M_F_t_F.getObjectByName("fRoof").rotation.z = -0.0015;//anand
	// 		 }
	// 	 var fRoof = const_var.b_t_M_F_t_F.getObjectByName("fRoof");
	// 	 if(params.p_r_s=="3")
	// 	 {
	// 		 fRoof.material.map.rotation = Math.PI/2;
	// 		 //lrRoof.material.map.repeat.set(params.p_w-2,1);
	// 		 ////lrRoof.material.map.repeat.set(params.p_d,1);
	// 		 fRoof.material.map.repeat.set(params.leanF_p_d-2,1);
	// 	 }
	// 	 else
	// 	 {
	// 		 fRoof.material.map.rotation = -Math.PI/2;
	// 		 fRoof.material.map.repeat.set(1,2*params.leanF_p_w/8);
	// 	 }
	// 	 const_var.b_t_M_F_t_F.getObjectByName("fRoof").material.color.setHex( rCalor );
	// 	// });
	//  }
    
    // /* Left Lean To Roof */
    // var selectedObject = const_var.b_t_M_L_t_L.getObjectByName("lRoof");
	// if(selectedObject != undefined)
	// {
	// 	var leanToRoofPos = params.p_w/-2;// - params.lean_p_w/2;
	// 	var roofImg = verticalTexture;
	// 	if(params.p_r_s=="3")
	// 	{
	// 		roofImg = verticalTexture;
	// 	}
	// 	else
	// 	{
	// 		roofImg = horizontalTexture;
	// 	}
	// 	var lRoofloader = new THREE.TextureLoader();
	// 	var texture1 = lRoofloader.load(roofImg, function(texture1) {
	// 	   texture1.wrapS = THREE.RepeatWrapping;
	// 	   texture1.wrapT = THREE.RepeatWrapping;
	// 	})
	// 	var rCalor = params.p_r_c.replace("#","0x");   
	// 	// const_var.scene.getObjectByName("lRoof").scale.set((params.p_r_s == "1")?(2*params.lean_p_w)-0.2:2*params.lean_p_w, roofMiddleHeight[params.b_l_t_r_p][2*params.lean_p_w], params.lean_p_d);
	// 	const_var.scene.getObjectByName("lRoof").scale.set((params.p_r_s == "1") ? 2*params.lean_p_w -0.17: 2*params.lean_p_w, roofMiddleHeight[params.b_l_t_r_p][2*params.lean_p_w], params.lean_p_d);
	// 	const_var.scene.getObjectByName("lRoof").position.set(leanToRoofPos,params.lean_p_h,0);
	// 	const_var.scene.getObjectByName("lRoof").material.map = texture1;	
	// 	const_var.scene.getObjectByName("lRoof").visible = params.add_left_lean;//(params.p_r_s == "1")?false:params.add_left_lean;

	// 	if(params.p_r_s == "1"){
	// 		const_var.scene.getObjectByName("lRoof").rotation.z = -0.0015;//anand
	// 		}
	// 	var lRoof = const_var.scene.getObjectByName("lRoof");
	// 	if(params.p_r_s=="3")
	// 	{
	// 		lRoof.material.map.rotation = Math.PI/2;
	// 		//lrRoof.material.map.repeat.set(params.p_w-2,1);
	// 		////lrRoof.material.map.repeat.set(params.p_d,1);
	// 		lRoof.material.map.repeat.set(params.lean_p_d-2,1);
	// 	}
	// 	else
	// 	{
	// 		lRoof.material.map.rotation = -Math.PI/2;
	// 		lRoof.material.map.repeat.set(1,2*params.lean_p_w/8);
	// 	}
	// 	const_var.b_t_M_L_t_L.getObjectByName("lRoof").material.color.setHex( rCalor );
	// //    });
    // }
	/* Right Lean To Roof */
	// var selectedObject = const_var.b_t_M_R_t_R.getObjectByName("rRoof");
	// if(selectedObject != undefined)
	// {
	// 	var leanToRoofPosR = params.p_w/2;// - params.lean_p_w/2;
	// 	var roofImg = verticalTexture;
	// 	if(params.p_r_s=="3")
	// 	{
	// 		roofImg = verticalTexture;
	// 	}
	// 	else
	// 	{
	// 		roofImg = horizontalTexture;
	// 	}
	// 	var rRoofloader = new THREE.TextureLoader();
	// 	var rtexture = rRoofloader.load(roofImg)
	// 	// , function(rtexture) {
	// 		rtexture.wrapS = THREE.RepeatWrapping;
	// 		rtexture.wrapT = THREE.RepeatWrapping;
	// 		if(params.p_r_s=="3")
	// 		{
	// 		 rtexture.rotation = Math.PI/2;
	// 		 rtexture.repeat.set(params.leanR_p_d,1);
	// 		}
	// 		else
	// 		{
	// 		 rtexture.rotation = -Math.PI/2;
	// 		 rtexture.repeat.set(1,params.lean_p_w/2 - 4);
	// 		}
	// 	// })
	
	// 	var rCalor = params.p_r_c.replace("#","0x");   
	// 	const_var.b_t_M_R_t_R.getObjectByName("rRoof").scale.set((params.p_r_s == "1")?(2*params.leanR_p_w) - 0.17:2*params.leanR_p_w,roofMiddleHeight[params.b_l_t_r_pR][2*params.leanR_p_w],params.leanR_p_d);
	// 	const_var.b_t_M_R_t_R.getObjectByName("rRoof").position.set(leanToRoofPosR,params.leanR_p_h,0);
	// 	const_var.b_t_M_R_t_R.getObjectByName("rRoof").material.map = rtexture;	
	// 	const_var.b_t_M_R_t_R.getObjectByName("rRoof").visible = params.add_right_lean;//(params.p_r_s == "1")?false:params.add_right_lean;
		
	

	// 	if(params.p_r_s == "1"){
	// 		const_var.b_t_M_R_t_R.getObjectByName("rRoof").rotation.z = 0.0015;//anand
	// 		}
	// 	var rRoof = const_var.b_t_M_R_t_R.getObjectByName("rRoof");
	
	// 	if(params.p_r_s=="3")
	// 	{
	// 		rRoof.material.map.rotation = Math.PI/2;
	// 		rRoof.material.map.repeat.set(params.leanR_p_d-2,1);
	// 	}
	// 	else
	// 	{
	// 		rRoof.material.map.rotation = -Math.PI/2;
	// 		rRoof.material.map.repeat.set(1,2*params.leanR_p_w/8);
	// 	}
	// 	const_var.b_t_M_R_t_R.getObjectByName("rRoof").material.color.setHex( rCalor );
	// //    });
    // }
	/* Back Lean To Roof */
	// var selectedObject = const_var.b_t_M_B_t_B.getObjectByName("bRoof");
	// if(selectedObject != undefined)
	// {
	// 	// var leanToRoofPosR = params.p_w/2;// - params.lean_p_w/2;
	// 	var roofImg = verticalTexture;
	// 	if(params.p_r_s=="3")
	// 	{
	// 		roofImg = verticalTexture;
	// 	}
	// 	else
	// 	{
	// 		roofImg = horizontalTexture;
	// 	}
	// 	var bRoofloader = new THREE.TextureLoader();
	// 	var texture1 = bRoofloader.load(roofImg, function(texture1) {
	// 	   texture1.wrapS = THREE.RepeatWrapping;
	// 	   texture1.wrapT = THREE.RepeatWrapping;
	// 	})
	// 	var rCalor = params.p_r_c.replace("#","0x");   
	// 	const_var.b_t_M_B_t_B.getObjectByName("bRoof").scale.set((params.p_r_s == "1")?(2*params.leanB_p_w) - 0.17:2*params.leanB_p_w,roofMiddleHeight[params.b_l_t_r_pB][2*params.leanB_p_w],params.leanB_p_d);
	// 	// const_var.b_t_M_B_t_B.getObjectByName("bRoof").position.set(0,params.leanB_p_h,params.p_d/-2);
	// 	const_var.b_t_M_B_t_B.getObjectByName("bRoof").position.set(params.p_d/-2,params.leanB_p_h,0);
	// 	const_var.b_t_M_B_t_B.getObjectByName("bRoof").rotation.y = Math.PI;
	// 	const_var.b_t_M_B_t_B.getObjectByName("bRoof").material.map = texture1;	
	// 	const_var.b_t_M_B_t_B.getObjectByName("bRoof").visible = params.add_back_lean;//(params.p_r_s == "1")?false:params.add_right_lean;
	
	// 	if(params.p_r_s == "1"){
	// 		const_var.b_t_M_B_t_B.getObjectByName("bRoof").position.set(params.p_d/-2,params.leanB_p_h+0.05,0);

	// 		const_var.b_t_M_B_t_B.getObjectByName("bRoof").rotation.z = -0.0015;//anand
	// 		}
	// 	var bRoof = const_var.b_t_M_B_t_B.getObjectByName("bRoof");
	// 	if(params.p_r_s=="3")
	// 	{
	// 		bRoof.material.map.rotation = Math.PI/2;
	// 		bRoof.material.map.repeat.set(params.leanF_p_d-2,1);
	// 	}
	// 	else
	// 	{
	// 		bRoof.material.map.rotation = -Math.PI/2;
	// 		bRoof.material.map.repeat.set(1,2*params.leanF_p_w/8);
	// 	}
	// 	const_var.b_t_M_B_t_B.getObjectByName("bRoof").material.color.setHex( rCalor );
	// //    });
	// }
	
       //addWainScote();
       
    //Function For Color Building Elements   
    // CC();

	  //rotation and position of Bow1 acording to roof pitch
	//   var rotBow1 = {"3":0.5 , "2":0.415, "4":0.6, "5":0.65};
	//   var posBow1 = {"3":0.05, "2":0.055,"4":0.044,"5":0.04};

	//   //scale and position of Bow2 acording to roof pitch
	//   var scaleBow2 = {"2":0.23, "3":0.23, "4":0.22, "5":0.22};
	//   var posBow2 = {
	// 	"2":{"12": 11.896,"13": 12.896, "14":13.896, "15":14.896, "16":15.896, "17":16.896, "18":17.896, "19":18.896, "20":19.896, "21":20.896, "22":21.896, "23":22.896, "24":23.896},
	// 	"3":{"12": 11.896,"13": 12.896, "14":13.896, "15":14.896, "16":15.896, "17":16.896, "18":17.896, "19":18.896, "20":19.896, "21":20.896, "22":21.896, "23":22.896, "24":23.896},
	// 	"4":{"12": 11.899,"13": 12.899, "14":13.899, "15":14.899, "16":15.899, "17":16.899, "18":17.899, "19":18.899, "20":19.899, "21":20.899, "22":21.899, "23":22.899, "24":23.899},
	// 	"5":{"12": 11.899,"13": 12.899, "14":13.899, "15":14.899, "16":15.899, "17":16.899, "18":17.899, "19":18.899, "20":19.899, "21":20.899, "22":21.899, "23":22.899, "24":23.899}
	//   }

    // var widthBowR = {
	// 	"2": {"12": 0.18,"13": 0.21, "14":0.25, "15":0.29, "16":0.33, "17":0.36, "18":0.39, "19":0.42, "20":0.45, "21":0.49, "22":0.52, "23":0.57, "24":0.6},
	// 	"3": {"12": 0.4,"13": 0.45, "14":0.5, "15":0.56, "16":0.61, "17":0.66, "18":0.72, "19":0.77, "20":0.82, "21":0.87, "22":0.92, "23":0.97, "24":1.02},
	// 	"4": {"12": 0.68,"13": 0.75, "14":0.82, "15":0.9, "16":0.98, "17":1.05, "18":1.13, "19":1.2, "20":1.29, "21":1.37, "22":1.45, "23":1.5, "24":1.6},
	// 	"5": {"12": 1.03,"13": 1.15, "14":1.26, "15":1.37, "16":1.49, "17":1.6, "18":1.7, "19":1.8, "20":1.9, "21":2.01, "22":2.12, "23":2.24, "24":1.36}
	// }

    //  var posCorner = {"1":0.76,"2":0.68, "3":0.605, "4":0.51, "5":0.43, "6":0.35}

	//  var scaleTrim2 ={"1":2.2,"2":2.05, "3":1.9, "4":1.9, "5":1.9, "6":1.9}
	//  var rotTrim2 = {
	// 	 "2":{"12":0.415,"13": 0.415, "14":0.415, "15":0.415, "16":0.415, "17":0.415, "18":0.415, "19":0.415, "20":0.415, "21":0.415, "22":0.415, "23":0.415, "24":0.415},
	// 	 "3":{"12":0.5,"13": 0.5, "14":0.5, "15":0.5, "16":0.5, "17":0.5, "18":0.5, "19":0.5, "20":0.5, "21":0.5, "22":0.5, "23":0.5, "24":0.5},
	//      "4":{"12":0.58,"13": 0.58, "14":0.58, "15":0.58, "16":0.58, "17":0.58, "18":0.58, "19":0.58, "20":0.58, "21":0.58, "22":0.58, "23":0.58, "24":0.58},
	// 	 "5":{"12":0.65,"13": 0.65, "14":0.65, "15":0.65, "16":0.65, "17":0.65, "18":0.65, "19":0.65, "20":0.65, "21":0.65, "22":0.65, "23":0.7, "24":0.65},
	// 	}
	//  var posTrim2 = {"2":0.17,"3":0.17 ,  "4":0.174, "5":0.174}
/*
    // Check And Add Front Lean To Bows
	if(params.add_front_lean) {
		var leanToPosF = params.p_d/-2 - params.leanF_p_w/2;
		var leanTohIncF = roofMiddleHeight[params.b_l_t_r_pF][2*params.leanF_p_w]/2 - 0.1;
		var bowMaterial1 = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		
		//Bow for left leanto in front position
		var frontLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
		frontLeanToFrontBow.name = "frontLeanToFrontBow";
		frontLeanToFrontBow.scale.set(params.p_d/2,0.2,1);	
		frontLeanToFrontBow.position.set(leanToPosF+0.08,params.leanF_p_h + leanTohIncF + 0.03,params.leanF_p_d/2 - 0.12);	
		frontLeanToFrontBow.rotation.z = bowsRotation[params.b_l_t_r_pF];
		frontLeanToFrontBow.scale.x = params.leanF_p_w + bowsScale[params.b_l_t_r_pF][2*params.leanF_p_w];
		frontLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_F_t_F.add(frontLeanToFrontBow);
	
		//Bow for left leanto regular in front position
		var frontLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		frontLeanToFrontBowR.name = "frontLeanToFrontBowR";
		frontLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
		frontLeanToFrontBowR.position.set(leanToPosF+0.1,params.leanF_p_h + leanTohIncF + 0.05,params.leanF_p_d/2 - 0.12);	
		frontLeanToFrontBowR.rotation.z = bowsRotation[params.b_l_t_r_pF];
		frontLeanToFrontBowR.scale.x = (params.leanF_p_w +  widthBowR[params.b_l_t_r_pF][params.leanF_p_w]);
		frontLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_F_t_F.add(frontLeanToFrontBowR);
	
		//Trim for left leanto regular in front position
		var frontLeanToFrontTrim = new THREE.Mesh(bowGeometry,bowMaterial1);
		frontLeanToFrontTrim.name = "frontLeanToFrontTrim";
		frontLeanToFrontTrim.scale.set(params.p_w/2,0.3,0.5);	
		frontLeanToFrontTrim.position.set(leanToPosF+0.1,params.leanF_p_h + leanTohIncF + 0.07,params.leanF_p_d/2);	
		frontLeanToFrontTrim.rotation.z = bowsRotation[params.b_l_t_r_pF];
		frontLeanToFrontTrim.scale.x = (params.leanF_p_w +  widthBowR[params.b_l_t_r_pF][params.leanF_p_w]);
		frontLeanToFrontTrim.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_F_t_F.add(frontLeanToFrontTrim);
	
		//Trim for left leanto regular in back position
		var frontLeanToBackTrim = new THREE.Mesh(bowGeometry,bowMaterial1);
		frontLeanToBackTrim.name = "frontLeanToBackTrim";
		frontLeanToBackTrim.scale.set(params.p_w/2,0.3,0.5);	
		frontLeanToBackTrim.position.set(leanToPosF+0.1,params.leanF_p_h + leanTohIncF + 0.07,params.leanF_p_d/-2);	
		frontLeanToBackTrim.rotation.z = bowsRotation[params.b_l_t_r_pF];
		frontLeanToBackTrim.scale.x = (params.leanF_p_w +  widthBowR[params.b_l_t_r_pF][params.leanF_p_w]);
		frontLeanToBackTrim.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_F_t_F.add(frontLeanToBackTrim);
	
		//Trim1 for left leanto regular in front position
		 var leanToFrontTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		 var leanToLeftFrontTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		 var frontLeanToFrontTrim1 = new THREE.Mesh(leanToFrontTrim1Geo,leanToLeftFrontTrim1Material);
		 frontLeanToFrontTrim1.name = "frontLeanToFrontTrim1";
		 frontLeanToFrontTrim1.position.set((params.p_d/-2 - params.leanF_p_w)+posTrim2[params.b_l_t_r_pF],params.leanF_p_h -posBow1[params.b_l_t_r_pF]+0.02,params.leanF_p_d/2);	
		 frontLeanToFrontTrim1.rotation.z = rotTrim2[params.b_l_t_r_pF][params.leanF_p_w];
		 frontLeanToFrontTrim1.scale.set(scaleTrim2[params.b_l_t_r_pF],0.31,0.5);
		 frontLeanToFrontTrim1.visible = (params.p_r_s == "1")?true:false; 
		 const_var.b_t_M_F_t_F.add(frontLeanToFrontTrim1);
	
		 //Trim1 for left leanto regular in back position
		  var frontLeanToBackTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var frontLeanToBackTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		  var frontLeanToBackTrim1 = new THREE.Mesh(frontLeanToBackTrim1Geo,frontLeanToBackTrim1Material);
		  frontLeanToBackTrim1.name = "frontLeanToBackTrim1";
		  frontLeanToBackTrim1.position.set((params.p_d/-2 - params.leanF_p_w)+posTrim2[params.b_l_t_r_pF],params.leanF_p_h -posBow1[params.b_l_t_r_pF]+0.02,params.leanF_p_d/-2);	
		  frontLeanToBackTrim1.rotation.z = rotTrim2[params.b_l_t_r_pF][params.leanF_p_w];
		  frontLeanToBackTrim1.scale.set(scaleTrim2[params.b_l_t_r_pF],0.31,0.5);
		  frontLeanToBackTrim1.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToBackTrim1);
	
		  //Trim2 for left leanto regular in front position
		  var frontLeanToFrontTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var frontLeanToFrontTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		  var frontLeanToFrontTrim2 = new THREE.Mesh(frontLeanToFrontTrim2Geo,frontLeanToFrontTrim2Material);
		  frontLeanToFrontTrim2.name = "frontLeanToFrontTrim2";
		  frontLeanToFrontTrim2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pF][params.leanF_p_w])+0.004,params.leanF_p_h -0.09,params.leanF_p_d/2);	
		  frontLeanToFrontTrim2.rotation.z = 0.91;
		  frontLeanToFrontTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_pF]+0.1,0.5);
		  frontLeanToFrontTrim2.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToFrontTrim2);
	
		  //Trim2 for left leanto regular in back position
		   var frontLeanToBackTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		   var frontLeanToBackTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		   var leanToleftBackTrim2 = new THREE.Mesh(frontLeanToBackTrim2Geo,frontLeanToBackTrim2Material);
		   leanToleftBackTrim2.name = "leanToleftBackTrim2";
		   leanToleftBackTrim2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pF][params.leanF_p_w])+0.004,params.leanF_p_h -0.09,params.leanF_p_d/-2);	
		   leanToleftBackTrim2.rotation.z = 0.91;
		   leanToleftBackTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_pF]+0.1,0.5);
		   leanToleftBackTrim2.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_F_t_F.add(leanToleftBackTrim2);
	
		   //Trim3 for left leanto regular in front position
		   var frontLeanToFrontTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
		   var leanToLeftFrontTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
		   var frontLeanToFrontTrim3 = new THREE.Mesh(frontLeanToFrontTrim3Geo,leanToLeftFrontTrim3Material);
		   frontLeanToFrontTrim3.name = "frontLeanToFrontTrim3";
		   frontLeanToFrontTrim3.position.set((params.p_d/-2 - params.leanF_p_w)+0.064,params.leanF_p_h-0.142,params.leanF_p_d/2);	
		   frontLeanToFrontTrim3.rotation.z = 1.2;
		   frontLeanToFrontTrim3.scale.set(0.34,0.3,0.5);
		   frontLeanToFrontTrim3.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_F_t_F.add(frontLeanToFrontTrim3);
	
		   //Trim3 for left leanto regular in back position
			 var frontLeanToBackTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
			 var frontLeanToBackTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
			 var frontLeanToBackTrim3 = new THREE.Mesh(frontLeanToBackTrim3Geo,frontLeanToBackTrim3Material);
			 frontLeanToBackTrim3.name = "frontLeanToBackTrim3";
			 frontLeanToBackTrim3.position.set((params.p_d/-2 - params.leanF_p_w)+0.064,params.leanF_p_h-0.142,params.leanF_p_d/-2);	
			 frontLeanToBackTrim3.rotation.z = 1.2;
			 frontLeanToBackTrim3.scale.set(0.34,0.3,0.5);
			 frontLeanToBackTrim3.visible = (params.p_r_s == "1")?true:false; 
			 const_var.b_t_M_F_t_F.add(frontLeanToBackTrim3);
	
			 //Bow1 for left leanto regular in front position
		  var leftBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leftBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var frontLeanToFrontBow1 = new THREE.Mesh(leftBowGeo1,leftBowBowMaterial1);
		  frontLeanToFrontBow1.name = "frontLeanToFrontBow1";
		  frontLeanToFrontBow1.position.set((params.p_d/-2 - params.leanF_p_w)+0.17,params.leanF_p_h -posBow1[params.b_l_t_r_pF],params.leanF_p_d/2 - 0.12);	
		  frontLeanToFrontBow1.rotation.z = rotBow1[params.b_l_t_r_pF];
		  frontLeanToFrontBow1.scale.set(1.9,0.21,1);
		  frontLeanToFrontBow1.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToFrontBow1);
	
		  //Bow2 for left leanto regular in front position
		   var leftBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
		   var leftBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		   var frontLeanToFrontBow2 = new THREE.Mesh(leftBowGeo2,leftBowBowMaterial2);
		   frontLeanToFrontBow2.name = "frontLeanToFrontBow2";
		   frontLeanToFrontBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pF][params.leanF_p_w]),params.leanF_p_h -0.11,params.leanF_p_d/2 - 0.12);	
		   frontLeanToFrontBow2.rotation.z = 0.91;
		   frontLeanToFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pF],1);
		   frontLeanToFrontBow2.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_F_t_F.add(frontLeanToFrontBow2);
	
		   //Bow3 for left leanto regular in front position
		  var leftBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
		  var leftBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
		  var frontLeanToFrontBow3 = new THREE.Mesh(leftBowGeo3,leftBowBowMaterial3);
		  frontLeanToFrontBow3.name = "frontLeanToFrontBow3";
		  frontLeanToFrontBow3.position.set((params.p_d/-2 - params.leanF_p_w)+0.065,params.leanF_p_h-0.15,params.leanF_p_d/2 - 0.12);	
		  frontLeanToFrontBow3.rotation.z = 1.13;
		  frontLeanToFrontBow3.scale.set(0.18,0.2,1);
		  frontLeanToFrontBow3.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToFrontBow3);
	
		  //corner for left leanto in front position
		  var leftCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
		  var leftCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var frontLeanToFrontCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		  frontLeanToFrontCorner.name = "frontLeanToFrontCorner";
		  frontLeanToFrontCorner.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],params.leanF_p_d/2 - 0.12);	
		  frontLeanToFrontCorner.rotation.z = 1;
		  frontLeanToFrontCorner.scale.set(1.9,0.25,1);
		  frontLeanToFrontCorner.visible = (params.p_r_s != "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToFrontCorner);
	
		   //corner for left leanto regular in front position
		  var leftCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
		  var leftCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var frontLeanToFrontCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		  frontLeanToFrontCornerR.name = "frontLeanToFrontCornerR";
		  frontLeanToFrontCornerR.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],params.leanF_p_d/2 - 0.12);	
		  frontLeanToFrontCornerR.rotation.z = 1;
		  frontLeanToFrontCornerR.scale.set(1.9,0.25,1);
		  frontLeanToFrontCornerR.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToFrontCornerR);
		
		   //Bow for left leanto in back position
		var frontLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
		frontLeanToBackBow.name = "frontLeanToBackBow";
		frontLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
		frontLeanToBackBow.position.set(leanToPosF+0.08,params.leanF_p_h + leanTohIncF + 0.03,params.leanF_p_d/-2 + 0.12);	
		frontLeanToBackBow.rotation.z = bowsRotation[params.b_l_t_r_pF];
		frontLeanToBackBow.scale.x = params.leanF_p_w + bowsScale[params.b_l_t_r_pF][2*params.leanF_p_w];
		frontLeanToBackBow.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_F_t_F.add(frontLeanToBackBow);
	
		//Bow for left leanto regular in back position
		var frontLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		frontLeanToBackBowR.name = "frontLeanToBackBowR";
		frontLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
		frontLeanToBackBowR.position.set(leanToPosF+0.1,params.leanF_p_h + leanTohIncF + 0.05,params.leanF_p_d/-2 + 0.12);	
		frontLeanToBackBowR.rotation.z = bowsRotation[params.b_l_t_r_pF];
		frontLeanToBackBowR.scale.x = (params.leanF_p_w +  widthBowR[params.b_l_t_r_pF][params.leanF_p_w]);
		frontLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_F_t_F.add(frontLeanToBackBowR);
	
		//corner for left leanto in back position
		 var frontLeanToBackCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		 frontLeanToBackCorner.name = "frontLeanToBackCorner";
		 frontLeanToBackCorner.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],params.leanF_p_d/-2 + 0.12);	
		 frontLeanToBackCorner.rotation.z = 1.;
		 frontLeanToBackCorner.scale.set(1.9,0.25,1);
		 frontLeanToBackCorner.visible = (params.p_r_s != "1")?true:false;
		 const_var.b_t_M_F_t_F.add(frontLeanToBackCorner);
	
		  //corner for left leanto regular in back position
		  var frontLeanToBackCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		  frontLeanToBackCornerR.name = "frontLeanToBackCornerR";
		  frontLeanToBackCornerR.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],params.leanF_p_d/-2 + 0.12);	
		  frontLeanToBackCornerR.rotation.z = 1.;
		  frontLeanToBackCornerR.scale.set(1.9,0.25,1);
		  frontLeanToBackCornerR.visible = (params.p_r_s == "1")?true:false;
		  const_var.b_t_M_F_t_F.add(frontLeanToBackCornerR);
	
		  var lefRimndr = params.p_w % legDistance;
		  var lefDiff = legDistance + lefRimndr / legDistance;
	
	
		   var leftBackBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
		   var leftBackBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		   var frontLeanToBackBow1 = new THREE.Mesh(leftBackBowGeo1,leftBackBowBowMaterial1);
		   frontLeanToBackBow1.name = "frontLeanToBackBow1";
		   frontLeanToBackBow1.position.set((params.p_d/-2 - params.leanF_p_w)+0.17,params.leanF_p_h -posBow1[params.b_l_t_r_pF],params.leanF_p_d/-2 + 0.12);	
		  frontLeanToBackBow1.rotation.z = rotBow1[params.b_l_t_r_pF];
		  frontLeanToBackBow1.scale.set(1.9,0.21,1);
		   frontLeanToBackBow1.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_F_t_F.add(frontLeanToBackBow1)
	
		  var leftBackBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leftBackBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var frontLeanToBackBow2 = new THREE.Mesh(leftBackBowGeo2,leftBackBowBowMaterial2);
		  frontLeanToBackBow2.name = "frontLeanToBackBow2";
		  frontLeanToBackBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pF][params.leanF_p_w]),params.leanF_p_h -0.11,params.leanF_p_d/-2 + 0.12);	
		  frontLeanToBackBow2.rotation.z = 0.91;
		  frontLeanToBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pF],1);
		  frontLeanToBackBow2.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToBackBow2);
	
		  var leftBackBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
		  var leftBackBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
		  var frontLeanToBackBow3 = new THREE.Mesh(leftBackBowGeo3,leftBackBowBowMaterial3);
		  frontLeanToBackBow3.name = "frontLeanToBackBow3";
		  frontLeanToBackBow3.position.set((params.p_d/-2 - params.leanF_p_w)+0.065,params.leanF_p_h-0.15,params.leanF_p_d/-2 + 0.12);	
		  frontLeanToBackBow3.rotation.z = 1.13;
		  frontLeanToBackBow3.scale.set(0.18,0.2,1);
		  frontLeanToBackBow3.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_F_t_F.add(frontLeanToBackBow3);
		
		for(var i = 0;i<(params.leanF_p_d/2 - 2);i = i+legDistance)
		{
			var frontLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
			frontLeanToFrontBow.name = "frontLeanToFrontBow"+i;
			frontLeanToFrontBow.scale.set(params.p_w/2,0.2,1);	
			frontLeanToFrontBow.position.set(leanToPosF+0.08,params.leanF_p_h + leanTohIncF + 0.03,i.toFixed(2));	
			frontLeanToFrontBow.rotation.z = bowsRotation[params.b_l_t_r_pF];
			frontLeanToFrontBow.scale.x = params.leanF_p_w + bowsScale[params.b_l_t_r_pF][2*params.leanF_p_w];
			frontLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;
	
			var frontLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
			frontLeanToFrontBowR.name = "frontLeanToFrontBowR"+i;
			frontLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
			frontLeanToFrontBowR.position.set(leanToPosF+0.1,params.leanF_p_h + leanTohIncF + 0.05,i.toFixed(2));	
			frontLeanToFrontBowR.rotation.z = bowsRotation[params.b_l_t_r_pF];
			frontLeanToFrontBowR.scale.x = (params.leanF_p_w +  widthBowR[params.b_l_t_r_pF][params.leanF_p_w]);
			frontLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;
	
			var frontLeanToFrontBow1 = new THREE.Mesh(leftBowGeo1,leftBowBowMaterial1);
			frontLeanToFrontBow1.name = "frontLeanToFrontBow1" + i;
			frontLeanToFrontBow1.position.set((params.p_d/-2 - params.leanF_p_w)+0.17,params.leanF_p_h -posBow1[params.b_l_t_r_pF],i.toFixed(2));	
			frontLeanToFrontBow1.rotation.z = rotBow1[params.b_l_t_r_pF];
			frontLeanToFrontBow1.scale.set(1.9,0.21,1);
			frontLeanToFrontBow1.visible = (params.p_r_s == "1")?true:false;
	
			var frontLeanToFrontBow2 = new THREE.Mesh(leftBowGeo2,leftBowBowMaterial2);
			frontLeanToFrontBow2.name = "frontLeanToFrontBow2" + i;
			frontLeanToFrontBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pF][params.leanF_p_w]),params.leanF_p_h -0.11,i.toFixed(2));	
			frontLeanToFrontBow2.rotation.z = 0.91;
			frontLeanToFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pF],1);
			frontLeanToFrontBow2.visible = (params.p_r_s == "1")?true:false; 
	
			var frontLeanToFrontBow3 = new THREE.Mesh(leftBowGeo3,leftBowBowMaterial3);
			frontLeanToFrontBow3.name = "frontLeanToFrontBow3"+i;
			frontLeanToFrontBow3.position.set((params.p_d/-2 - params.leanF_p_w)+0.065,params.leanF_p_h-0.15,i.toFixed(2));	
			frontLeanToFrontBow3.rotation.z = 1.13;
			frontLeanToFrontBow3.scale.set(0.18,0.2,1);
			frontLeanToFrontBow3.visible = (params.p_r_s == "1")?true:false; 
	
			var frontLeanToFrontCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			frontLeanToFrontCorner.name = "frontLeanToFrontCorner"+i;
			frontLeanToFrontCorner.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],i.toFixed(2));	
			frontLeanToFrontCorner.rotation.z = 1;
			frontLeanToFrontCorner.scale.set(1.9,0.25,1);
			frontLeanToFrontCorner.visible = (params.p_r_s != "1")?true:false; 
	
			var frontLeanToFrontCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			frontLeanToFrontCornerR.name = "frontLeanToFrontCornerR"+i;
			frontLeanToFrontCornerR.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],i.toFixed(2));	
			frontLeanToFrontCornerR.rotation.z = 1;
			frontLeanToFrontCornerR.scale.set(1.9,0.25,1);
			frontLeanToFrontCornerR.visible = (params.p_r_s == "1")?true:false; 
			
			var frontLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
			frontLeanToBackBow.name = "leftBacktLeg"+i;
			frontLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
			frontLeanToBackBow.position.set(leanToPosF+0.08,params.leanF_p_h + leanTohIncF + 0.03,-i.toFixed(2));	
			frontLeanToBackBow.rotation.z = bowsRotation[params.b_l_t_r_pF];
			frontLeanToBackBow.scale.x = params.leanF_p_w + bowsScale[params.b_l_t_r_pF][2*params.leanF_p_w];
			frontLeanToBackBow.visible = (params.p_r_s != "1")?true:false;
	
			var frontLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
			frontLeanToBackBowR.name = "frontLeanToBackBowR"+i;
			frontLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
			frontLeanToBackBowR.position.set(leanToPosF+0.1,params.leanF_p_h + leanTohIncF + 0.05,-i.toFixed(2));	
			frontLeanToBackBowR.rotation.z = bowsRotation[params.b_l_t_r_pF];
			frontLeanToBackBowR.scale.x = (params.leanF_p_w +  widthBowR[params.b_l_t_r_pF][params.leanF_p_w]);
			frontLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;
	
			var frontLeanToBackCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			frontLeanToBackCorner.name = "frontLeanToBackCorner"+i;
			frontLeanToBackCorner.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],-i.toFixed(2));	
			frontLeanToBackCorner.rotation.z = 1.;
			frontLeanToBackCorner.scale.set(1.9,0.25,1);
			frontLeanToBackCorner.visible = (params.p_r_s != "1")?true:false;
	
			var frontLeanToBackCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			frontLeanToBackCornerR.name = "frontLeanToBackCornerR"+i;
			frontLeanToBackCornerR.position.set((params.p_d/-2 - params.leanF_p_w)+0.58,params.leanF_p_h -posCorner[params.b_l_t_r_pF],-i.toFixed(2));	
			frontLeanToBackCornerR.rotation.z = 1.;
			frontLeanToBackCornerR.scale.set(1.9,0.25,1);
			frontLeanToBackCornerR.visible = (params.p_r_s == "1")?true:false;
	
			var frontLeanToBackBow1 = new THREE.Mesh(leftBackBowGeo1,leftBackBowBowMaterial1);
			   frontLeanToBackBow1.name = "frontLeanToBackBow1" +i;
			   frontLeanToBackBow1.position.set((params.p_d/-2 - params.leanF_p_w)+0.17,params.leanF_p_h -posBow1[params.b_l_t_r_pF],-i.toFixed(2));	
			  frontLeanToBackBow1.rotation.z = rotBow1[params.b_l_t_r_pF];
			  frontLeanToBackBow1.scale.set(1.9,0.21,1);
			   frontLeanToBackBow1.visible = (params.p_r_s == "1")?true:false; 
	
		   var frontLeanToBackBow2 = new THREE.Mesh(leftBackBowGeo2,leftBackBowBowMaterial2);
		   frontLeanToBackBow2.name = "frontLeanToBackBow2" + i;
		   frontLeanToBackBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pF][params.leanF_p_w]),params.leanF_p_h -0.11,-i.toFixed(2));	
		   frontLeanToBackBow2.rotation.z = 0.91;
		   frontLeanToBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pF],1);
		   frontLeanToBackBow2.visible = (params.p_r_s == "1")?true:false; 
	
		   var frontLeanToBackBow3 = new THREE.Mesh(leftBackBowGeo3,leftBackBowBowMaterial3);
		   frontLeanToBackBow3.name = "frontLeanToBackBow2"+i;
		   frontLeanToBackBow3.position.set((params.p_d/-2 - params.leanF_p_w)+0.065,params.leanF_p_h-0.15,-i.toFixed(2));	
		   frontLeanToBackBow3.rotation.z = 1.13;
		   frontLeanToBackBow3.scale.set(0.18,0.2,1);
		   frontLeanToBackBow3.visible = (params.p_r_s == "1")?true:false; 
	
			if(i!=0)
			{
	
				const_var.b_t_M_F_t_F.add(frontLeanToFrontCorner);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontCornerR);
				const_var.b_t_M_F_t_F.add(frontLeanToBackCorner);
				const_var.b_t_M_F_t_F.add(frontLeanToBackCornerR);
	
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow1);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow2);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow3);
				const_var.b_t_M_F_t_F.add(frontLeanToBackBow1);
				const_var.b_t_M_F_t_F.add(frontLeanToBackBow2);
				const_var.b_t_M_F_t_F.add(frontLeanToBackBow3);
	
				
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBowR);
				const_var.b_t_M_F_t_F.add(frontLeanToBackBow);
				const_var.b_t_M_F_t_F.add(frontLeanToBackBowR);
			}
			else
			{
				frontLeanToFrontBow.position.set(leanToPosF+0.08,params.leanF_p_h + leanTohIncF + 0.03,0);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBowR);
				// const_var.b_t_M_F_t_F.add(frontLeanToBackBowR);
	
				const_var.b_t_M_F_t_F.add(frontLeanToFrontCorner);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontCornerR);
				// const_var.b_t_M_F_t_F.add(frontLeanToBackCorner);
				// const_var.b_t_M_F_t_F.add(frontLeanToBackCornerR);
	
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow1);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow2);
				const_var.b_t_M_F_t_F.add(frontLeanToFrontBow3);
				// const_var.b_t_M_F_t_F.add(frontLeanToBackBow1);
				// const_var.b_t_M_F_t_F.add(frontLeanToBackBow2);
				// const_var.b_t_M_F_t_F.add(frontLeanToBackBow3);
			}	
			const_var.b_t_M_F_t_F.rotation.set(0,Math.PI/2,0);
		}
	
	
	var frontLeanto = const_var.b_t_M_L_t_L.clone();
	frontLeanto.name = "b_t_M_F_t_F";
	frontLeanto.children[12].name = "unknown";
	frontLeanto.position.set(0,0,params.p_d/2);
	frontLeanto.rotation.y = Math.PI/2
	const_var.scene.add(frontLeanto);
	
	var data =const_var.scene.children[36];
	data.children.forEach(function(a) {
		if(a instanceof THREE.Mesh ){
			a.name = a.name.replace("left","Front");
			console.log(a.name, "aaaa");
		}
	}
	
	)
	
	}	
	Check And Add Left Lean To Bows
	if(params.add_left_lean)
    {
		var leanToPos = params.p_w/-2 - params.lean_p_w/2;
		var leanTohInc = roofMiddleHeight[params.b_l_t_r_p][2*params.lean_p_w]/2 - 0.1;

		var bowMaterial1 = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		
		//Bow for left leanto in front position
		var leftLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
		leftLeanToFrontBow.name = "leftLeanToFrontBow";
		leftLeanToFrontBow.scale.set(params.p_w/2,0.2,1);	
		leftLeanToFrontBow.position.set(leanToPos+0.08,params.lean_p_h + leanTohInc + 0.03,params.lean_p_d/2 - 0.12);	
		leftLeanToFrontBow.rotation.z = bowsRotation[params.b_l_t_r_p];
		leftLeanToFrontBow.scale.x = params.lean_p_w + bowsScale[params.b_l_t_r_p][2*params.lean_p_w];
		leftLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_L_t_L.add(leftLeanToFrontBow);

		//Bow for left leanto regular in front position
		var leftLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		leftLeanToFrontBowR.name = "leftLeanToFrontBowR";
		leftLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
		leftLeanToFrontBowR.position.set(leanToPos+0.1,params.lean_p_h + leanTohInc + 0.05,params.lean_p_d/2 - 0.12);	
		leftLeanToFrontBowR.rotation.z = bowsRotation[params.b_l_t_r_p];
		leftLeanToFrontBowR.scale.x = (params.lean_p_w +  widthBowR[params.b_l_t_r_p][params.lean_p_w]);
		leftLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_L_t_L.add(leftLeanToFrontBowR);

		//Trim for left leanto regular in front position
		var leftLeanToFrontTrim = new THREE.Mesh(bowGeometry,bowMaterial1);
		leftLeanToFrontTrim.name = "leftLeanToFrontTrim";
		leftLeanToFrontTrim.scale.set(params.p_w/2,0.3,0.5);	
		leftLeanToFrontTrim.position.set(leanToPos+0.1,params.lean_p_h + leanTohInc + 0.07,params.lean_p_d/2);	
		leftLeanToFrontTrim.rotation.z = bowsRotation[params.b_l_t_r_p];
		leftLeanToFrontTrim.scale.x = (params.lean_p_w +  widthBowR[params.b_l_t_r_p][params.lean_p_w]);
		leftLeanToFrontTrim.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_L_t_L.add(leftLeanToFrontTrim);

		//Trim for left leanto regular in back position
		var leftLeanToBackTrim = new THREE.Mesh(bowGeometry,bowMaterial1);
		leftLeanToBackTrim.name = "leftLeanToBackTrim";
		leftLeanToBackTrim.scale.set(params.p_w/2,0.3,0.5);	
		leftLeanToBackTrim.position.set(leanToPos+0.1,params.lean_p_h + leanTohInc + 0.07,params.lean_p_d/-2);	
		leftLeanToBackTrim.rotation.z = bowsRotation[params.b_l_t_r_p];
		leftLeanToBackTrim.scale.x = (params.lean_p_w +  widthBowR[params.b_l_t_r_p][params.lean_p_w]);
		leftLeanToBackTrim.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_L_t_L.add(leftLeanToBackTrim);

		//Trim1 for left leanto regular in front position
		 var leanToLeftFrontTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		 var leanToLeftFrontTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		 var leanToleftFrontTrim1 = new THREE.Mesh(leanToLeftFrontTrim1Geo,leanToLeftFrontTrim1Material);
		 leanToleftFrontTrim1.name = "leanToleftFrontTrim1";
		 leanToleftFrontTrim1.position.set((params.p_w/-2 - params.lean_p_w)+posTrim2[params.b_l_t_r_p],params.lean_p_h -posBow1[params.b_l_t_r_p]+0.02,params.lean_p_d/2);	
		 leanToleftFrontTrim1.rotation.z = rotTrim2[params.b_l_t_r_p][params.lean_p_w];
		 leanToleftFrontTrim1.scale.set(scaleTrim2[params.b_l_t_r_p],0.31,0.5);
		 leanToleftFrontTrim1.visible = (params.p_r_s == "1")?true:false; 
		 const_var.b_t_M_L_t_L.add(leanToleftFrontTrim1);

		 //Trim1 for left leanto regular in back position
		  var leanToLeftBackTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leanToLeftBackTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		  var leanToleftBackTrim1 = new THREE.Mesh(leanToLeftBackTrim1Geo,leanToLeftBackTrim1Material);
		  leanToleftBackTrim1.name = "leanTolefBackTrim1";
		  leanToleftBackTrim1.position.set((params.p_w/-2 - params.lean_p_w)+posTrim2[params.b_l_t_r_p],params.lean_p_h -posBow1[params.b_l_t_r_p]+0.02,params.lean_p_d/-2);	
		  leanToleftBackTrim1.rotation.z = rotTrim2[params.b_l_t_r_p][params.lean_p_w];
		  leanToleftBackTrim1.scale.set(scaleTrim2[params.b_l_t_r_p],0.31,0.5);
		  leanToleftBackTrim1.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftBackTrim1);

		  //Trim2 for left leanto regular in front position
		  var leanToLeftFrontTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leanToLeftFrontTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		  var leanToleftFrontTrim2 = new THREE.Mesh(leanToLeftFrontTrim2Geo,leanToLeftFrontTrim2Material);
		  leanToleftFrontTrim2.name = "leanToleftFrontTrim2";
		  leanToleftFrontTrim2.position.set((params.p_w/-2 - posBow2[params.b_l_t_r_p][params.lean_p_w])+0.004,params.lean_p_h -0.09,params.lean_p_d/2);	
		  leanToleftFrontTrim2.rotation.z = 0.91;
		  leanToleftFrontTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_p]+0.1,0.5);
		  leanToleftFrontTrim2.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftFrontTrim2);

		  //Trim2 for left leanto regular in back position
		   var leanToLeftBackTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		   var leanToLeftBackTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		   var leanToleftBackTrim2 = new THREE.Mesh(leanToLeftBackTrim2Geo,leanToLeftBackTrim2Material);
		   leanToleftBackTrim2.name = "leanToleftBackTrim2";
		   leanToleftBackTrim2.position.set((params.p_w/-2 - posBow2[params.b_l_t_r_p][params.lean_p_w])+0.004,params.lean_p_h -0.09,params.lean_p_d/-2);	
		   leanToleftBackTrim2.rotation.z = 0.91;
		   leanToleftBackTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_p]+0.1,0.5);
		   leanToleftBackTrim2.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_L_t_L.add(leanToleftBackTrim2);

		   //Trim3 for left leanto regular in front position
		   var leanToLeftFrontTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
		   var leanToLeftFrontTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
		   var leanToleftFrontTrim3 = new THREE.Mesh(leanToLeftFrontTrim3Geo,leanToLeftFrontTrim3Material);
		   leanToleftFrontTrim3.name = "leanToleftFrontTrim3";
		   leanToleftFrontTrim3.position.set((params.p_w/-2 - params.lean_p_w)+0.064,params.lean_p_h-0.142,params.lean_p_d/2);	
		   leanToleftFrontTrim3.rotation.z = 1.2;
		   leanToleftFrontTrim3.scale.set(0.34,0.3,0.5);
		   leanToleftFrontTrim3.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_L_t_L.add(leanToleftFrontTrim3);

		   //Trim3 for left leanto regular in back position
			 var leanToLeftBackTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
			 var leanToLeftBackTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
			 var leanToleftBackTrim3 = new THREE.Mesh(leanToLeftBackTrim3Geo,leanToLeftBackTrim3Material);
			 leanToleftBackTrim3.name = "leanToleftBackTrim3";
			 leanToleftBackTrim3.position.set((params.p_w/-2 - params.lean_p_w)+0.064,params.lean_p_h-0.142,params.lean_p_d/-2);	
			 leanToleftBackTrim3.rotation.z = 1.2;
			 leanToleftBackTrim3.scale.set(0.34,0.3,0.5);
			 leanToleftBackTrim3.visible = (params.p_r_s == "1")?true:false; 
			 const_var.b_t_M_L_t_L.add(leanToleftBackTrim3);

			 //Bow1 for left leanto regular in front position
		  var leftBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leftBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var leanToleftFrontBow1 = new THREE.Mesh(leftBowGeo1,leftBowBowMaterial1);
		  leanToleftFrontBow1.name = "leanToleftFrontBow1";
		  leanToleftFrontBow1.position.set((params.p_w/-2 - params.lean_p_w)+0.17,params.lean_p_h -posBow1[params.b_l_t_r_p],params.lean_p_d/2 - 0.12);	
		  leanToleftFrontBow1.rotation.z = rotBow1[params.b_l_t_r_p];
		  leanToleftFrontBow1.scale.set(1.9,0.21,1);
		  leanToleftFrontBow1.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftFrontBow1);

		  //Bow2 for left leanto regular in front position
		   var leftBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
		   var leftBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		   var leanToleftFrontBow2 = new THREE.Mesh(leftBowGeo2,leftBowBowMaterial2);
		   leanToleftFrontBow2.name = "leanToleftFrontBow2";
		   leanToleftFrontBow2.position.set((params.p_w/-2 - posBow2[params.b_l_t_r_p][params.lean_p_w]),params.lean_p_h -0.11,params.lean_p_d/2 - 0.12);	
		   leanToleftFrontBow2.rotation.z = 0.91;
		   leanToleftFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_p],1);
		   leanToleftFrontBow2.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_L_t_L.add(leanToleftFrontBow2);

		   //Bow3 for left leanto regular in front position
		  var leftBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
		  var leftBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
		  var leanToleftFrontBow3 = new THREE.Mesh(leftBowGeo3,leftBowBowMaterial3);
		  leanToleftFrontBow3.name = "leanToleftFrontBow2";
		  leanToleftFrontBow3.position.set((params.p_w/-2 - params.lean_p_w)+0.065,params.lean_p_h-0.15,params.lean_p_d/2 - 0.12);	
		  leanToleftFrontBow3.rotation.z = 1.13;
		  leanToleftFrontBow3.scale.set(0.18,0.2,1);
		  leanToleftFrontBow3.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftFrontBow3);

		  //corner for left leanto in front position
		  var leftCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
		  var leftCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var leanToleftFrontCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		  leanToleftFrontCorner.name = "leanToleftFrontCorner";
		  leanToleftFrontCorner.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],params.lean_p_d/2 - 0.12);	
		  leanToleftFrontCorner.rotation.z = 1;
		  leanToleftFrontCorner.scale.set(1.9,0.25,1);
		  leanToleftFrontCorner.visible = (params.p_r_s != "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftFrontCorner);

		   //corner for left leanto regular in front position
		  var leftCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
		  var leftCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var leanToleftFrontCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		  leanToleftFrontCornerR.name = "leanToleftFrontCornerR";
		  leanToleftFrontCornerR.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],params.lean_p_d/2 - 0.12);	
		  leanToleftFrontCornerR.rotation.z = 1;
		  leanToleftFrontCornerR.scale.set(1.9,0.25,1);
		  leanToleftFrontCornerR.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftFrontCornerR);
		
		   //Bow for left leanto in back position
		var leftLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
		leftLeanToBackBow.name = "leftLeanToBackBow";
		leftLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
		leftLeanToBackBow.position.set(leanToPos+0.08,params.lean_p_h + leanTohInc + 0.03,params.lean_p_d/-2 + 0.12);	
		leftLeanToBackBow.rotation.z = bowsRotation[params.b_l_t_r_p];
		leftLeanToBackBow.scale.x = params.lean_p_w + bowsScale[params.b_l_t_r_p][2*params.lean_p_w];
		leftLeanToBackBow.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_L_t_L.add(leftLeanToBackBow);

		//Bow for left leanto regular in back position
		var leftLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		leftLeanToBackBowR.name = "leftLeanToBackBowR";
		leftLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
		leftLeanToBackBowR.position.set(leanToPos+0.1,params.lean_p_h + leanTohInc + 0.05,params.lean_p_d/-2 + 0.12);	
		leftLeanToBackBowR.rotation.z = bowsRotation[params.b_l_t_r_p];
		leftLeanToBackBowR.scale.x = (params.lean_p_w +  widthBowR[params.b_l_t_r_p][params.lean_p_w]);
		leftLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_L_t_L.add(leftLeanToBackBowR);

		//corner for left leanto in back position
		 var leanToleftBackCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		 leanToleftBackCorner.name = "leanToleftBackCorner";
		 leanToleftBackCorner.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],params.lean_p_d/-2 + 0.12);	
		 leanToleftBackCorner.rotation.z = 1.;
		 leanToleftBackCorner.scale.set(1.9,0.25,1);
		 leanToleftBackCorner.visible = (params.p_r_s != "1")?true:false;
		 const_var.b_t_M_L_t_L.add(leanToleftBackCorner);

          //corner for left leanto regular in back position
		  var leanToleftBackCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		  leanToleftBackCornerR.name = "leanToleftBackCornerR";
		  leanToleftBackCornerR.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],params.lean_p_d/-2 + 0.12);	
		  leanToleftBackCornerR.rotation.z = 1.;
		  leanToleftBackCornerR.scale.set(1.9,0.25,1);
		  leanToleftBackCornerR.visible = (params.p_r_s == "1")?true:false;
		  const_var.b_t_M_L_t_L.add(leanToleftBackCornerR);

		  var lefRimndr = params.lean_p_d % legDistance;
		  var lefDiff = legDistance + lefRimndr / legDistance;


		   var leftBackBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
		   var leftBackBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
           var leanToleftBackBow1 = new THREE.Mesh(leftBackBowGeo1,leftBackBowBowMaterial1);
		   leanToleftBackBow1.name = "leanToleftBackBow1";
		   leanToleftBackBow1.position.set((params.p_w/-2 - params.lean_p_w)+0.17,params.lean_p_h -posBow1[params.b_l_t_r_p],params.lean_p_d/-2 + 0.12);	
		  leanToleftBackBow1.rotation.z = rotBow1[params.b_l_t_r_p];
		  leanToleftBackBow1.scale.set(1.9,0.21,1);
		   leanToleftBackBow1.visible = (params.p_r_s == "1")?true:false; 
		   const_var.b_t_M_L_t_L.add(leanToleftBackBow1)

		  var leftBackBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leftBackBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		  var leanToleftBackBow2 = new THREE.Mesh(leftBackBowGeo2,leftBackBowBowMaterial2);
		  leanToleftBackBow2.name = "leanToleftBackBow2";
		  leanToleftBackBow2.position.set((params.p_w/-2 - posBow2[params.b_l_t_r_p][params.lean_p_w]),params.lean_p_h -0.11,params.lean_p_d/-2 + 0.12);	
		  leanToleftBackBow2.rotation.z = 0.91;
		  leanToleftBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_p],1);
		  leanToleftBackBow2.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftBackBow2);

		  var leftBackBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
		  var leftBackBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
		  var leanToleftBackBow3 = new THREE.Mesh(leftBackBowGeo3,leftBackBowBowMaterial3);
		  leanToleftBackBow3.name = "leanToleftBackBow2";
		  leanToleftBackBow3.position.set((params.p_w/-2 - params.lean_p_w)+0.065,params.lean_p_h-0.15,params.lean_p_d/-2 + 0.12);	
		  leanToleftBackBow3.rotation.z = 1.13;
		  leanToleftBackBow3.scale.set(0.18,0.2,1);
		  leanToleftBackBow3.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_L_t_L.add(leanToleftBackBow3);
		
		for(var i = 0;i<(params.lean_p_d/2 - 2);i = i+legDistance)
		{
			var leftLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
			leftLeanToFrontBow.name = "leftLeanToFrontBow"+i;
			leftLeanToFrontBow.scale.set(params.p_w/2,0.2,1);	
			leftLeanToFrontBow.position.set(leanToPos+0.08,params.lean_p_h + leanTohInc + 0.03,i.toFixed(2));	
			leftLeanToFrontBow.rotation.z = bowsRotation[params.b_l_t_r_p];
			leftLeanToFrontBow.scale.x = params.lean_p_w + bowsScale[params.b_l_t_r_p][2*params.lean_p_w];
			leftLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;

			var leftLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		    leftLeanToFrontBowR.name = "leftLeanToFrontBowR"+i;
		    leftLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
		    leftLeanToFrontBowR.position.set(leanToPos+0.1,params.lean_p_h + leanTohInc + 0.05,i.toFixed(2));	
		    leftLeanToFrontBowR.rotation.z = bowsRotation[params.b_l_t_r_p];
		    leftLeanToFrontBowR.scale.x = (params.lean_p_w +  widthBowR[params.b_l_t_r_p][params.lean_p_w]);
		    leftLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;

			var leanToleftFrontBow1 = new THREE.Mesh(leftBowGeo1,leftBowBowMaterial1);
			leanToleftFrontBow1.name = "leanToleftFrontBow1" + i;
			leanToleftFrontBow1.position.set((params.p_w/-2 - params.lean_p_w)+0.17,params.lean_p_h -posBow1[params.b_l_t_r_p],i.toFixed(2));	
			leanToleftFrontBow1.rotation.z = rotBow1[params.b_l_t_r_p];
			leanToleftFrontBow1.scale.set(1.9,0.21,1);
			leanToleftFrontBow1.visible = (params.p_r_s == "1")?true:false;

			var leanToleftFrontBow2 = new THREE.Mesh(leftBowGeo2,leftBowBowMaterial2);
			leanToleftFrontBow2.name = "leanToleftFrontBow2" + i;
			leanToleftFrontBow2.position.set((params.p_w/-2 - posBow2[params.b_l_t_r_p][params.lean_p_w]),params.lean_p_h -0.11,i.toFixed(2));	
			leanToleftFrontBow2.rotation.z = 0.91;
			leanToleftFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_p],1);
			leanToleftFrontBow2.visible = (params.p_r_s == "1")?true:false; 

			var leanToleftFrontBow3 = new THREE.Mesh(leftBowGeo3,leftBowBowMaterial3);
			leanToleftFrontBow3.name = "leanToleftFrontBow2"+i;
			leanToleftFrontBow3.position.set((params.p_w/-2 - params.lean_p_w)+0.065,params.lean_p_h-0.15,i.toFixed(2));	
			leanToleftFrontBow3.rotation.z = 1.13;
			leanToleftFrontBow3.scale.set(0.18,0.2,1);
			leanToleftFrontBow3.visible = (params.p_r_s == "1")?true:false; 

			var leanToleftFrontCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			leanToleftFrontCorner.name = "leanToleftFrontCorner"+i;
			leanToleftFrontCorner.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],i.toFixed(2));	
			leanToleftFrontCorner.rotation.z = 1;
			leanToleftFrontCorner.scale.set(1.9,0.25,1);
			leanToleftFrontCorner.visible = (params.p_r_s != "1")?true:false; 

			var leanToleftFrontCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			leanToleftFrontCornerR.name = "leanToleftFrontCornerR"+i;
			leanToleftFrontCornerR.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],i.toFixed(2));	
			leanToleftFrontCornerR.rotation.z = 1;
			leanToleftFrontCornerR.scale.set(1.9,0.25,1);
			leanToleftFrontCornerR.visible = (params.p_r_s == "1")?true:false; 
			
			var leftLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
			leftLeanToBackBow.name = "leftBacktLeg"+i;
			leftLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
			leftLeanToBackBow.position.set(leanToPos+0.08,params.lean_p_h + leanTohInc + 0.03,-i.toFixed(2));	
			leftLeanToBackBow.rotation.z = bowsRotation[params.b_l_t_r_p];
			leftLeanToBackBow.scale.x = params.lean_p_w + bowsScale[params.b_l_t_r_p][2*params.lean_p_w];
			leftLeanToBackBow.visible = (params.p_r_s != "1")?true:false;

			var leftLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		    leftLeanToBackBowR.name = "leftLeanToBackBowR"+i;
		    leftLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
		    leftLeanToBackBowR.position.set(leanToPos+0.1,params.lean_p_h + leanTohInc + 0.05,-i.toFixed(2));	
		    leftLeanToBackBowR.rotation.z = bowsRotation[params.b_l_t_r_p];
		    leftLeanToBackBowR.scale.x = (params.lean_p_w +  widthBowR[params.b_l_t_r_p][params.lean_p_w]);
		    leftLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;

			var leanToleftBackCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			leanToleftBackCorner.name = "leanToleftBackCorner"+i;
			leanToleftBackCorner.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],-i.toFixed(2));	
			leanToleftBackCorner.rotation.z = 1.;
			leanToleftBackCorner.scale.set(1.9,0.25,1);
			leanToleftBackCorner.visible = (params.p_r_s != "1")?true:false;

			var leanToleftBackCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
			leanToleftBackCornerR.name = "leanToleftBackCornerR"+i;
			leanToleftBackCornerR.position.set((params.p_w/-2 - params.lean_p_w)+0.58,params.lean_p_h -posCorner[params.b_l_t_r_p],-i.toFixed(2));	
			leanToleftBackCornerR.rotation.z = 1.;
			leanToleftBackCornerR.scale.set(1.9,0.25,1);
			leanToleftBackCornerR.visible = (params.p_r_s == "1")?true:false;

			var leanToleftBackBow1 = new THREE.Mesh(leftBackBowGeo1,leftBackBowBowMaterial1);
		   leanToleftBackBow1.name = "leanToleftBackBow1" +i;
		   leanToleftBackBow1.position.set((params.p_w/-2 - params.lean_p_w)+0.17,params.lean_p_h -posBow1[params.b_l_t_r_p],-i.toFixed(2));	
		  leanToleftBackBow1.rotation.z = rotBow1[params.b_l_t_r_p];
		  leanToleftBackBow1.scale.set(1.9,0.21,1);
		   leanToleftBackBow1.visible = (params.p_r_s == "1")?true:false; 

		   var leanToleftBackBow2 = new THREE.Mesh(leftBackBowGeo2,leftBackBowBowMaterial2);
		   leanToleftBackBow2.name = "leanToleftBackBow2" + i;
		   leanToleftBackBow2.position.set((params.p_w/-2 - posBow2[params.b_l_t_r_p][params.lean_p_w]),params.lean_p_h -0.11,-i.toFixed(2));	
		   leanToleftBackBow2.rotation.z = 0.91;
		   leanToleftBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_p],1);
		   leanToleftBackBow2.visible = (params.p_r_s == "1")?true:false; 

		   var leanToleftBackBow3 = new THREE.Mesh(leftBackBowGeo3,leftBackBowBowMaterial3);
		   leanToleftBackBow3.name = "leanToleftBackBow2"+i;
		   leanToleftBackBow3.position.set((params.p_w/-2 - params.lean_p_w)+0.065,params.lean_p_h-0.15,-i.toFixed(2));	
		   leanToleftBackBow3.rotation.z = 1.13;
		   leanToleftBackBow3.scale.set(0.18,0.2,1);
		   leanToleftBackBow3.visible = (params.p_r_s == "1")?true:false; 

			if(i!=0)
			{

				const_var.b_t_M_L_t_L.add(leanToleftFrontCorner);
				const_var.b_t_M_L_t_L.add(leanToleftFrontCornerR);
				const_var.b_t_M_L_t_L.add(leanToleftBackCorner);
				const_var.b_t_M_L_t_L.add(leanToleftBackCornerR);

		        const_var.b_t_M_L_t_L.add(leanToleftFrontBow1);
		        const_var.b_t_M_L_t_L.add(leanToleftFrontBow2);
				const_var.b_t_M_L_t_L.add(leanToleftFrontBow3);
		        const_var.b_t_M_L_t_L.add(leanToleftBackBow1);
		        const_var.b_t_M_L_t_L.add(leanToleftBackBow2);
				const_var.b_t_M_L_t_L.add(leanToleftBackBow3);

				
				const_var.b_t_M_L_t_L.add(leftLeanToFrontBow);
				const_var.b_t_M_L_t_L.add(leftLeanToFrontBowR);
				const_var.b_t_M_L_t_L.add(leftLeanToBackBow);
				const_var.b_t_M_L_t_L.add(leftLeanToBackBowR);
			}
			else
			{
				leftLeanToFrontBow.position.set(leanToPos+0.08,params.lean_p_h + leanTohInc + 0.03,0);
				const_var.b_t_M_L_t_L.add(leftLeanToFrontBow);
				const_var.b_t_M_L_t_L.add(leftLeanToFrontBowR);
				// const_var.b_t_M_L_t_L.add(leftLeanToBackBowR);

				const_var.b_t_M_L_t_L.add(leanToleftFrontCorner);
				const_var.b_t_M_L_t_L.add(leanToleftFrontCornerR);
				// const_var.b_t_M_L_t_L.add(leanToleftBackCorner);
				// const_var.b_t_M_L_t_L.add(leanToleftBackCornerR);

                const_var.b_t_M_L_t_L.add(leanToleftFrontBow1);
                const_var.b_t_M_L_t_L.add(leanToleftFrontBow2);
				const_var.b_t_M_L_t_L.add(leanToleftFrontBow3);
                // const_var.b_t_M_L_t_L.add(leanToleftBackBow1);
                // const_var.b_t_M_L_t_L.add(leanToleftBackBow2);
				// const_var.b_t_M_L_t_L.add(leanToleftBackBow3);
			}
		}
	}
	Check And Add Right Lean To Bows
	if(params.add_right_lean)
    {
		var leanToPosR = params.p_w/2 + params.leanR_p_w/2;
		var leanTohIncR = roofMiddleHeight[params.b_l_t_r_pR][2*params.leanR_p_w]/2 - 0.1;
		var trimMaterial = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});

		var rightLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
		rightLeanToFrontBow.name = "rightLeanToFrontBow";
		rightLeanToFrontBow.scale.set(params.p_w/2,0.2,1);	
		rightLeanToFrontBow.position.set(leanToPosR-0.08,params.leanR_p_h + leanTohIncR + 0.03,params.leanR_p_d/2 - 0.12);	
		rightLeanToFrontBow.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		rightLeanToFrontBow.scale.x = params.leanR_p_w + bowsScale[params.b_l_t_r_pR][2*params.leanR_p_w];
		rightLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_R_t_R.add(rightLeanToFrontBow);

		var rightLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		rightLeanToFrontBowR.name = "rightLeanToFrontBowR";
		rightLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
		rightLeanToFrontBowR.position.set(leanToPosR-0.1,params.leanR_p_h + leanTohIncR + 0.05,params.leanR_p_d/2 - 0.12);	
		rightLeanToFrontBowR.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		rightLeanToFrontBowR.scale.x = (params.leanR_p_w +  widthBowR[params.b_l_t_r_pR][params.leanR_p_w]);
		rightLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_R_t_R.add(rightLeanToFrontBowR);

		var rightLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		rightLeanToBackBowR.name = "rightLeanToBackBowR";
		rightLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
		rightLeanToBackBowR.position.set(leanToPosR-0.1,params.leanR_p_h + leanTohIncR + 0.05,params.leanR_p_d/-2 + 0.12);	
		rightLeanToBackBowR.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		rightLeanToBackBowR.scale.x = (params.leanR_p_w +  widthBowR[params.b_l_t_r_pR][params.leanR_p_w]);
		rightLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_R_t_R.add(rightLeanToBackBowR);

		var rightBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
		var rightBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		var leanToRightFrontBow1 = new THREE.Mesh(rightBowGeo1,rightBowBowMaterial1);
		leanToRightFrontBow1.name = "leanToRightFrontBow1";
		leanToRightFrontBow1.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.17,params.leanR_p_h -posBow1[params.b_l_t_r_pR],params.leanR_p_d/2 - 0.12);	
		leanToRightFrontBow1.rotation.z = -rotBow1[params.b_l_t_r_pR];
		leanToRightFrontBow1.scale.set(1.9,0.21,1);
		leanToRightFrontBow1.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightFrontBow1);

		var leanToRightBackBow1 = new THREE.Mesh(rightBowGeo1,rightBowBowMaterial1);
		leanToRightBackBow1.name = "leanToRightBackBow1";
		leanToRightBackBow1.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.17,params.leanR_p_h -posBow1[params.b_l_t_r_pR],params.leanR_p_d/-2 + 0.12);	
		leanToRightBackBow1.rotation.z = -rotBow1[params.b_l_t_r_pR];
		leanToRightBackBow1.scale.set(1.9,0.21,1);
		leanToRightBackBow1.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightBackBow1);

		var rightBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
		var rightBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	    var leanToRightFrontBow2 = new THREE.Mesh(rightBowGeo2,rightBowBowMaterial2);
		leanToRightFrontBow2.name = "leanToRightFrontBow2";
		leanToRightFrontBow2.position.set(-(params.p_w/-2 - posBow2[params.b_l_t_r_pR][params.leanR_p_w]),params.leanR_p_h -0.11,params.leanR_p_d/2 - 0.12);	
		leanToRightFrontBow2.rotation.z = -0.91;
		leanToRightFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pR],1);
		leanToRightFrontBow2.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightFrontBow2);

		var leanToRightBackBow2 = new THREE.Mesh(rightBowGeo2,rightBowBowMaterial2);
		leanToRightBackBow2.name = "leanToRightBackBow2";
		leanToRightBackBow2.position.set(-(params.p_w/-2 - posBow2[params.b_l_t_r_pR][params.leanR_p_w]),params.leanR_p_h -0.11,params.leanR_p_d/-2 + 0.12);	
		leanToRightBackBow2.rotation.z = -0.91;
		leanToRightBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pR],1);
		leanToRightBackBow2.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightBackBow2);

		var rightBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
		var rightBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
		var leanToRightFrontBow3 = new THREE.Mesh(rightBowGeo3,rightBowBowMaterial3);
		leanToRightFrontBow3.name = "leanToRightFrontBow2";
		leanToRightFrontBow3.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.065,params.leanR_p_h-0.15,params.leanR_p_d/2 - 0.12);	
		leanToRightFrontBow3.rotation.z = -1.13;
		leanToRightFrontBow3.scale.set(0.18,0.2,1);
		leanToRightFrontBow3.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightFrontBow3);

		var leanToRightBackBow3 = new THREE.Mesh(rightBowGeo3,rightBowBowMaterial3);
		leanToRightBackBow3.name = "leanToRightBackBow2";
		leanToRightBackBow3.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.065,params.leanR_p_h-0.15,params.leanR_p_d/-2 + 0.12);	
		leanToRightBackBow3.rotation.z = -1.13;
		leanToRightBackBow3.scale.set(0.18,0.2,1);
		leanToRightBackBow3.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightBackBow3);

		var rightLeanToFrontTrim = new THREE.Mesh(bowGeometry,trimMaterial);
		rightLeanToFrontTrim.name = "rightLeanToFrontTrim";
		rightLeanToFrontTrim.scale.set(params.p_w/2,0.3,0.5);	
		rightLeanToFrontTrim.position.set(leanToPosR-0.1,params.leanR_p_h + leanTohIncR + 0.07,params.leanR_p_d/2);	
		rightLeanToFrontTrim.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		rightLeanToFrontTrim.scale.x = (params.leanR_p_w +  widthBowR[params.b_l_t_r_pR][params.leanR_p_w]);
		rightLeanToFrontTrim.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_R_t_R.add(rightLeanToFrontTrim);

		var rightLeanToBackTrim = new THREE.Mesh(bowGeometry,trimMaterial);
		rightLeanToBackTrim.name = "rightLeanToBackTrim";
		rightLeanToBackTrim.scale.set(params.p_w/2,0.3,0.5);	
		rightLeanToBackTrim.position.set(leanToPosR-0.1,params.leanR_p_h + leanTohIncR + 0.07,params.leanR_p_d/-2);	
		rightLeanToBackTrim.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		rightLeanToBackTrim.scale.x = (params.leanR_p_w +  widthBowR[params.b_l_t_r_pR][params.leanR_p_w]);
		rightLeanToBackTrim.visible = (params.p_r_s == "1")?true:false;
		const_var.b_t_M_R_t_R.add(rightLeanToBackTrim);

		var leanToRightFrontTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		var leanToRightFrontTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		var leanToRightFrontTrim1 = new THREE.Mesh(leanToRightFrontTrim1Geo,leanToRightFrontTrim1Material);
		leanToRightFrontTrim1.name = "leanToRightFrontTrim1";
		leanToRightFrontTrim1.position.set(-(params.p_w/-2 - params.leanR_p_w)-posTrim2[params.b_l_t_r_pR],params.leanR_p_h -posBow1[params.b_l_t_r_pR]+0.02,params.leanR_p_d/2);	
		leanToRightFrontTrim1.rotation.z = -rotTrim2[params.b_l_t_r_pR][params.leanR_p_w];
		leanToRightFrontTrim1.scale.set(scaleTrim2[params.b_l_t_r_pR],0.31,0.5);
		leanToRightFrontTrim1.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightFrontTrim1);


		var leanToRightBackTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		var leanToRightBackTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		var leanToRightBackTrim1 = new THREE.Mesh(leanToRightBackTrim1Geo,leanToRightBackTrim1Material);
		leanToRightBackTrim1.name = "leanToRightBackTrim1";
		leanToRightBackTrim1.position.set(-(params.p_w/-2 - params.leanR_p_w)-posTrim2[params.b_l_t_r_pR],params.leanR_p_h -posBow1[params.b_l_t_r_pR]+0.02,params.leanR_p_d/-2);	
		leanToRightBackTrim1.rotation.z = -rotTrim2[params.b_l_t_r_pR][params.leanR_p_w];
		leanToRightBackTrim1.scale.set(scaleTrim2[params.b_l_t_r_pR],0.31,0.5);
		leanToRightBackTrim1.visible = (params.p_r_s == "1")?true:false; 
		const_var.b_t_M_R_t_R.add(leanToRightBackTrim1);

		 var leanToRightFrontTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		 var leanToRightFrontTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		 var leanToRightFrontTrim2 = new THREE.Mesh(leanToRightFrontTrim2Geo,leanToRightFrontTrim2Material);
		 leanToRightFrontTrim2.name = "leanToRightFrontTrim2";
		 leanToRightFrontTrim2.position.set(-(params.p_w/-2 - posBow2[params.b_l_t_r_pR][params.leanR_p_w])-0.004,params.leanR_p_h -0.09,params.leanR_p_d/2);	
		 leanToRightFrontTrim2.rotation.z = -0.91;
		 leanToRightFrontTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_pR]+0.1,0.5);
		 leanToRightFrontTrim2.visible = (params.p_r_s == "1")?true:false; 
		 const_var.b_t_M_R_t_R.add(leanToRightFrontTrim2);

		  var leanToRightBackTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
		  var leanToRightBackTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
		  var leanToRightBackTrim2 = new THREE.Mesh(leanToRightBackTrim2Geo,leanToRightBackTrim2Material);
		  leanToRightBackTrim2.name = "leanToRightBackTrim2";
		  leanToRightBackTrim2.position.set(-(params.p_w/-2 - posBow2[params.b_l_t_r_pR][params.leanR_p_w])-0.004,params.leanR_p_h -0.09,params.leanR_p_d/-2);	
		  leanToRightBackTrim2.rotation.z = -0.91;
		  leanToRightBackTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_pR]+0.1,0.5);
		  leanToRightBackTrim2.visible = (params.p_r_s == "1")?true:false; 
		  const_var.b_t_M_R_t_R.add(leanToRightBackTrim2);

		 var leanToRightFrontTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
		 var leanToRightFrontTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
		 var leanToRightFrontTrim3 = new THREE.Mesh(leanToRightFrontTrim3Geo,leanToRightFrontTrim3Material);
		 leanToRightFrontTrim3.name = "leanToRightFrontTrim3";
		 leanToRightFrontTrim3.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.064,params.leanR_p_h-0.142,params.leanR_p_d/2);	
		 leanToRightFrontTrim3.rotation.z = -1.2;
		 leanToRightFrontTrim3.scale.set(0.34,0.3,0.5);
		 leanToRightFrontTrim3.visible = (params.p_r_s == "1")?true:false; 
		 const_var.b_t_M_R_t_R.add(leanToRightFrontTrim3);

		 var leanToRightBackTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
		 var leanToRightBackTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
		 var leanToRightBackTrim3 = new THREE.Mesh(leanToRightBackTrim3Geo,leanToRightBackTrim3Material);
		 leanToRightBackTrim3.name = "leanToRightBackTrim3";
		 leanToRightBackTrim3.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.064,params.leanR_p_h-0.142,params.leanR_p_d/-2);	
		 leanToRightBackTrim3.rotation.z = -1.2;
		 leanToRightBackTrim3.scale.set(0.34,0.3,0.5);
		 leanToRightBackTrim3.visible = (params.p_r_s == "1")?true:false; 
		 const_var.b_t_M_R_t_R.add(leanToRightBackTrim3);

		 var rightCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
		 var rightCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		 var leanToRightFrontCorner = new THREE.Mesh(rightCornerGeo,rightCornerBowMaterial);
		leanToRightFrontCorner.name = "leanToRightFrontCorner";
		leanToRightFrontCorner.position.set((params.p_w/2 + params.leanR_p_w)-0.60,params.leanR_p_h -posCorner[params.b_l_t_r_pR],params.leanR_p_d/2 - 0.12);	
		leanToRightFrontCorner.rotation.z = -1;
		leanToRightFrontCorner.scale.set(1.9,0.25,1);
		leanToRightFrontCorner.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_R_t_R.add(leanToRightFrontCorner);

		 var rightCornerGeoR = new THREE.BoxGeometry(0.98,0.6,0.2);
		 var rightCornerBowMaterialR = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
		 var leanToRightFrontCornerR = new THREE.Mesh(rightCornerGeoR,rightCornerBowMaterialR);
		 leanToRightFrontCornerR.name = "leanToRightFrontCornerR";
		 leanToRightFrontCornerR.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.58,params.leanR_p_h -posCorner[params.b_l_t_r_pR],params.leanR_p_d/2 - 0.12);	
		 leanToRightFrontCornerR.rotation.z = -1;
		 leanToRightFrontCornerR.scale.set(1.9,0.25,1);
		 leanToRightFrontCornerR.visible = (params.p_r_s == "1")?true:false;
		 const_var.b_t_M_R_t_R.add(leanToRightFrontCornerR);

		 var leanToRightBackCorner = new THREE.Mesh(rightCornerGeo,rightCornerBowMaterial);
		 leanToRightBackCorner.name = "leanToRightBackCorner";
		 leanToRightBackCorner.position.set((params.p_w/2 + params.leanR_p_w)-0.60,params.leanR_p_h -posCorner[params.b_l_t_r_pR],params.leanR_p_d/-2 + 0.12);	
		 leanToRightBackCorner.rotation.z = -1;
		 leanToRightBackCorner.scale.set(1.9,0.25,1);
		 leanToRightBackCorner.visible = (params.p_r_s != "1")?true:false;
		 const_var.b_t_M_R_t_R.add(leanToRightBackCorner);

		 var leanToRightBackCornerR = new THREE.Mesh(rightCornerGeo,rightCornerBowMaterial);
		 leanToRightBackCornerR.name = "leanToRightBackCornerR";
		 leanToRightBackCornerR.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.58,params.leanR_p_h -posCorner[params.b_l_t_r_pR],params.leanR_p_d/-2 + 0.12);	
		 leanToRightBackCornerR.rotation.z = -1.;
		 leanToRightBackCornerR.scale.set(1.9,0.25,1);
		 leanToRightBackCornerR.visible = (params.p_r_s == "1")?true:false;
		 const_var.b_t_M_R_t_R.add(leanToRightBackCornerR);
		
		var rightLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
		rightLeanToBackBow.name = "rightLeanToBackBow";	
		rightLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
		rightLeanToBackBow.position.set(leanToPosR-0.08,params.leanR_p_h + leanTohIncR + 0.03,params.leanR_p_d/-2 + 0.12);	
		rightLeanToBackBow.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		rightLeanToBackBow.scale.x = params.leanR_p_w + bowsScale[params.b_l_t_r_pR][2*params.leanR_p_w];
		rightLeanToBackBow.visible = (params.p_r_s != "1")?true:false;
		const_var.b_t_M_R_t_R.add(rightLeanToBackBow);
		
		for(var i = 0;i<(params.leanR_p_d/2 - 2);i = i+legDistance)
		{
			var rightLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
			rightLeanToFrontBow.name = "rightLeanToFrontBow"+i;
			rightLeanToFrontBow.scale.set(params.p_w/2,0.2,1);	
			rightLeanToFrontBow.position.set(leanToPosR-0.08,params.leanR_p_h + leanTohIncR + 0.03,i.toFixed(2));	
			rightLeanToFrontBow.rotation.z = -bowsRotation[params.b_l_t_r_pR];
			rightLeanToFrontBow.scale.x = params.leanR_p_w + bowsScale[params.b_l_t_r_pR][2*params.leanR_p_w];
			rightLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;

			var rightLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		    rightLeanToFrontBowR.name = "rightLeanToFrontBowR"+i;
		    rightLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
		    rightLeanToFrontBowR.position.set(leanToPosR-0.1,params.leanR_p_h + leanTohIncR + 0.05,i.toFixed(2));	
		    rightLeanToFrontBowR.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		    rightLeanToFrontBowR.scale.x = (params.leanR_p_w +  widthBowR[params.b_l_t_r_pR][params.leanR_p_w]);
		    rightLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;

			var leanToRightFrontBow1 = new THREE.Mesh(rightBowGeo1,rightBowBowMaterial1);
			leanToRightFrontBow1.name = "leanToRightFrontBow1"+i;
			leanToRightFrontBow1.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.17,params.leanR_p_h -posBow1[params.b_l_t_r_pR],i.toFixed(2));	
			leanToRightFrontBow1.rotation.z = -rotBow1[params.b_l_t_r_pR];
			leanToRightFrontBow1.scale.set(1.9,0.21,1);
			leanToRightFrontBow1.visible = (params.p_r_s == "1")?true:false;

			var leanToRightFrontBow2 = new THREE.Mesh(rightBowGeo2,rightBowBowMaterial2);
			leanToRightFrontBow2.name = "leanToRightFrontBow2"+i;
			leanToRightFrontBow2.position.set(-(params.p_w/-2 - posBow2[params.b_l_t_r_pR][params.leanR_p_w]),params.leanR_p_h -0.11,i.toFixed(2));	
			leanToRightFrontBow2.rotation.z = -0.91;
			leanToRightFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pR],1);
			leanToRightFrontBow2.visible = (params.p_r_s == "1")?true:false; 

			var leanToRightFrontBow3 = new THREE.Mesh(rightBowGeo3,rightBowBowMaterial3);
		    leanToRightFrontBow3.name = "leanToRightFrontBow2"+i;
		    leanToRightFrontBow3.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.065,params.leanR_p_h-0.15,i.toFixed(2));	
		    leanToRightFrontBow3.rotation.z = -1.13;
		    leanToRightFrontBow3.scale.set(0.18,0.2,1);
		    leanToRightFrontBow3.visible = (params.p_r_s == "1")?true:false; 

			var leanToRightFrontCorner = new THREE.Mesh(rightCornerGeo,rightCornerBowMaterial);
			leanToRightFrontCorner.name = "leanToRightFrontCorner"+i;
			leanToRightFrontCorner.position.set((params.p_w/2 + params.leanR_p_w)-0.60,params.leanR_p_h - posCorner[params.b_l_t_r_pR],i.toFixed(2));	
			leanToRightFrontCorner.rotation.z = -1;
			leanToRightFrontCorner.scale.set(1.9,0.25,1);
			leanToRightFrontCorner.visible = (params.p_r_s != "1")?true:false;

			var leanToRightFrontCornerR = new THREE.Mesh(rightCornerGeoR,rightCornerBowMaterialR);
			leanToRightFrontCornerR.name = "leanToRightFrontCornerR"+i;
			leanToRightFrontCornerR.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.58,params.leanR_p_h -posCorner[params.b_l_t_r_pR],i.toFixed(2));	
			leanToRightFrontCornerR.rotation.z = -1;
			leanToRightFrontCornerR.scale.set(1.9,0.25,1);
			leanToRightFrontCornerR.visible = (params.p_r_s == "1")?true:false;
  
			var leanToRightBackCorner = new THREE.Mesh(rightCornerGeo,rightCornerBowMaterial);
			leanToRightBackCorner.name = "leanToRightBackCorner";
			leanToRightBackCorner.position.set((params.p_w/2 + params.leanR_p_w)-0.60,params.leanR_p_h - posCorner[params.b_l_t_r_pR],-i.toFixed(2));	
			leanToRightBackCorner.rotation.z = -1;
			leanToRightBackCorner.scale.set(1.9,0.25,1);
			leanToRightBackCorner.visible = (params.p_r_s != "1")?true:false;

			var leanToRightBackCornerR = new THREE.Mesh(rightCornerGeo,rightCornerBowMaterial);
			leanToRightBackCornerR.name = "leanToRightBackCornerR"+i;
			leanToRightBackCornerR.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.58,params.leanR_p_h -posCorner[params.b_l_t_r_pR],-i.toFixed(2));	
			leanToRightBackCornerR.rotation.z = -1.;
			leanToRightBackCornerR.scale.set(1.9,0.25,1);
			leanToRightBackCornerR.visible = (params.p_r_s == "1")?true:false;

			
			var rightLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
			rightLeanToBackBow.name = "rightLeanToBackBow"+i;
			rightLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
			rightLeanToBackBow.position.set(leanToPosR-0.08,params.leanR_p_h + leanTohIncR + 0.03,-i.toFixed(2));	
			rightLeanToBackBow.rotation.z = -bowsRotation[params.b_l_t_r_pR];
			rightLeanToBackBow.scale.x = params.leanR_p_w + bowsScale[params.b_l_t_r_pR][2*params.leanR_p_w];
			rightLeanToBackBow.visible = (params.p_r_s != "1")?true:false;

			var rightLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		    rightLeanToBackBowR.name = "rightLeanToBackBowR"+i;
		    rightLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
		    rightLeanToBackBowR.position.set(leanToPosR-0.1,params.leanR_p_h + leanTohIncR + 0.05,-i.toFixed(2));	
		    rightLeanToBackBowR.rotation.z = -bowsRotation[params.b_l_t_r_pR];
		    rightLeanToBackBowR.scale.x = (params.leanR_p_w +  widthBowR[params.b_l_t_r_pR][params.leanR_p_w]);
		    rightLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;

			var leanToRightBackBow1 = new THREE.Mesh(rightBowGeo1,rightBowBowMaterial1);
			leanToRightBackBow1.name = "leanToRightBackBow1"+i;
			leanToRightBackBow1.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.17,params.leanR_p_h -posBow1[params.b_l_t_r_pR],-i.toFixed(2));	
			leanToRightBackBow1.rotation.z = -rotBow1[params.b_l_t_r_pR];
			leanToRightBackBow1.scale.set(1.9,0.21,1);
			leanToRightBackBow1.visible = (params.p_r_s == "1")?true:false;

			var leanToRightBackBow2 = new THREE.Mesh(rightBowGeo2,rightBowBowMaterial2);
		    leanToRightBackBow2.name = "leanToRightBackBow2"+i;
		    leanToRightBackBow2.position.set(-(params.p_w/-2 - posBow2[params.b_l_t_r_pR][params.leanR_p_w]),params.leanR_p_h -0.11,-i.toFixed(2));	
		    leanToRightBackBow2.rotation.z = -0.91;
		    leanToRightBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pR],1);
		    leanToRightBackBow2.visible = (params.p_r_s == "1")?true:false; 

			var leanToRightBackBow3 = new THREE.Mesh(rightBowGeo3,rightBowBowMaterial3);
		    leanToRightBackBow3.name = "leanToRightBackBow2"+i;
		    leanToRightBackBow3.position.set(-(params.p_w/-2 - params.leanR_p_w)-0.065,params.leanR_p_h-0.15,-i.toFixed(2));	
		    leanToRightBackBow3.rotation.z = -1.13;
		    leanToRightBackBow3.scale.set(0.18,0.2,1);
		    leanToRightBackBow3.visible = (params.p_r_s == "1")?true:false; 
			
			if(i!=0)
			{
				const_var.b_t_M_R_t_R.add(rightLeanToFrontBow);
				const_var.b_t_M_R_t_R.add(rightLeanToFrontBowR);
				const_var.b_t_M_R_t_R.add(leanToRightFrontBow1);
				const_var.b_t_M_R_t_R.add(leanToRightFrontBow2);
				const_var.b_t_M_R_t_R.add(leanToRightFrontBow3);

				const_var.b_t_M_R_t_R.add(rightLeanToBackBow);
				const_var.b_t_M_R_t_R.add(rightLeanToBackBowR);
				const_var.b_t_M_R_t_R.add(leanToRightBackBow1);
				const_var.b_t_M_R_t_R.add(leanToRightBackBow2);
				const_var.b_t_M_R_t_R.add(leanToRightBackBow3);

				const_var.b_t_M_R_t_R.add(leanToRightFrontCorner);
				const_var.b_t_M_R_t_R.add(leanToRightFrontCornerR);
			    const_var.b_t_M_R_t_R.add(leanToRightBackCorner);
				const_var.b_t_M_R_t_R.add(leanToRightBackCornerR);
			}
			else
			{
				rightLeanToFrontBow.position.set(leanToPosR-0.08,params.leanR_p_h + leanTohIncR + 0.03,0);
				const_var.b_t_M_R_t_R.add(rightLeanToFrontBow);
				const_var.b_t_M_R_t_R.add(rightLeanToFrontBowR);
				const_var.b_t_M_R_t_R.add(leanToRightFrontBow1);
				const_var.b_t_M_R_t_R.add(leanToRightFrontBow2);
				const_var.b_t_M_R_t_R.add(leanToRightFrontBow3);
				
				// const_var.b_t_M_R_t_R.add(rightLeanToBackBowR);
				// const_var.b_t_M_R_t_R.add(leanToRightBackBow1);
				// const_var.b_t_M_R_t_R.add(leanToRightBackBow2);
				// const_var.b_t_M_R_t_R.add(leanToRightBackBow3);

				const_var. b_t_M_R_t_R.add(leanToRightFrontCorner);
				const_var.b_t_M_R_t_R.add(leanToRightFrontCornerR);
				// const_var.b_t_M_R_t_R.add(leanToRightBackCornerR);
			}
		
		}
	
	} 
	Check And Add Back Lean To Bows
	if(params.add_back_lean) {
	var leanToPosB = params.p_d/-2 - params.leanB_p_w/2;
	var leanTohIncB = roofMiddleHeight[params.b_l_t_r_pB][2*params.leanB_p_w]/2 - 0.1;
	var bowMaterial1 = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	
	//Bow for left leanto in back position
	var backLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
	backLeanToFrontBow.name = "backLeanToFrontBow";
	backLeanToFrontBow.scale.set(params.p_d/2,0.2,1);	
	backLeanToFrontBow.position.set(leanToPosB+0.08,params.leanB_p_h + leanTohIncB + 0.03,params.leanB_p_d/2 - 0.12);	
	backLeanToFrontBow.rotation.z = bowsRotation[params.b_l_t_r_pB];
	backLeanToFrontBow.scale.x = params.leanB_p_w + bowsScale[params.b_l_t_r_pB][2*params.leanB_p_w];
	backLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_B_t_B.add(backLeanToFrontBow);

	//Bow for left leanto regular in back position
	var backLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
	backLeanToFrontBowR.name = "backLeanToFrontBowR";
	backLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
	backLeanToFrontBowR.position.set(leanToPosB+0.1,params.leanB_p_h + leanTohIncB + 0.05,params.leanB_p_d/2 - 0.12);	
	backLeanToFrontBowR.rotation.z = bowsRotation[params.b_l_t_r_pB];
	backLeanToFrontBowR.scale.x = (params.leanB_p_w +  widthBowR[params.b_l_t_r_pB][params.leanB_p_w]);
	backLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_B_t_B.add(backLeanToFrontBowR);

	//Trim for left leanto regular in back position
	var backLeanToFrontTrim = new THREE.Mesh(bowGeometry,bowMaterial1);
	backLeanToFrontTrim.name = "backLeanToFrontTrim";
	backLeanToFrontTrim.scale.set(params.p_w/2,0.3,0.5);	
	backLeanToFrontTrim.position.set(leanToPosB+0.1,params.leanB_p_h + leanTohIncB + 0.07,params.leanB_p_d/2);	
	backLeanToFrontTrim.rotation.z = bowsRotation[params.b_l_t_r_pB];
	backLeanToFrontTrim.scale.x = (params.leanB_p_w +  widthBowR[params.b_l_t_r_pB][params.leanB_p_w]);
	backLeanToFrontTrim.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_B_t_B.add(backLeanToFrontTrim);

	//Trim for left leanto regular in back position
	var backLeanToBackTrim = new THREE.Mesh(bowGeometry,bowMaterial1);
	backLeanToBackTrim.name = "backLeanToBackTrim";
	backLeanToBackTrim.scale.set(params.p_w/2,0.3,0.5);	
	backLeanToBackTrim.position.set(leanToPosB+0.1,params.leanB_p_h + leanTohIncB + 0.07,params.leanB_p_d/-2);	
	backLeanToBackTrim.rotation.z = bowsRotation[params.b_l_t_r_pB];
	backLeanToBackTrim.scale.x = (params.leanB_p_w +  widthBowR[params.b_l_t_r_pB][params.leanB_p_w]);
	backLeanToBackTrim.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_B_t_B.add(backLeanToBackTrim);

	//Trim1 for left leanto regular in back position
	 var leanToFrontTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
	 var leanToLeftFrontTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	 var backLeanToFrontTrim1 = new THREE.Mesh(leanToFrontTrim1Geo,leanToLeftFrontTrim1Material);
	 backLeanToFrontTrim1.name = "backLeanToFrontTrim1";
	 backLeanToFrontTrim1.position.set((params.p_d/-2 - params.leanB_p_w)+posTrim2[params.b_l_t_r_pB],params.leanB_p_h -posBow1[params.b_l_t_r_pB]+0.02,params.leanB_p_d/2);	
	 backLeanToFrontTrim1.rotation.z = rotTrim2[params.b_l_t_r_pB][params.leanB_p_w];
	 backLeanToFrontTrim1.scale.set(scaleTrim2[params.b_l_t_r_pB],0.31,0.5);
	 backLeanToFrontTrim1.visible = (params.p_r_s == "1")?true:false; 
	 const_var.b_t_M_B_t_B.add(backLeanToFrontTrim1);

	 //Trim1 for left leanto regular in back position
	  var backLeanToBackTrim1Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
	  var backLeanToBackTrim1Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	  var backLeanToBackTrim1 = new THREE.Mesh(backLeanToBackTrim1Geo,backLeanToBackTrim1Material);
	  backLeanToBackTrim1.name = "backLeanToBackTrim1";
	  backLeanToBackTrim1.position.set((params.p_d/-2 - params.leanB_p_w)+posTrim2[params.b_l_t_r_pB],params.leanB_p_h -posBow1[params.b_l_t_r_pB]+0.02,params.leanB_p_d/-2);	
	  backLeanToBackTrim1.rotation.z = rotTrim2[params.b_l_t_r_pB][params.leanB_p_w];
	  backLeanToBackTrim1.scale.set(scaleTrim2[params.b_l_t_r_pB],0.31,0.5);
	  backLeanToBackTrim1.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToBackTrim1);

	  //Trim2 for left leanto regular in back position
	  var backLeanToFrontTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
	  var backLeanToFrontTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	  var backLeanToFrontTrim2 = new THREE.Mesh(backLeanToFrontTrim2Geo,backLeanToFrontTrim2Material);
	  backLeanToFrontTrim2.name = "backLeanToFrontTrim2";
	  backLeanToFrontTrim2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pB][params.leanB_p_w])+0.004,params.leanB_p_h -0.09,params.leanB_p_d/2);	
	  backLeanToFrontTrim2.rotation.z = 0.91;
	  backLeanToFrontTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_pB]+0.1,0.5);
	  backLeanToFrontTrim2.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToFrontTrim2);

	  //Trim2 for left leanto regular in back position
	   var backLeanToBackTrim2Geo = new THREE.BoxGeometry(0.07,0.6,0.2);
	   var backLeanToBackTrim2Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide});
	   var leanToleftBackTrim2 = new THREE.Mesh(backLeanToBackTrim2Geo,backLeanToBackTrim2Material);
	   leanToleftBackTrim2.name = "leanToleftBackTrim2";
	   leanToleftBackTrim2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pB][params.leanB_p_w])+0.004,params.leanB_p_h -0.09,params.leanB_p_d/-2);	
	   leanToleftBackTrim2.rotation.z = 0.91;
	   leanToleftBackTrim2.scale.set(1.75,scaleBow2[params.b_l_t_r_pB]+0.1,0.5);
	   leanToleftBackTrim2.visible = (params.p_r_s == "1")?true:false; 
	   const_var.b_t_M_B_t_B.add(leanToleftBackTrim2);

	   //Trim3 for left leanto regular in back position
	   var backLeanToFrontTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
	   var leanToLeftFrontTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
	   var backLeanToFrontTrim3 = new THREE.Mesh(backLeanToFrontTrim3Geo,leanToLeftFrontTrim3Material);
	   backLeanToFrontTrim3.name = "backLeanToFrontTrim3";
	   backLeanToFrontTrim3.position.set((params.p_d/-2 - params.leanB_p_w)+0.064,params.leanB_p_h-0.142,params.leanB_p_d/2);	
	   backLeanToFrontTrim3.rotation.z = 1.2;
	   backLeanToFrontTrim3.scale.set(0.34,0.3,0.5);
	   backLeanToFrontTrim3.visible = (params.p_r_s == "1")?true:false; 
	   const_var.b_t_M_B_t_B.add(backLeanToFrontTrim3);

	   //Trim3 for left leanto regular in back position
		 var backLeanToBackTrim3Geo = new THREE.BoxGeometry(0.2,0.6,0.2);
		 var backLeanToBackTrim3Material = new THREE.MeshBasicMaterial({color:0x0E6655,side:THREE.DoubleSide,});
		 var backLeanToBackTrim3 = new THREE.Mesh(backLeanToBackTrim3Geo,backLeanToBackTrim3Material);
		 backLeanToBackTrim3.name = "backLeanToBackTrim3";
		 backLeanToBackTrim3.position.set((params.p_d/-2 - params.leanB_p_w)+0.064,params.leanB_p_h-0.142,params.leanB_p_d/-2);	
		 backLeanToBackTrim3.rotation.z = 1.2;
		 backLeanToBackTrim3.scale.set(0.34,0.3,0.5);
		 backLeanToBackTrim3.visible = (params.p_r_s == "1")?true:false; 
		 const_var.b_t_M_B_t_B.add(backLeanToBackTrim3);

		 //Bow1 for left leanto regular in back position
	  var leftBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
	  var leftBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	  var backLeanToFrontBow1 = new THREE.Mesh(leftBowGeo1,leftBowBowMaterial1);
	  backLeanToFrontBow1.name = "backLeanToFrontBow1";
	  backLeanToFrontBow1.position.set((params.p_d/-2 - params.leanB_p_w)+0.17,params.leanB_p_h -posBow1[params.b_l_t_r_pB],params.leanB_p_d/2 - 0.12);	
	  backLeanToFrontBow1.rotation.z = rotBow1[params.b_l_t_r_pB];
	  backLeanToFrontBow1.scale.set(1.9,0.21,1);
	  backLeanToFrontBow1.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToFrontBow1);

	  //Bow2 for left leanto regular in back position
	   var leftBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
	   var leftBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	   var backLeanToFrontBow2 = new THREE.Mesh(leftBowGeo2,leftBowBowMaterial2);
	   backLeanToFrontBow2.name = "backLeanToFrontBow2";
	   backLeanToFrontBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pB][params.leanB_p_w]),params.leanB_p_h -0.11,params.leanB_p_d/2 - 0.12);	
	   backLeanToFrontBow2.rotation.z = 0.91;
	   backLeanToFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pB],1);
	   backLeanToFrontBow2.visible = (params.p_r_s == "1")?true:false; 
	   const_var.b_t_M_B_t_B.add(backLeanToFrontBow2);

	   //Bow3 for left leanto regular in back position
	  var leftBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
	  var leftBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
	  var backLeanToFrontBow3 = new THREE.Mesh(leftBowGeo3,leftBowBowMaterial3);
	  backLeanToFrontBow3.name = "backLeanToFrontBow3";
	  backLeanToFrontBow3.position.set((params.p_d/-2 - params.leanB_p_w)+0.065,params.leanB_p_h-0.15,params.leanB_p_d/2 - 0.12);	
	  backLeanToFrontBow3.rotation.z = 1.13;
	  backLeanToFrontBow3.scale.set(0.18,0.2,1);
	  backLeanToFrontBow3.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToFrontBow3);

	  //corner for left leanto in back position
	  var leftCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
	  var leftCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	  var backLeanToFrontCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
	  backLeanToFrontCorner.name = "backLeanToFrontCorner";
	  backLeanToFrontCorner.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],params.leanB_p_d/2 - 0.12);	
	  backLeanToFrontCorner.rotation.z = 1;
	  backLeanToFrontCorner.scale.set(1.9,0.25,1);
	  backLeanToFrontCorner.visible = (params.p_r_s != "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToFrontCorner);

	   //corner for left leanto regular in back position
	  var leftCornerGeo = new THREE.BoxGeometry(0.98,0.6,0.2);
	  var leftCornerBowMaterial = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	  var backLeanToFrontCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
	  backLeanToFrontCornerR.name = "backLeanToFrontCornerR";
	  backLeanToFrontCornerR.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],params.leanB_p_d/2 - 0.12);	
	  backLeanToFrontCornerR.rotation.z = 1;
	  backLeanToFrontCornerR.scale.set(1.9,0.25,1);
	  backLeanToFrontCornerR.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToFrontCornerR);
	
	   //Bow for left leanto in back position
	var backLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
	backLeanToBackBow.name = "backLeanToBackBow";
	backLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
	backLeanToBackBow.position.set(leanToPosB+0.08,params.leanB_p_h + leanTohIncB + 0.03,params.leanB_p_d/-2 + 0.12);	
	backLeanToBackBow.rotation.z = bowsRotation[params.b_l_t_r_pB];
	backLeanToBackBow.scale.x = params.leanB_p_w + bowsScale[params.b_l_t_r_pB][2*params.leanB_p_w];
	backLeanToBackBow.visible = (params.p_r_s != "1")?true:false;
	const_var.b_t_M_B_t_B.add(backLeanToBackBow);

	//Bow for left leanto regular in back position
	var backLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
	backLeanToBackBowR.name = "backLeanToBackBowR";
	backLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
	backLeanToBackBowR.position.set(leanToPosB+0.1,params.leanB_p_h + leanTohIncB + 0.05,params.leanB_p_d/-2 + 0.12);	
	backLeanToBackBowR.rotation.z = bowsRotation[params.b_l_t_r_pB];
	backLeanToBackBowR.scale.x = (params.leanB_p_w +  widthBowR[params.b_l_t_r_pB][params.leanB_p_w]);
	backLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;
	const_var.b_t_M_B_t_B.add(backLeanToBackBowR);

	//corner for left leanto in back position
	 var backLeanToBackCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
	 backLeanToBackCorner.name = "backLeanToBackCorner";
	 backLeanToBackCorner.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],params.leanB_p_d/-2 + 0.12);	
	 backLeanToBackCorner.rotation.z = 1.;
	 backLeanToBackCorner.scale.set(1.9,0.25,1);
	 backLeanToBackCorner.visible = (params.p_r_s != "1")?true:false;
	 const_var.b_t_M_B_t_B.add(backLeanToBackCorner);

	  //corner for left leanto regular in back position
	  var backLeanToBackCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
	  backLeanToBackCornerR.name = "backLeanToBackCornerR";
	  backLeanToBackCornerR.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],params.leanB_p_d/-2 + 0.12);	
	  backLeanToBackCornerR.rotation.z = 1.;
	  backLeanToBackCornerR.scale.set(1.9,0.25,1);
	  backLeanToBackCornerR.visible = (params.p_r_s == "1")?true:false;
	  const_var.b_t_M_B_t_B.add(backLeanToBackCornerR);

	  var lefRimndr = params.p_w % legDistance;
	  var lefDiff = legDistance + lefRimndr / legDistance;


	   var leftBackBowGeo1 = new THREE.BoxGeometry(0.07,0.6,0.2);
	   var leftBackBowBowMaterial1 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	   var backLeanToBackBow1 = new THREE.Mesh(leftBackBowGeo1,leftBackBowBowMaterial1);
	   backLeanToBackBow1.name = "backLeanToBackBow1";
	   backLeanToBackBow1.position.set((params.p_d/-2 - params.leanB_p_w)+0.17,params.leanB_p_h -posBow1[params.b_l_t_r_pB],params.leanB_p_d/-2 + 0.12);	
	  backLeanToBackBow1.rotation.z = rotBow1[params.b_l_t_r_pB];
	  backLeanToBackBow1.scale.set(1.9,0.21,1);
	   backLeanToBackBow1.visible = (params.p_r_s == "1")?true:false; 
	   const_var.b_t_M_B_t_B.add(backLeanToBackBow1)

	  var leftBackBowGeo2 = new THREE.BoxGeometry(0.07,0.6,0.2);
	  var leftBackBowBowMaterial2 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide});
	  var backLeanToBackBow2 = new THREE.Mesh(leftBackBowGeo2,leftBackBowBowMaterial2);
	  backLeanToBackBow2.name = "backLeanToBackBow2";
	  backLeanToBackBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pB][params.leanB_p_w]),params.leanB_p_h -0.11,params.leanB_p_d/-2 + 0.12);	
	  backLeanToBackBow2.rotation.z = 0.91;
	  backLeanToBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pB],1);
	  backLeanToBackBow2.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToBackBow2);

	  var leftBackBowGeo3 = new THREE.BoxGeometry(0.2,0.6,0.2);
	  var leftBackBowBowMaterial3 = new THREE.MeshBasicMaterial({color:0xC9C6C6,side:THREE.DoubleSide,});
	  var backLeanToBackBow3 = new THREE.Mesh(leftBackBowGeo3,leftBackBowBowMaterial3);
	  backLeanToBackBow3.name = "backLeanToBackBow3";
	  backLeanToBackBow3.position.set((params.p_d/-2 - params.leanB_p_w)+0.065,params.leanB_p_h-0.15,params.leanB_p_d/-2 + 0.12);	
	  backLeanToBackBow3.rotation.z = 1.13;
	  backLeanToBackBow3.scale.set(0.18,0.2,1);
	  backLeanToBackBow3.visible = (params.p_r_s == "1")?true:false; 
	  const_var.b_t_M_B_t_B.add(backLeanToBackBow3);
	
	for(var i = 0;i<(params.leanB_p_d/2 - 2);i = i+legDistance)
	{
		var backLeanToFrontBow = new THREE.Mesh(bowGeometry,bowMaterial);
		backLeanToFrontBow.name = "backLeanToFrontBow"+i;
		backLeanToFrontBow.scale.set(params.p_w/2,0.2,1);	
		backLeanToFrontBow.position.set(leanToPosB+0.08,params.leanB_p_h + leanTohIncB + 0.03,i.toFixed(2));	
		backLeanToFrontBow.rotation.z = bowsRotation[params.b_l_t_r_pB];
		backLeanToFrontBow.scale.x = params.leanB_p_w + bowsScale[params.b_l_t_r_pB][2*params.leanB_p_w];
		backLeanToFrontBow.visible = (params.p_r_s != "1")?true:false;

		var backLeanToFrontBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		backLeanToFrontBowR.name = "backLeanToFrontBowR"+i;
		backLeanToFrontBowR.scale.set(params.p_w/2,0.2,1);	
		backLeanToFrontBowR.position.set(leanToPosB+0.1,params.leanB_p_h + leanTohIncB + 0.05,i.toFixed(2));	
		backLeanToFrontBowR.rotation.z = bowsRotation[params.b_l_t_r_pB];
		backLeanToFrontBowR.scale.x = (params.leanB_p_w +  widthBowR[params.b_l_t_r_pB][params.leanB_p_w]);
		backLeanToFrontBowR.visible = (params.p_r_s == "1")?true:false;

		var backLeanToFrontBow1 = new THREE.Mesh(leftBowGeo1,leftBowBowMaterial1);
		backLeanToFrontBow1.name = "backLeanToFrontBow1" + i;
		backLeanToFrontBow1.position.set((params.p_d/-2 - params.leanB_p_w)+0.17,params.leanB_p_h -posBow1[params.b_l_t_r_pB],i.toFixed(2));	
		backLeanToFrontBow1.rotation.z = rotBow1[params.b_l_t_r_pB];
		backLeanToFrontBow1.scale.set(1.9,0.21,1);
		backLeanToFrontBow1.visible = (params.p_r_s == "1")?true:false;

		var backLeanToFrontBow2 = new THREE.Mesh(leftBowGeo2,leftBowBowMaterial2);
		backLeanToFrontBow2.name = "backLeanToFrontBow2" + i;
		backLeanToFrontBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pB][params.leanB_p_w]),params.leanB_p_h -0.11,i.toFixed(2));	
		backLeanToFrontBow2.rotation.z = 0.91;
		backLeanToFrontBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pB],1);
		backLeanToFrontBow2.visible = (params.p_r_s == "1")?true:false; 

		var backLeanToFrontBow3 = new THREE.Mesh(leftBowGeo3,leftBowBowMaterial3);
		backLeanToFrontBow3.name = "backLeanToFrontBow3"+i;
		backLeanToFrontBow3.position.set((params.p_d/-2 - params.leanB_p_w)+0.065,params.leanB_p_h-0.15,i.toFixed(2));	
		backLeanToFrontBow3.rotation.z = 1.13;
		backLeanToFrontBow3.scale.set(0.18,0.2,1);
		backLeanToFrontBow3.visible = (params.p_r_s == "1")?true:false; 

		var backLeanToFrontCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		backLeanToFrontCorner.name = "backLeanToFrontCorner"+i;
		backLeanToFrontCorner.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],i.toFixed(2));	
		backLeanToFrontCorner.rotation.z = 1;
		backLeanToFrontCorner.scale.set(1.9,0.25,1);
		backLeanToFrontCorner.visible = (params.p_r_s != "1")?true:false; 

		var backLeanToFrontCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		backLeanToFrontCornerR.name = "backLeanToFrontCornerR"+i;
		backLeanToFrontCornerR.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],i.toFixed(2));	
		backLeanToFrontCornerR.rotation.z = 1;
		backLeanToFrontCornerR.scale.set(1.9,0.25,1);
		backLeanToFrontCornerR.visible = (params.p_r_s == "1")?true:false; 
		
		var backLeanToBackBow = new THREE.Mesh(bowGeometry,bowMaterial);
		backLeanToBackBow.name = "leftBacktLeg"+i;
		backLeanToBackBow.scale.set(params.p_w/2,0.2,1);	
		backLeanToBackBow.position.set(leanToPosB+0.08,params.leanB_p_h + leanTohIncB + 0.03,-i.toFixed(2));	
		backLeanToBackBow.rotation.z = bowsRotation[params.b_l_t_r_pB];
		backLeanToBackBow.scale.x = params.leanB_p_w + bowsScale[params.b_l_t_r_pB][2*params.leanB_p_w];
		backLeanToBackBow.visible = (params.p_r_s != "1")?true:false;

		var backLeanToBackBowR = new THREE.Mesh(bowGeometry,bowMaterial);
		backLeanToBackBowR.name = "backLeanToBackBowR"+i;
		backLeanToBackBowR.scale.set(params.p_w/2,0.2,1);	
		backLeanToBackBowR.position.set(leanToPosB+0.1,params.leanB_p_h + leanTohIncB + 0.05,-i.toFixed(2));	
		backLeanToBackBowR.rotation.z = bowsRotation[params.b_l_t_r_pB];
		backLeanToBackBowR.scale.x = (params.leanB_p_w +  widthBowR[params.b_l_t_r_pB][params.leanB_p_w]);
		backLeanToBackBowR.visible = (params.p_r_s == "1")?true:false;

		var backLeanToBackCorner = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		backLeanToBackCorner.name = "backLeanToBackCorner"+i;
		backLeanToBackCorner.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],-i.toFixed(2));	
		backLeanToBackCorner.rotation.z = 1.;
		backLeanToBackCorner.scale.set(1.9,0.25,1);
		backLeanToBackCorner.visible = (params.p_r_s != "1")?true:false;

		var backLeanToBackCornerR = new THREE.Mesh(leftCornerGeo,leftCornerBowMaterial);
		backLeanToBackCornerR.name = "backLeanToBackCornerR"+i;
		backLeanToBackCornerR.position.set((params.p_d/-2 - params.leanB_p_w)+0.58,params.leanB_p_h -posCorner[params.b_l_t_r_pB],-i.toFixed(2));	
		backLeanToBackCornerR.rotation.z = 1.;
		backLeanToBackCornerR.scale.set(1.9,0.25,1);
		backLeanToBackCornerR.visible = (params.p_r_s == "1")?true:false;

		var backLeanToBackBow1 = new THREE.Mesh(leftBackBowGeo1,leftBackBowBowMaterial1);
		   backLeanToBackBow1.name = "backLeanToBackBow1" +i;
		   backLeanToBackBow1.position.set((params.p_d/-2 - params.leanB_p_w)+0.17,params.leanB_p_h -posBow1[params.b_l_t_r_pB],-i.toFixed(2));	
		  backLeanToBackBow1.rotation.z = rotBow1[params.b_l_t_r_pB];
		  backLeanToBackBow1.scale.set(1.9,0.21,1);
		   backLeanToBackBow1.visible = (params.p_r_s == "1")?true:false; 

	   var backLeanToBackBow2 = new THREE.Mesh(leftBackBowGeo2,leftBackBowBowMaterial2);
	   backLeanToBackBow2.name = "backLeanToBackBow2" + i;
	   backLeanToBackBow2.position.set((params.p_d/-2 - posBow2[params.b_l_t_r_pB][params.leanB_p_w]),params.leanB_p_h -0.11,-i.toFixed(2));	
	   backLeanToBackBow2.rotation.z = 0.91;
	   backLeanToBackBow2.scale.set(1.5,scaleBow2[params.b_l_t_r_pB],1);
	   backLeanToBackBow2.visible = (params.p_r_s == "1")?true:false; 

	   var backLeanToBackBow3 = new THREE.Mesh(leftBackBowGeo3,leftBackBowBowMaterial3);
	   backLeanToBackBow3.name = "backLeanToBackBow2"+i;
	   backLeanToBackBow3.position.set((params.p_d/-2 - params.leanB_p_w)+0.065,params.leanB_p_h-0.15,-i.toFixed(2));	
	   backLeanToBackBow3.rotation.z = 1.13;
	   backLeanToBackBow3.scale.set(0.18,0.2,1);
	   backLeanToBackBow3.visible = (params.p_r_s == "1")?true:false; 

		if(i!=0)
		{

			const_var.b_t_M_B_t_B.add(backLeanToFrontCorner);
			const_var.b_t_M_B_t_B.add(backLeanToFrontCornerR);
			const_var.b_t_M_B_t_B.add(backLeanToBackCorner);
			const_var.b_t_M_B_t_B.add(backLeanToBackCornerR);

			const_var.b_t_M_B_t_B.add(backLeanToFrontBow1);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBow2);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBow3);
			const_var.b_t_M_B_t_B.add(backLeanToBackBow1);
			const_var.b_t_M_B_t_B.add(backLeanToBackBow2);
			const_var.b_t_M_B_t_B.add(backLeanToBackBow3);

			

			const_var.b_t_M_B_t_B.add(backLeanToFrontBow);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBowR);
			const_var.b_t_M_B_t_B.add(backLeanToBackBow);
			const_var.b_t_M_B_t_B.add(backLeanToBackBowR);
		}
		else
		{
			backLeanToFrontBow.position.set(leanToPosB+0.08,params.leanB_p_h + leanTohIncB + 0.03,0);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBow);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBowR);
			// const_var.b_t_M_B_t_B.add(backLeanToBackBowR);

			const_var.b_t_M_B_t_B.add(backLeanToFrontCorner);
			const_var.b_t_M_B_t_B.add(backLeanToFrontCornerR);
			// const_var.b_t_M_B_t_B.add(backLeanToBackCorner);
			// const_var.b_t_M_B_t_B.add(backLeanToBackCornerR);

			const_var.b_t_M_B_t_B.add(backLeanToFrontBow1);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBow2);
			const_var.b_t_M_B_t_B.add(backLeanToFrontBow3);
			// const_var.b_t_M_B_t_B.add(backLeanToBackBow1);
			// const_var.b_t_M_B_t_B.add(backLeanToBackBow2);
			// const_var.b_t_M_B_t_B.add(backLeanToBackBow3);
		}	
		const_var.b_t_M_B_t_B.rotation.set(0,Math.PI/-2,0);
	}
}

	if(params.leantoAlignmentRight=="1"){
		const_var.b_t_M_R_t_R.position.z = 0;
	    }
	if(params.leantoAlignmentRight=="2"){
		const_var.b_t_M_R_t_R.position.z = params.p_d/2-params.leanR_p_d/2;
	    }
	if(params.leantoAlignmentRight=="3"){
		const_var.b_t_M_R_t_R.position.z = -params.p_d/2+params.leanR_p_d/2;
	    }
	if(params.leantoAlignmentLeft=="1"){
		const_var.b_t_M_L_t_L.position.z = 0;
		}
	if(params.leantoAlignmentLeft=="2"){
		const_var.b_t_M_L_t_L.position.z = params.p_d/2-params.lean_p_d/2;
		}
	if(params.leantoAlignmentLeft=="3"){
	    const_var.b_t_M_L_t_L.position.z = -params.p_d/2+params.lean_p_d/2;
		}
	if(params.leantoAlignmentFront == "1"){
		const_var.b_t_M_F_t_F.position.x = 0;
		}
	if(params.leantoAlignmentFront == "2"){
		const_var.b_t_M_F_t_F.position.x = -params.p_w/2+params.leanF_p_d/2 ;
		}
	if(params.leantoAlignmentFront == "3"){
	    const_var.b_t_M_F_t_F.position.x = params.p_w/2-params.leanF_p_d/2;
		}
	if(params.leantoAlignmentBack=="1"){
		const_var.b_t_M_B_t_B.position.x = 0;
		}
	if(params.leantoAlignmentBack=="2"){
		const_var.b_t_M_B_t_B.position.x = params.p_w/2-params.leanB_p_d/2 ;
		}
	if(params.leantoAlignmentBack=="3"){
	    const_var.b_t_M_B_t_B.position.x = -params.p_w/2+params.leanB_p_d/2;
		} 
	*/
}

	